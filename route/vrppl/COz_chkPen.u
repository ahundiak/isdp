/* $Id: COz_chkPen.u,v 1.1 2001/08/27 21:35:57 ramarao Exp $  */
/***************************************************************************
 * I/ROUTE
 *
 * File:        route/vrppl/COz_chkPen.u
 *
 * Description: Validate penMacros to see they have pcgMacro children.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_chkPen.u,v $
 *      Revision 1.1  2001/08/27 21:35:57  ramarao
 *      Implemented CR# 5361.
 *
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      08/27/01        Rama Rao        File Creation ( CR# 5361 ).
 ***************************************************************************/

#include "VDppl.h"
#include "VDobj.h"
#include "vdVALmacros.h"
#include "VDchn.h"

extern 	VD_findall_objects_in_range(), VD_matchRE();

extern GRclassid	OPP_nci_macro_class_id;

main()
{
IGRlong                 sts, msg;
IGRint                  i, j, loc_cnt, nb_class, mac_cnt, child_cnt, state;
IGRchar			macName[128], penName[128], 
			unit_no[128], tmpStr[128];
IGRboolean		atleast_one;
GRclassid               classid[1];
GRspacenum		osnum;
GRrange			range;
struct GRid             obj_chk, childID;
struct GRmd_env		loc_env;
struct GRobj_env	*loc_list;
TVDvlaID 		childVla;

   nb_class  = 1;
   loc_cnt   = 0;
   loc_list  = NULL;
   mac_cnt   = 0;
   atleast_one = FALSE;

   ci$get_module_info( md_env = &loc_env );
   osnum = loc_env.md_id.osnum;

   classid[0] = OPP_nci_macro_class_id;

   ci$get( string = unit_no,
           prompt = "Enter the Unit Number" );
   if( unit_no[0] == '\0' )  return 1;

   vd$VAL_openLog();

   loc_cnt = 0;

   range[0] = -1e+10; range[1] = -1e+10; range[2] = -1e+10;
   range[3] =  1e+10; range[4] =  1e+10; range[5] =  1e+10;

   VD_findall_objects_in_range( range, nb_class, classid,
                       TRUE, loc_env, &loc_cnt, &loc_list );
   if( !loc_cnt )  
   {
      sprintf( tmpStr, "No Penetrations Found for Unit Entered(%s).",
			unit_no );
      vd$VAL_addInfo( Text = tmpStr );
      goto wrapup;
   }

   sprintf( tmpStr, "*%s*", unit_no );

   for( i=0; i<loc_cnt; i=i+1 )
   {
      obj_chk = loc_list[i].obj_id;

      ci$send( msg = message ACncpx.ACget_STATE( &state ),
               targetid = obj_chk.objid,
               targetos = obj_chk.osnum );
      if( state & ncpx_root ) continue;

      vdobj$Get( objID = &obj_chk, macName = macName );
      if( strcmp( macName, "penMacro" ) ) continue;

      vdobj$Get( objID = &obj_chk, objName = penName );
      if( !VD_matchRE( tmpStr, penName ) )  continue;

      loc_list[mac_cnt] = loc_list[i];
      mac_cnt = mac_cnt + 1 ;
   }

   if( mac_cnt == 0 )
   {
      sprintf( tmpStr, "No Penetrations Found for Unit Entered(%s).",
                       unit_no );
      vd$VAL_addInfo( Text = tmpStr );
      goto wrapup;
   }

   for( i=0; i<mac_cnt; i=i+1 )
   {
      obj_chk = loc_list[i].obj_id;

      vdvla_id$Construct( vla = &childVla );
      vdchn$GetChildrenByClass( objID   = &obj_chk,
                                classID = OPP_nci_macro_class_id,
                                vla     = &childVla  );
      child_cnt = vdvla_id$GetCnt( vla = &childVla );

      for( j=0; j<child_cnt; j=j+1 )
      {
          vdvla_id$GetAt( vla = &childVla ,nth = j,objID = &childID );
	  if( childID.objid == NULL_OBJID) continue;

	  vdobj$Get( objID = &childID, macName = macName );
          if( !strcmp( macName, "pcgMacro" ) ) break;
      }

      if( j == child_cnt )
      {
	   if( atleast_one == FALSE )
	   {
              vd$VAL_addInfo( 
		   Text = "Penetrations without a PCG macro:" );
	      vd$VAL_addInfo( Text = "" );
	      atleast_one = TRUE;
	   }
	   vdobj$Get( objID = &obj_chk, objName = penName );
           vd$VAL_addObject( GRid     = obj_chk,
                             PostText = penName );
      }
      vdvla_id$Delete( vla = &childVla );
   }

   if( atleast_one == FALSE )
   {
       vd$VAL_addInfo( 
          Text = "All Penetrations have PCG macros." );
   }

wrapup:
   vd$VAL_closeLog();
   if( loc_list  ) { free( loc_list  ); loc_list  = NULL; }
   return 1;
}
