/* $Id: COz_RepTag.u,v 1.2 2001/02/20 01:15:56 build Exp $ */

/*************************************************************************
 * I/ROUTE
 *
 * File:        vrppl/COz_RepTag.u
 *
 * Description:
 *	This file is the old version of the COz_ModTag.u file. Which user requested
 *  still have it. So renamed the older version of the COz_ModTag.u file.
 *
 *      This command allows the user to locate a ROUTE component to Modify its
 *	Tag Number. This also ensures that in that process the object Id of the
 *	Component won't change. As per Spec. only the single component should
 *	be allowed.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_RepTag.u,v $
 *      Revision 1.2  2001/02/20 01:15:56  build
 *      Replaced v_dbgmacros.h with product specific dbgmacros.h
 *
 *      Revision 1.1  2001/01/12 23:44:40  anand
 *      New PPLs added in Service Pack.
 *
# Revision 1.3  2000/06/23  13:47:42  pinnacle
# Replaced: route/vrppl/COz_RepTag.u for:  by apazhani for Service Pack
#
# Revision 1.2  2000/05/23  21:18:12  pinnacle
# Replaced: route/vrppl/COz_RepTag.u for:  by apazhani for Service Pack
#
# Revision 1.1  2000/05/16  18:35:38  pinnacle
# Created: route/vrppl/COz_RepTag.u by apazhani for Service Pack
#
 *
 * History:
 *
 *	Author		Date		Description
 *	Alwin		05/16/2000	Creation
 *
 **************************************************************************/

#include <stdio.h>
#include "ciminimum.h"
#include "cisymb.h"
#include "cieveryone.h"
#include "cimacros.h"
#include "cilocate.h"
#include "AS_status.h"
#include "igrdp.h"
#include "dp.h"
#include "go.h"
#include "grmacros.h"
#include "VRdef.h"
#include "VRdimdef.h"
#include "VRcompdef.h"
#include "VRstructs.h"
#include "VRmacros.h"
#include "ACattrib.h"
#include "ACrg_collect.h"
#include "parametric.h"
#include  "vrparameters.h"
#include "vrdbgmacros.h"
#include "nddef.h"
#include "ndmacros.h"

extern int printf(), VRGetMatrix();
extern	int UI_message();
extern	int UI_status();
extern	int NDwait_batch();
extern	int NDexec_batch();
extern int GRsymbology_options(), GRdisplay_object(); 
extern	int VDPPmeUpdate();

main()
{
	struct GRsymbology symb;
	IGRdouble	dMatrix[16],dPriOrie,dSecOrie;
	long 		retmsg;
	int 		status,i, count, cn_type, msg;
	short		nPriEnd, nSecEnd;
	struct GRid	CompId,PriId,SecId;
	struct GRid	buff[3];
	struct GRid	*buff1;
	struct GRmd_env	md_env;

	int	Index;
	char szTagNumber[256], tempString[256];
	struct ret_struct AttrSt;
	struct VRGenInfo CompInstance;

  while (1)
  {
	 szTagNumber[0] = '\0';

	 /* Locate elements to modify */
	 status = 
	 ci$locate( 	obj              = &CompId.objid,
			 osnum            = &CompId.osnum,
			 classes 	 = "VRGeneric",
			 md_env		 = &md_env,
			 prompt           = "Identify component");
	 // if(!(status&1)) exit;

#ifdef vdsDEBUG
	 printf ("Located Component id = <%d,%d>\n",CompId.objid,CompId.osnum);
#endif

	 /*C get the component Tag Number. The Tag Number is stored as 
	 "Component Number" in the instance data */
	 status =
	 ci$send ( msg = message VRGeneric.VRGetInstance(  
				&retmsg, &CompInstance ),
	     targetid = CompId.objid,
	     targetos = CompId.osnum );
	 
#ifdef vdsDEBUG
 printf ("\n Tag Number of Component from Instance : <%s>\n", 
				CompInstance.szNumber );
#endif

	 sprintf( tempString, "Old Tag Number : %s", CompInstance.szNumber );
	 UI_status( tempString );

	 ci$get(
	 prompt  = "Key in the New Tag Number",
	 string  = szTagNumber );

	 if( strlen( szTagNumber ) < 13 )
	 {
	       strcpy( CompInstance.szNumber, szTagNumber );

	       status =
	       ci$send ( msg = message VRGeneric.VRSetInstance
			   (  &retmsg, &CompInstance ),
		   targetid = CompId.objid,
		   targetos = CompId.osnum );
	      
		cn_type = ND_COMP;
		nd$wait_batch( type       = GR_GEOM_POSTED,
                                l_object   = &CompId,
                                l_obj_info = &cn_type,
                                nb_obj     = 1 );

		nd$exec_batch();
		/* SSR 12 NOV TR MP740 */
		VDPPmeUpdate( &msg, CompId, CompId );
	 }
	 else if ( !strcmp( CompInstance.szNumber, szTagNumber ) )
	 {
		   UI_status( " Keyed in the same Tag Number " );
	 }
	 else
	 {
		   UI_status( " Tag Number exceeds 12 characters " );
	 }
  }

}

wakeup()
{
	UI_message(" Modify TagNumber " );
}

