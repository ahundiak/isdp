#!/bin/ksh
# $Id: vrmake,v 1.2 2002/04/30 18:25:46 anand Exp $

# -------------------------------------------------------------------
# I/ROUTE
#
# File:		etc/bin/ vrmake
#
# Description:
#	make a single directory
#
#	environemnt variables used:
#		LOGFILE		
#
# Dependencies:
#
# Revision History:
#	$Log: vrmake,v $
#	Revision 1.2  2002/04/30 18:25:46  anand
#	#!Shebang line has to be the first line in a script#!
#	
#	Revision 1.1.1.1  2001/01/04 21:12:07  cvs
#	Initial import to CVS
#	
# Revision 1.4  1996/01/18  17:13:46  pinnacle
# Replaced: etc/bin/vrmake for:  by r240_int for route240
#
# Revision 1.3  1995/12/10  00:31:42  pinnacle
# Replaced: etc/bin/vrmake for:  by r240_int for route240
#
# Revision 1.2  1995/12/09  00:22:58  pinnacle
# Replaced: etc/bin/vrmake for:  by r240_int for route240
#
# Revision 1.1  1995/12/08  21:27:42  pinnacle
# Created: etc/bin/vrmake by r240_int for route240
#
# History:
#	12/06/95	tlb	created based on vr_compile
#	12/08/95	tlb	Remove DOT_M
#	12/09/95	tlb	Slic first, then makemake
#	01/12/96	tlb	
#	01/16/96	tlb	Change order of make options for debugging
# -------------------------------------------------------------------

# -------------------------------------------------------------------
function Error {
	/usr/bin/tput bel
	echo $1
        echo "\t\tError $1" >> ${LOGFILE} 2>$1
}
# -------------------------------------------------------------------
function Makemake {
	if /bin/ls ./*.u > /dev/null 2>&1 ; then
		MAKEMAKE=${ROUTE}/etc/bin/mkmkppl
	else
		MAKEMAKE=${ROUTE}/etc/bin/vrmakemake
	fi
	echo "${MAKEMAKE} ./*.m ./mkfile"
	${MAKEMAKE} ./*.m ./mkfile
	RC=$?
	if [ ${RC} -ne 0 ] 
		then ERROR=${ERROR}" \t--> Makemake failed in ${DIR}\n"
	fi
}
# -------------------------------------------------------------------
function Make {
	RC=0
	if ${GRNUC}/bin/grmake ${MAKEOPT} -r -k -f mkfile | /bin/tee ${TMP} 
		then if /bin/grep  "not remade because of errors" \
							${TMP} > /dev/null 
			then ERROR=${ERROR}" \t--> Make failed in ${DIR}\n"
			RC=1;
		     fi
		else
			ERROR=${ERROR}" \t--> Make failed in ${DIR}\n"
			RC=1;
	fi
}

# -------------------------------------------------------------------
TMP=/tmp/VS${RANDOM}
trap "/bin/rm ${TMP} > /dev/null 2>&1 ; tput smso ; 
			echo '- INTERRUPT -' ; tput rmso ; exit 2" 2 3
RC=0

# Check environemnt
if [ -z "$GRNUC" -o -z "$ROUTE" ]
	then . startup.route
fi

	# setup directory name
	DIR=$1
	if [ -z "${DIR}" ] ; then
		DIR=${PWD}
	elif [ ${DIR} = "." ] ; then
		DIR=${PWD}
	elif [ "${DIR}" = "`basename ${DIR}`" ] ; then
		DIR=${ROUTE}/${DIR}
	fi
	if [ ! -d ${DIR} ]
		then echo "no such ROUTE directory: $DIR "; exit 1;
	fi
	\cd ${DIR}

	# run slic if needed
	vrslic $DIR
	RC=$?
	if [ ${RC} -ne 0 ]
		then continue;
	fi

	# Makemake if necessary
	if [ ! -f *.m ] 
		then echo "Cannot make ${DIR}: missing .m file";  exit 0;
	elif [ ! -f mkfile ] 
		then Makemake
	elif [ *.m -nt mkfile ]
		then Makemake
	fi
	if [ ${RC} -ne 0 ] 
		then continue;
	fi

	# make
	Make

	trap 2 3
	/bin/rm -f ${TMP}

if [ "blob${ERROR}" != "blob" ] ; then
	Error "\n${ERROR}"
	RC=1
fi
exit $RC
