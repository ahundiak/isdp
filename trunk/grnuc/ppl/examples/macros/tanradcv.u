/************************************************************************/
/*                                                                      */
/*      Program: tanradcv.u         Macro: gr$get_curve_tan_radcrv	*/
/*                                                                      */
/*      Defined in: grmacros.h						*/
/*                                                                      */
/*      Comments: Needs a bspline curve to be present. This example     */
/*		  places a tangent vector at a given u parameter along  */
/*		  the curve.						*/
/*									*/
/*                                                                      */
/************************************************************************/
#include "stdio.h"
#include "ciminimum.h"
#include "cimacros.h"
#include "grmacros.h"

extern GRget_curve_tan_radcrv();

main()
{
	IGRlong msg;
	struct GRid cv;
	IGRint	i;
	IGRdouble uparm, outpoint[3], tanendpt[3], tanvec[3], radcrv, tlen;

	ci$locate( obj = &cv.objid,
			osnum = &cv.osnum,
			classes = "GRbspline",
			prompt = "Identify the curve" );

	ci$get( value = uparm, prompt = "Enter the u value" );
	ci$get( value = tlen, prompt = "Enter length of tangent vector" );

	gr$get_curve_tan_radcrv( GRid_in = cv,
					uparm = uparm,
					outpoint = outpoint,
					tan = tanvec,
					radcrv = &radcrv );

	fprintf(stderr,"uparm=%lf radcrv=%lf\n",uparm, radcrv );
	fprintf(stderr,"outpoint: %lf %lf %lf\n",outpoint[0], 
						outpoint[1], outpoint[2]);
	fprintf(stderr,"tangent : %lf %lf %lf\n",tanvec[0], tanvec[1], 
						tanvec[2]);

	begincmd("Place Point");
		ci$put( point = outpoint );
		ci$put( response = TERMINATE );
	endcmd();

	tanendpt[0] = outpoint[0] + tlen * tanvec[0];
	tanendpt[1] = outpoint[1] + tlen * tanvec[1];
	tanendpt[2] = outpoint[2] + tlen * tanvec[2];

	begincmd("place line segment");
		ci$put( point = outpoint );
		ci$put( point = tanendpt );
		ci$put( response = TERMINATE );
	endcmd();

}
	
