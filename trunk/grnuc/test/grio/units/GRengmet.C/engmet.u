#include "OMminimum.h"
#include "ctype.h"
#include "igrtypedef.h"
#include "igetypedef.h"
#include "igr.h"
#include "igrdp.h"
#include "gr.h"
#include "msdef.h"
#include "msmacros.h"
#include "ex.h"
#include "godef.h" 
#include "go.h" 
#include "griodef.h"
#include "grio.h"
#include "griomacros.h"

/*
 *  Macro :  co$unit_database_type
 *
 *  Abstract:  give an object space number, this function determines
 *             if the DISTANCE data base units of the the OS are 
 *             english, metric, or other.  If other, this is not a
 *             design file that the I/EMS product will support.
 *
 *  Arguments: 
 *
 *    OMuword      osnum     I   object space tested
 *    IGRint      *eng_met   O   type of units (in griodef.h):
 *                               GRIO_UNITS_ARE_UNKNOWN   (0)
 *                               GRIO_UNITS_ARE_ENGLISH   (1)
 *                               GRIO_UNITS_ARE_METRIC    (2)
 *  Returns: IGRint 
 *    MSSUCC - If the DISTANCE element is found in the specified object space
 *    MSFAIL - If the DISTANCE element is NOT found in the specified OS
 *      
 *  History:
 *    Shelley R. Heard  10/18/91 - created
 */

extern int GRunit_database_type();

IGRlong  msg;
int      status;
int      type = -1;

main()
{
   write ("\nentering engmet.u\n");

   status = co$unit_database_type( osnum = 2, db_type = &type );

   write ("after co$unit_database_type call\n");
   write ("status = ",status, "\n");
   if (status&1)
   {
      if ( db_type == GRIO_UNITS_ARE_UNKNOWN )
         write ("db_type = ", type, " (GRIO_UNITS_ARE_UNKNOWN)\n");
      else if ( db_type == GRIO_UNITS_ARE_ENGLISH )
         write ("db_type = ", type, " (GRIO_UNITS_ARE_ENGLISH)\n");
      else if ( db_type == GRIO_UNITS_ARE_METRIC )
         write ("db_type = ", type, " (GRIO_UNITS_ARE_METRIC)\n");
      else
         write ("db_type = ", type, " (????)\n");
   }
   else
      write ("co$unit_database_type failed\n");

   write ("\n");
}
