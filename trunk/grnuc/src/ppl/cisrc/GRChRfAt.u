/*

Name

   GRChRfAt.u - Change Refererence File Attachment

Abstract

   This command will modify the refrence file attachment.

Description

   This command will change the following things of the reference file
   attachment.

      1. Filename 2. Attachment name 3. Clipping on/off
      4. Nesting (background) on/off 5. Display on/off

History

   Gang   07/14/93    Creation date.
   jhw    11/23/93    Added support for drawing views.
   Satya  02/03/95    Added support for graphic groups.

*/

#include <stdio.h>
#if defined(SUNOS5) || defined(IRIX)    /* kludge; cci can't handle time.h */
#define	F_OK	0	/* Test for existence of File */
#else
#include "unistd.h"
#endif
#include <string.h>
#include <FI.h>
#include "ciminimum.h"
#include "cimacros.h"
#include "CIforms.h"
#include "bserr.h"
#include "bstypes.h"
#include "OMprimitives.h"
#include "OMindex.h"
#include "OMminimum.h"
#include "igrdef.h"
#include "igr.h"
#include "igrtypedef.h"
#include "mapriv.h"
#include "ex.h"
#include "exmacros.h"
#include "msdef.h"
#include "msmacros.h"
#include "gr.h"
#include "igrdp.h"
#include "godef.h"
#include "go.h"
#include "dpdef.h"
#include "dp.h"
#include "dpstruct.h"
#include "dpmacros.h"
#include "griodef.h"
#include "grio.h"
#include "griomacros.h"
#include "grmessage.h"
#include "execmsg.h"
#include "UOMdef.h"
#include "ref.h"
#include "refdef.h"
#include "DIdef.h"
#include "DItypedef.h"
#include "DIprims.h"
#include "detaildef.h"
#include "detail.h"
#include "OMerrordef.h"

/*
 *      Definitions, constants, and so on
 */

extern OMuword OPP_GRreffile_class_id;
extern OMuword OPP_GRdrawview_class_id;

//#define DEBUG		1
//#define TRACE		1
//#define VERBOSE	1

#define DRAWVIEWS_SIZE 20

#ifdef DEBUG
#define debug(x) x
#else
#define debug(x)
#endif

#ifdef TRACE
#define trace(x) x
#else
#define trace(x)
#endif

#ifdef VERBOSE
#define verbose(x) x
#else
#define verbose(x)
#endif


/* ci notification function */
extern int ci_notification();

/*
 *      Global Data
 */

IGRchar filename[DI_PATH_MAX];
IGRchar attach_name[DI_PATH_MAX];
IGRchar ref_filename[DI_PATH_MAX];
IGRchar ref_attname[DI_PATH_MAX];
IGRchar ref_dirname[DI_PATH_MAX];
struct GRid ref_id;
struct GRmd_env mod_env;
IGRulong ref_properties;
IGRulong new_properties;
IGRshort ref_disp_props;
IGRboolean form_displayed;
OM_S_CLASSLIST classlist;
OMuword        classids[2], classid;
IGRboolean     is_drawview;
struct GRid   *p_drawviews, drawview_ref_id, drawview_id;
IGRint         num_drawviews, type, size;
IGRulong       drawview_ref_props;

/*
        Structure required for form notification.
*/

struct CIform_st form_st;

/*
        Form pointer
*/

Form ref_form;

wakeup()
{
    trace(printf("wakeup\n"));
    ex$message(msgnumb = GRC_M_ChgRefAtt);
    if(form_displayed == TRUE)
      if (ref_form)
        FIf_display(ref_form);
}

sleep()
{
    trace(printf("sleep\n"));
    if (ref_form) FIf_erase(ref_form);
}

delete()
{
    trace(printf("delete\n"));
    if (ref_form) FIf_delete(ref_form);
}

main()
{
    int response1, sts;
    long msg, i, j;
    int response2;
    IGRboolean pass;
    int which_error;
    int owner_action;
    struct GRevent event;
    char lcprompt[512],lcaccprompt[512];
    char lcrelocprompt[512];
    char buf[128];
    char tmpbuf[DI_PATH_MAX];
    struct GRinquire_list requests[4];

    trace(printf("main\n"));

    /*
     * Build the classlist used for locate.
     */
    classids[0] = OPP_GRreffile_class_id;
    classids[1] = OPP_GRdrawview_class_id;
    classlist.w_count = 2;
    classlist.w_flags = 0;
    classlist.p_classes = classids;

    ref_form = NULL;
    form_displayed = FALSE;
    ref_properties = 0;
    new_properties = 0;
    ref_disp_props = GRIS_DISPLAYABLE;
    filename[0] = NULL;
    attach_name[0] = NULL;
    lcprompt[0] = NULL;
    lcaccprompt[0] = NULL;
    lcrelocprompt[0] = NULL;
    which_error =0;
    pass = FALSE;

    ex$message(msgnumb = GRC_M_ChgRefAtt);

    /* create the form */

    sts = FIf_new(1, "GRChangeRef", ci_notification, &ref_form);
    if ((sts != FI_SUCCESS) || (ref_form == NULL))
    {
        exit;
    }

    /* associate the icon with this command object */

    FIf_set_cmd_oid_os(ref_form, MY_ID, OM_Gw_current_OS);

    /** Added LC_FLEX_COMP field to allow reference files which are part of
	graphic group to be selected for this command -- TR 11912361 - Satya */

    owner_action = LC_REF_HEADER|LC_NO_REF_OBJECTS|LC_RIGID_COMP|LC_FLEX_COMP;

    ex$message(msgnumb = GR_P_IdRefAtt, buff = lcprompt);
    ex$message(msgnumb = GR_P_AccRejAtt, buff = lcaccprompt);
    ex$message(msgnumb = GRC_M_AttNotLoc, buff = lcrelocprompt);

    while(1)
     {
         ex$message(msgnumb = GRC_M_ChgRefAtt);

        do {
             sts = ci$locate(prompt = lcprompt,
                       acc_prompt = lcaccprompt,
                       relocate_prompt = lcrelocprompt,
                       md_env = &mod_env,
                       owner_action = owner_action,
                       properties = LC_WRITE_ONLY | LC_LC_ONLY | LC_DP_ONLY,
                       eligible_classes = &classlist,
                       response = &response1,
                       obj = &ref_id.objid,
                       osnum = &ref_id.osnum);

         }while(!sts);


         om$get_classid (objid = ref_id.objid,
                         osnum = ref_id.osnum,
                         p_classid = &classid);

         is_drawview = (om$is_ancestry_valid (superclassid = OPP_GRdrawview_class_id,
                                              subclassid = classid) == OM_S_SUCCESS);

         if (is_drawview)
         {
             drawview_id = ref_id;

             sts = ci$send (msg = message GRdrawview.GRget_component_id
                                                      (&msg,
                                                       GR_DV_REFFILE,
                                                       1,
                                                       &ref_id,
                                                       &type),
                                           targetid = drawview_id.objid,
                                           targetos = drawview_id.osnum);
         }

         /* get the display properties of the reference file */
         sts = ci$send(msg = message GRgraphics.GRgetprops(&msg,&ref_disp_props),
                       targetid = ref_id.objid,
                       targetos = ref_id.osnum);

         /* get the reference file info */

          i = 0;
          requests[i].var = REFERENCE_FILE_NAME;
          requests[i].num_requested = DI_PATH_MAX;
          requests[i].var_ptr = ref_filename;

          i = i+1;
          requests[i].var = FILE_PROPERTIES;
          requests[i].num_requested = sizeof(unsigned long);
          requests[i].var_ptr = (char *)&ref_properties;

          i = i + 1;
          requests[i].var = REFERENCE_NAME;
          requests[i].num_requested = DI_PATH_MAX;
          requests[i].var_ptr = tmpbuf;

          i = i+1;
          requests[i].var = END_REPORT_REQUEST;
          requests[i].num_requested = 0;
          requests[i].var_ptr = NULL;

          sts = ci$send(msg = message GRreffile.GRinquireref(&msg,
                                                             &mod_env,
                                                             requests,
                                                             &which_error,
                                                             &pass,NULL),
                        targetid = ref_id.objid,
                        targetos = ref_id.osnum);

         /* display the form */

         FIf_reset(ref_form);
         FIf_display(ref_form);

         form_displayed = TRUE;

         /* get the attachment name */
         di$split(pathname = tmpbuf,
                  dirname = ref_dirname,
                  name = ref_attname);

         FIfld_set_text(ref_form,ATTACHNAME,0,0,ref_attname,0);
         strcpy(attach_name,ref_attname);
         FIfld_set_text(ref_form,FILENAME,0,0,ref_filename,0);
         strcpy(filename,ref_filename);

         new_properties = ref_properties;

         if(ref_properties & GRRF_SHRINK_WRAP)
          {
            FIg_set_state_off(ref_form,CLIPPING);
          }
         else
          {
            FIg_set_state_on(ref_form,CLIPPING);
          }

         if(ref_properties & GRRF_BACKGROUND)
          {
            FIg_set_state_on(ref_form,BACKGROUND);
          }
         else
          {
            FIg_set_state_off(ref_form,BACKGROUND);
          }

         if (ref_disp_props & GRIS_DISPLAYABLE)
         {
             FIg_set_state_off(ref_form,DISPLAY);
         }
         else
         {
             FIg_set_state_on(ref_form,DISPLAY);
         }

         /* wait for the user to dismiss the form */

         while (1)
         {
            ci$getevent(response = &response2,
                        stackable = TRUE,
                        msgnum = GR_P_SelFrForm,
                        event = &event);

            if ( response2 == EX_FORM_FINISHED )
            {
               FIf_erase(ref_form);
               form_displayed = FALSE;
               break;
             }
           else
            {
            ex$message(msgnumb = GR_I_InpDiscard);
            }
        }
    }
}

form_notification()
{
    int row, sel, i, j;
    int toggle_state;
    long sts, msg;
    IGRshort disp_props;
    IGRshort action;
    double temp, *z;
    enum GRdpmode disp_mode;
    char tmp[DI_PATH_MAX], path[DI_PATH_MAX];
    DIobjid objid;
    IGRshort ref_erased ;

    trace(printf("form_notification\n"));

    temp = 0;
    sel = 0;
    i = 0;
    j = 0;
    sts = 0;
    msg = 0;
    toggle_state = 0;
    disp_props = 0;
    action = 2;
    ref_erased = FALSE;

    /* clear the message field */
    FIfld_set_text(ref_form,FI_MSG_FIELD,0,0,"",0);

    switch (form_st.gadget_label)
    {
      case FI_ACCEPT:
        if(filename[0] != NULL )
        {
            ex$message(msgnumb = GR_M_ChgAttach, buff = tmp);
            FIfld_set_text(ref_form,FI_MSG_FIELD,0,0,tmp,0);

            num_drawviews = 0; /* These are the aligned drawviews. */
            p_drawviews = NULL;

            /*
             * If the filename or clipping polygon is being changed
             * we must make sure that it is changed for all aligned
             * drawing views is a drawing view has been selected.
             */
            if (is_drawview &&
                (((ref_properties & GRRF_SHRINK_WRAP) !=
                 (new_properties & GRRF_SHRINK_WRAP)) ||
                 (strcmp(filename,ref_filename) != 0)))
            {
                sts = ci$send (msg = message GRdrawview.GRget_alignment_count
                                                 (&msg, &num_drawviews),
                               targetid = drawview_id.objid,
                               targetos = drawview_id.osnum);

                if ((sts & msg & 1) && (num_drawviews > 0))
                {
                    p_drawviews = (struct GRid *)malloc(num_drawviews * sizeof(struct GRid));

                    size = 0; /* Must be initialzed to 0 */

                    sts = ci$send (msg = message GRdrawview.GRget_alignment_objects
                                                 (&msg,
                                                  num_drawviews,
                                                  &size,
                                                  p_drawviews),
                                   targetid = drawview_id.objid,
                                   targetos = drawview_id.osnum);

                    if (sts & msg & 1)
                    {
                        num_drawviews = 0;

                        for (i=0; i<size; i=i+1)
                        {
                            if (p_drawviews[i].objid != drawview_id.objid)
                            {
                                sts = ci$send (msg = message GRdrawview.GRget_component_id
                                                        (&msg,
                                                         GR_DV_REFFILE,
                                                         1,
                                                         &p_drawviews[num_drawviews],
                                                         &type),
                                           targetid = p_drawviews[i].objid,
                                           targetos = p_drawviews[i].osnum);

                                if (sts & msg & 1)
                                {
                                    num_drawviews = num_drawviews + 1;
                                }
                            }
                        }
                    }
                }
            }

            /*
             * If the reference file needs to be erased do so now.
             */
            if (((ref_properties & GRRF_SHRINK_WRAP) !=
                 (new_properties & GRRF_SHRINK_WRAP)) ||
                (strcmp(filename,ref_filename) != 0))
            {
                disp_mode = GRbehe;

                sts = ci$send(msg = message GRgraphics.GRdisplay(&msg,
                                                                 &mod_env.md_env.matrix_type,
                                                                 mod_env.md_env.matrix,
                                                                 &disp_mode,
                                                                 &mod_env.md_id),
                              targetid = ref_id.objid,
                              targetos = ref_id.osnum);

                /*
                 * If there are aligned drawing views...
                 */
                if (num_drawviews)
                {
                    for (i=0; i<num_drawviews; i=i+1)
                    {
                        sts = ci$send(msg = message GRgraphics.GRdisplay(&msg,
                                                                         &mod_env.md_env.matrix_type,
                                                                         mod_env.md_env.matrix,
                                                                         &disp_mode,
                                                                         &mod_env.md_id),
                                      targetid = p_drawviews[i].objid,
                                      targetos = p_drawviews[i].osnum);
                    }
                }

                ref_erased = TRUE;
            }

            if(new_properties != ref_properties)
            {
                if(new_properties & GRRF_BACKGROUND)
                  ref_properties = ref_properties | GRRF_BACKGROUND;
                else
                  ref_properties = ref_properties & ~GRRF_BACKGROUND;

                if((ref_properties & GRRF_SHRINK_WRAP) &&
                   !(new_properties & GRRF_SHRINK_WRAP))
                {
                    /* remove the reference file from the R-tree */
                    sts = ci$send(msg = message GRvg.GRremwrng(&msg, &mod_env),
                                  targetid = ref_id.objid,
                                  targetos = ref_id.osnum);
                    trace(printf("1: sts: %d, msg: %d\n",sts,msg));

                    ref_properties = ref_properties & ~GRRF_SHRINK_WRAP;

                    sts = ci$send(msg = message GRreffile.GRchgrfprops(&msg,
                                                  &action,&ref_properties),
                          targetid = ref_id.objid,
                          targetos = ref_id.osnum);
                    trace(printf("2: sts: %d, msg: %d\n",sts,msg));

                    /* add the reference file to the R-tree */
                    sts = ci$send(msg = message GRvg.GRaddwrng(&msg, &mod_env),
                                  targetid = ref_id.objid,
                                  targetos = ref_id.osnum);
                    trace(printf("3: sts: %d, msg: %d\n",sts,msg));

                    /* Change the drawing views' reference files. */
                    if (num_drawviews)
                    {
                        for (i=0; i<num_drawviews; i=i+1)
                        {
                            sts = ci$send(msg = message GRreffile.GRgetrfprops
                                                (&msg, &drawview_ref_props),
                                          targetid = p_drawviews[i].objid,
                                          targetos = p_drawviews[i].osnum);

                            if (drawview_ref_props & GRRF_SHRINK_WRAP)
                            {
                                /* remove the reference file from the R-tree */
                                sts = ci$send(msg = message GRvg.GRremwrng(&msg, &mod_env),
                                              targetid = p_drawviews[i].objid,
                                              targetos = p_drawviews[i].osnum);
                                trace(printf("1: sts: %d, msg: %d\n",sts,msg));

                                drawview_ref_props = drawview_ref_props & ~GRRF_SHRINK_WRAP;

                                sts = ci$send(msg = message GRreffile.GRchgrfprops(&msg,
                                                                                   &action,&ref_properties),
                                              targetid = p_drawviews[i].objid,
                                              targetos = p_drawviews[i].osnum);
                                trace(printf("2: sts: %d, msg: %d\n",sts,msg));

                                /* add the reference file to the R-tree */
                                sts = ci$send(msg = message GRvg.GRaddwrng(&msg, &mod_env),
                                              targetid = p_drawviews[i].objid,
                                              targetos = p_drawviews[i].osnum);
                                trace(printf("3: sts: %d, msg: %d\n",sts,msg));
                            }
                        }
                    }
                }
                else
                  if(!(ref_properties & GRRF_SHRINK_WRAP) &&
                     (new_properties & GRRF_SHRINK_WRAP))
                  {
                      ref_properties = ref_properties | GRRF_SHRINK_WRAP;

                      sts = ci$send(msg = message GRreffile.GRchgrfprops(&msg,
                                                                         &action,&ref_properties),
                                    targetid = ref_id.objid,
                                    targetos = ref_id.osnum);

                      /* Change the drawing views' reference files. */
                      if (num_drawviews)
                      {
                          for (i=0; i<num_drawviews; i=i+1)
                          {
                              sts = ci$send(msg = message GRreffile.GRgetrfprops
                                                      (&msg, &drawview_ref_props),
                                            targetid = p_drawviews[i].objid,
                                            targetos = p_drawviews[i].osnum);

                              if (!(drawview_ref_props & GRRF_SHRINK_WRAP))
                              {
                                  drawview_ref_props = drawview_ref_props | GRRF_SHRINK_WRAP;

                                  sts = ci$send(msg = message GRreffile.GRchgrfprops(&msg,
                                                                                   &action,&ref_properties),
                                                targetid = p_drawviews[i].objid,
                                                targetos = p_drawviews[i].osnum);
                              }
                          }
                      }
                  }
                  else
                  {
                      sts = ci$send(msg = message GRreffile.GRchgrfprops(&msg,
                                                                         &action,&ref_properties),
                                    targetid = ref_id.objid,
                                    targetos = ref_id.osnum);
                  }
            }


            if(strcmp(filename,ref_filename) != 0)
            {
                /* change the attachment */
                sts = ci$send(msg = message GRreffile.GRchgfilename(&msg,
                                                                    filename,
                                                                    ""),
                              targetid = ref_id.objid,
                              targetos = ref_id.osnum);

                if(strcmp(attach_name,ref_attname) != 0)
                {
                    sts = ci$send(msg = message GRgraphics.GRchgname(&msg,
                                                                     NULL,
                                                                     attach_name),
                                  targetid = ref_id.objid,
                                  targetos = ref_id.osnum);
                }

                /*
                 * If there are any aligned drawviews change their file
                 * as well.
                 */
                if (num_drawviews)
                {
                    for (i=0; i<num_drawviews; i=i+1)
                    {
                        /* change the attachment */
                        sts = ci$send(msg = message GRreffile.GRchgfilename(&msg,
                                                                            filename,""),
                                      targetid = p_drawviews[i].objid,
                                      targetos = p_drawviews[i].osnum);
                    }
                }
            }
            else if(strcmp(attach_name, ref_attname) != 0)
            {
                sts = ci$send(msg = message GRgraphics.GRchgname(&msg,
                                                                 NULL,
                                                                 attach_name),
                              targetid = ref_id.objid,
                              targetos = ref_id.osnum);
            }

            /* get the display properties of the reference file */
            sts = ci$send(msg = message GRgraphics.GRgetprops(&msg,&disp_props),
                          targetid = ref_id.objid,
                          targetos = ref_id.osnum);

            if(ref_disp_props & GRIS_DISPLAYABLE)
            {
                if(!(disp_props & GRIS_DISPLAYABLE))
                {
                    disp_props = disp_props | GRIS_DISPLAYABLE|GRIS_LOCATABLE;
                    action = -1;

                    sts = ci$send(msg = message GRgraphics.GRchgprops(&msg,
                                                                      &action,
                                                                      &disp_props),
                                  targetid = ref_id.objid,
                                  targetos = ref_id.osnum);

                    ref_erased = TRUE;
                }

                if(ref_erased)
                {
                    disp_mode = GRbd;

                    ci$send(msg = message GRgraphics.GRdisplay(&msg,
                                                               &mod_env.md_env.matrix_type,
                                                               mod_env.md_env.matrix,
                                                               &disp_mode,
                                                               &mod_env.md_id),
                            targetid = ref_id.objid,
                            targetos = ref_id.osnum);
                }
            }
            else
            {
                if(disp_props & GRIS_DISPLAYABLE)
                {
                    if(!ref_erased)
                    {
                        disp_mode = GRbehe;

                        ci$send(msg = message GRgraphics.GRdisplay(&msg,
                                                                   &mod_env.md_env.matrix_type,
                                                                   mod_env.md_env.matrix,
                                                                   &disp_mode,
                                                                   &mod_env.md_id),
                                targetid = ref_id.objid,
                                targetos = ref_id.osnum);
                    }
                    disp_props = disp_props & ~GRIS_DISPLAYABLE;
                    action = -1;

                    sts = ci$send(msg = message GRgraphics.GRchgprops(&msg,
                                                                      &action,
                                                                      &disp_props),
                                  targetid = ref_id.objid,
                                  targetos = ref_id.osnum);
                }
            }

            /*
             * If the aligned drawviews redisplay them.
             */
            if (num_drawviews)
            {
                disp_mode = GRbd;

                for (i=0; i<num_drawviews; i=i+1)
                {
                    ci$send(msg = message GRgraphics.GRdisplay(&msg,
                                                               &mod_env.md_env.matrix_type,
                                                               mod_env.md_env.matrix,
                                                               &disp_mode,
                                                               &mod_env.md_id),
                            targetid = p_drawviews[i].objid,
                            targetos = p_drawviews[i].osnum);
                }
            }

            if (p_drawviews) free (p_drawviews);

            /* terminate this command */
            ci$put(response = EX_FORM_FINISHED);
        }
        else
        {
            ex$message(msgnumb = GR_P_EntFil, buff = tmp);
            FIfld_set_text(ref_form,FI_MSG_FIELD,0,0,tmp,0);
        }
        break;

      case FI_CANCEL:
        /* terminate this command */
        ci$put(response = EX_FORM_FINISHED);
        break;

      case CLIPPING:
        FIg_get_state(ref_form,CLIPPING,&toggle_state);
        if(toggle_state == 0)
         {
           new_properties = new_properties | GRRF_SHRINK_WRAP;
         }
        else
         {
           new_properties = new_properties & ~GRRF_SHRINK_WRAP;
         }
        break;

      case BACKGROUND:
        FIg_get_state(ref_form,BACKGROUND,&toggle_state);
        if(toggle_state == 1)
         {
           new_properties = new_properties | GRRF_BACKGROUND;
         }
        else
         {
           new_properties = new_properties & ~GRRF_BACKGROUND;
         }
        break;

      case DISPLAY:
        FIg_get_state(ref_form,DISPLAY,&toggle_state);
        if(toggle_state == 0)
         {
           ref_disp_props = ref_disp_props | GRIS_DISPLAYABLE;
         }
        else
         {
           ref_disp_props = ref_disp_props & ~GRIS_DISPLAYABLE;
         }
        break;

      case ATTACHNAME:
        FIfld_get_text (ref_form,ATTACHNAME, 0, 0, DI_PATH_MAX,
                          (unsigned char *)tmp, &sel, &i);

        DIstmocpy(path,"ref","refnames",0,ref_id.osnum);
        DIstrcat (path, tmp);

        sts = di$translate(objname = path,
                           p_objid = &objid);

        if(sts == DIR_W_NAME_NOT_FOUND)
         {
            strcpy(attach_name,tmp);
         }
        else
         {
            if(strcmp(tmp,ref_attname) != 0)
             {
               ex$message(msgnumb = GR_E_AttnameEx, buff = tmp);
               FIfld_set_text(ref_form,FI_MSG_FIELD,0,0,tmp,0);
               strcpy (attach_name, ref_attname);
               FIfld_set_text(ref_form,ATTACHNAME,0,0,ref_attname,0);
             }
         }
        break;

      case FILENAME:
        FIfld_get_text (ref_form,FILENAME, 0, 0, DI_PATH_MAX,
                          (unsigned char *)tmp, &sel, &i);
        GRfindrefpath(tmp,filename);
        if(access(filename,F_OK) == -1)
         {
           FIfld_set_text(ref_form,FILENAME,0,0,"",0);
           ex$message(msgnumb = GR_E_FlNotFnd, buff = tmp);
           FIfld_set_text(ref_form,FI_MSG_FIELD,0,0,tmp,0);
           filename[0] = NULL;
         }
        break;

    }
}
