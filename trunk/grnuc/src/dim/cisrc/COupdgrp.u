#include "cieveryone.h"
#include "cimacros.h"
#include "OMminimum.h"
#include "igetypedef.h"
#include "igrtypedef.h"
#include "igr.h"
#include "igrdp.h"
#include "dpdef.h"
#include "dp.h"
#include "dpstruct.h"
#include "gr.h"
#include "fontdef.h"
#include "font.h"
#include "gotextdef.h"
#include "gotext.h"
#include "grdpbdef.h"
#include "grdpb.h"
#include "grdpbmacros.h"

#include "OMmacros.h"
#include "dpmacros.h"

#include "msdef.h"
#include "msmacros.h"

#include "asdef.h"
#include "asmacros.h"
#include "parametric.h"

#include "DIdef.h"
#include "DItypedef.h"
#include "DIglob.h"
#include "DIprims.h"

#include "ma.h"
#include "bserr.h"

#include "nddef.h"
#include  "GM.h"
#include "ndmacros.h"

#include "dimfiundef.h"
#include "dimdef.h"
#include "dim.h"
#include "dimplan.h"
#include "dimglobal.h"
#include "dimerror.h"
#include "dimmacros.h"
#include "dm_status.h"
#include "dimdload.h"
#include "dimdyn.h"
#include "dimgraph.h"
#include "dimcomplex.h"
#include "dimmod.h"
#include "dimsrc.h"
#include "diminst.h"
#include "DMmsg.h"
#include "DMcmd.h"

extern printf();
extern ASsuper_construct();
extern int NDexec_batch();
extern MSmessage();

IGRchar buff[80], geom_type;

extern GRclassid OPP_DMlincpx_class_id;
extern GRclassid OPP_DMangular_class_id;
extern GRclassid OPP_DMcoordj_class_id;

IGRint sts, msg;
struct GRevent event;
IGRint response;
struct GRmd_env md_env;
struct GRid dim_grid;

OM_S_CLASSLIST classlist;
OMuword classes[5];
IGRint  class_count;

main()
{
char locbuff[132];

	STATE_loc_cpx:

        ex$message(msgnumb = DM_P_LocCmpx , buff = locbuff);
	do
	{
		ci$locate(prompt = locbuff,
			eligible_classes = &classlist,
			owner_action = LC_READ|LC_NO_REF_HEADER
					| LC_REF_OBJECTS | LC_HANDLES,
			response = &response,
			obj = &dim_grid.objid,
			osnum = &dim_grid.osnum);
	} while (response != DATA);

	sts=
	ci$send(msg = message DMroot.inq_geom_type(&geom_type),
		targetid = dim_grid.objid,
		targetos = dim_grid.osnum);
	dm$status(sts = sts, action = RET_STATUS);

	if (geom_type & DIM_IMPORTED)
	{
     		ex$message(msgnumb = DM_I_CannotUpdRtrDmGrp);
		goto STATE_loc_cpx;
	}

	sts =
	DMupdate_complex(&msg, dim_grid, &md_env);
	dm$status(sts = sts, action = RET_STATUS);

	nd$exec_batch();

	goto STATE_loc_cpx;
}

init()
{

	ASsuper_construct();
	ci$get_module_info(md_env = &md_env);

	classlist.w_count = 2;
	classlist.w_flags = OM_CLST_subclass;
	classlist.p_classes = classes;

	classes[0] = OPP_DMlincpx_class_id;
	classes[1] = OPP_DMangular_class_id;
	classes[2] = OPP_DMcoordj_class_id;

	ex_message(DMC_M_UpDmGr, buff);
	message(buff);
}

ex_message(msgnumb, buff)
int msgnumb;
char buff[];
{
	ex$message(msgnumb = msgnumb, buff = buff);
}

wakeup()
{
	ex_message(DMC_M_UpDmGr, buff);
	message(buff);
}
