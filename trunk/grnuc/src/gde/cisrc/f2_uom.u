#include "OMerrordef.h"
#include "griomacros.h"
#include "msdef.h"
#include <stdio.h>

/* TGM 2/19/92 changed return code check for new UOM stuff in 2.0 
   TGM 5/04/92 modified to use message subsystem                  */

/*
$Log: f2_uom.u,v $
Revision 1.1.1.1  2001/12/17 22:39:36  hans
Initial import to CVS

# Revision 340.0  1997/05/27  23:17:04  root
# COMMENT : Initial checkin to 3.4.0 RCS from 3.3.0 src
#
# Revision 330.0  1996/01/11  21:31:25  root
# COMMENT : Initial checkin to 3.3.0 RCS from 3.2.0 src
#
# Revision 320.0  1994/12/12  18:00:12  root
# COMMENT : Initial checkin to 3.2 RCS from 3.1 src
#
# Revision 240.0  1992/12/07  00:04:54  tim
# COMMENT : Initial checkin to 2.4 RCS
#
# Revision 220.0  1992/08/29  06:41:04  root
# COMMENT : Corresponds to Rel201.3 in 2.0.1 RCS
#
Revision 201.3  1992/07/13  20:43:19  tim
COMMENT : added Log variable

*/

/**************************************

	function void units_of_meas

***************************************/

/*
 *	This function returns the units of measure for a file.
 */

void units_of_meas(cur_os, file_ptr, mode)
IGRshort	cur_os;			/* current osnum */
FILE		*file_ptr;
{
  char 		return_array[40][40];	/* array to hold working units */
  short 	flag;
  short 	num_default;
  int 		sts;
  IGRlong 	msg;
  int 		i;
  char          loc_buff[80];

  int print_to_screen;

  
  extern 	GRget_default_units();	/* used by co$get_default_units
					   macro */		
  extern 	printf();
  extern 	fprintf();

  



  print_to_screen = mode & SCREEN_OUTPUT;

  ex$message(msgnumb=GR_I_UOM,buff=loc_buff);
  if (print_to_screen)  
  {
    writestars();
    printf(loc_buff,"\n\n");
  }
  filestars(file_ptr);
  fprintf(file_ptr, "%s\n\n",loc_buff);

  flag = 1;    /* 0 for input units
		  1 for output units
		 */



  sts = co$get_default_units(msg = &msg, table_name = "UOM_DISTANCE", 
			flag = &flag, num_defaults = &num_default, 
			osnum = cur_os, 
			default_units = return_array);

  if ( ! sts & 1 )  /* changed for new UOM in Grnuc 2.0 TGM */
  {
    if (print_to_screen)
      ex$message(msgnumb=GR_E_NotAvail,buff=loc_buff);
      printf("\t!!!  %s  !!!\n",loc_buff);
  }
  else
  {
    /* output */

    for (i = 0; i < num_default; i = i+1)
    {
      if (print_to_screen)
        write("\t", &(return_array[i]), "\n");
      fprintf(file_ptr, "\t%s\n", &(return_array[i]));
    }
  }
}
