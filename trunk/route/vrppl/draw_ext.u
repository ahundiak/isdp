/* --	VROUTE
	Initialization program.
   -- */
#include "ciminimum.h"
#include "cisymb.h"
#include "cieveryone.h"
#include "cimacros.h"
#include "cilocate.h"
#include "AS_status.h"
#include "igrdp.h"
#include "dp.h"
#include "go.h"
#include "grmacros.h"
#include "VRdef.h"
#include "VRdimdef.h"
#include "VRcompdef.h"
#include "VRstructs.h"
#include "VRmacros.h"
#include "ACattrib.h"
#include "ACrg_collect.h"

extern int printf(), VRGetMatrix();
extern	int UI_message();
extern int GRsymbology_options(), GRdisplay_object(); 

main()
{
	struct GRsymbology symb;
	IGRdouble	dMatrix[16],dPriOrie,dSecOrie;
	long 		retmsg;
	int 		status,i, count;
	short		nPriEnd, nSecEnd;
	struct GRid	CompId,PriId,SecId;
	struct GRid	buff[3];
	struct GRid	*buff1;
	struct GRmd_env	md_env;

  symb.display_attr.color = 5;
  symb.display_attr.weight = 3;
  symb.display_attr.style = 6;
  symb.level = 1;


	/* Locate elements to modify */

	status = 
	ci$locate( 	obj              = &CompId.objid,
			osnum            = &CompId.osnum,
			classes 	 = "VRGeneric",
			md_env		 = &md_env,
			prompt           = "Identify component");
	if(!(status&1)) exit;

	printf ("Located Component id = <%d,%d>\n",CompId.objid,CompId.osnum);

	buff1  = buff;
	status = ci$send( msg = message VDSroot.VRGetCenterLine(
						&retmsg,
						&md_env,
						&count,
						&buff1),
			targetid = CompId.objid,
			targetos = CompId.osnum );

						
		
	for( i=0; i<count; i=i+1 )
	{
		printf ("Built Graphic id<%d> = <%d,%d>\n",i,buff[i].objid,buff[i].osnum);
        	gr$put_symbology( object_id = &buff[i], symb = &symb );
	
        	gr$display_object(object_id = &buff[i], mode = GRhd);
	}

}

wakeup()
{
	UI_message(" CenterLine Construction " );
}

