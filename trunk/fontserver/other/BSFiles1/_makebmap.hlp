
make_bmap (make bitmaps), revision 1.6,   87/05/24

                                MAY 24, 1987

MAKE_BMAP (MAKE BITMAPS FROM FONTWARE OUTLINES OR COMPRESSED OUTLINES)


Usage (2 options):

    make_bmap <job_control_file>    OR

    make_bmap <font_file> [options]


Output:

    Bitstream format bitmap fonts (B1.1). The font names are of the form
    "cmpr.ffff_lll_000_v_1". ffff is the source outline font id number. lll
    is the number of scan lines in the bitmap font. v is the outline font
    revision number. The default values of the other fields, "cmpr", "000"
    and "1", can be changed by make_bmap commands.

    Example: cmpr.0011_075_000_2_1
             cmpr = 4 letter mnemonic
             source outline font ID = 0011
             75 lines per em
             device 0
             outline font revision 2
             bitmap revision 1


FORMAT:

    MAKE_BMAP  <job_control_file>

    MAKE_BMAP uses the Bitmap Font Generator software to create Bitstream
    format (B1.1) bitmaps out of compressed/smart outlines. There is only
    one argument, the name of a job control file.


ARGUMENT:

    job_control_file


    The job control file has the following format:

      $BFG
      <specification_block>
      $
      <specification_block>
      $
      etc., until end of file


    <specification_block> = <keyword_1> <arguments>
                            <keyword_2> <arguments>
                            etc.
    The number of arguments is 0 or more, depending on the keyword

    A '$' marks the end of a specification block. Once '$' has been read, none
    of the arguments carries its value into the the next block.


KEYWORDS:

    compressed font         pathname1, pathname2, ...
    lines per em            size1, size2, size3:size4:size5, ...
    point size              size1, size2, size3:size4:size5, ...
    resolution              dpi
    horizontal resolution   dpi
    vertical resolution     dpi
    aspect ratio            number
    rotate                  angle
    oblique                 angle
    plaid mode
    no plaid mode
    set width unconstrained
    set width constrained
    import widths           pathname
    clip                    left  right  top  bottom
    squeeze                 left  right  top  bottom
    subset list             pathname
    kerning table           pathname
    kerning table
    kerning all
    first four              string
    device                  number
    revision                number
    ;                       comment

    'compressed font', 'lines per em', and 'point size' can accept an argument
    list containing multiple arguments. Arguments in the list are separated
    by commas and/or spaces. For 'point size' and 'lines per em' an argument
    of the form  A:B  represents a list ascending from A up to B in 1-unit
    steps.  A:B:C  ascends from A to B in increments of C units.

    Spaces and blank lines can be used to prettify the file.

    The order of keywords is not important.

    If a keyword requires an argument, and there is none, that keyword is
    ignored.


    KEYWORD                 ARGUMENT(S)
    -------                 -----------
    compressed font         One or more font pathnames.
                            This is a required keyword.

(*) lines per em            Number of scan lines per em square. Takes argument
                            list. Arguments must be positive integers. No
                            default value.

(*) point size              Point size of font. Takes argument list. Arguments
                            must be positive numbers. No default value. There
                            are 72.2892 points per inch. Point sizes and the
                            step size do not have to be integers. Point size
                            width is always set equal to point size.

        (*) You need to specify either 'lines per em' or 'point size'
            but not both, since one is computed from the other.

(+) resolution              Output resolution of device in dots per inch, both
                            horizontally and vertically. Takes 1 argument,
                            a positive number. Default resolution is 72 dpi.

(+) horizontal resolution   Horizontal output resolution of device in dots per
                            inch. Takes 1 argument, a positive number. Default
                            resolution is 72 dpi.

(+) vertical resolution     Vertical output resolution of device in dots per
                            inch. Takes 1 argument, a positive number. Default
                            resolution is 72 dpi.

(+) aspect ratio            Aspect ratio. Takes 1 argument, a positive number.
                            The aspect ratio is the ratio of horizontal
                            resolution divided by vertical resolution.
                            Default value is 1.

        (+) Of the three quantities 'aspect ratio', 'horizontal resolution',
            and 'vertical resolution', 2 of these numbers must be specified.
            The third one is computed from the other two. If the horizontal
            and vertical resolution are equal, you can use 'resolution'.

    rotate                  Rotation angle of font in degrees. Takes 1
                            argument. A clockwise rotation is positive.
                            Default is 0 degrees (upright).

    oblique                 Obliquing angle of font in degrees. Takes 1
                            argument. A slant to the right is positive.
                            Default is 0 degrees (upright).

    plaid mode              No argument. If the input font is a fontware
                            outline, the plaid data in the font is used to
                            optimize the allocation of pixels to the features
                            of the characters. This is the default.

    no plaid mode           No argument. The plaid data (if any) in the
                            fontware outline is not used.

    set width unconstrained   No argument. Pixels are allocated to zones
                            without taking into account the number of pixels
                            already allocated to other zones. Each zone
                            receives the optimum number of pixels at the
                            expense of variations in set width.

    set width constrained   No argument. Pixels are allocated to zones after
                            taking into account the number of pixels already
                            allocated to other zones. Each zone receives the
                            optimum number of pixels as a proportion of the
                            pixels remaining to be allocated. This is the
                            default.

    import widths           1 argument. Pathname of compressed font.
                            Each character is scaled individually in x to
                            match the width of the corresponding character
                            in another font. The correspondence is by
                            character ID.
                        ==> NOT IMPLEMENTED

    clip                    "left" "right" "top" "bottom" (one or more)
                            Truncates the character so that the bitmap fits
                            within whatever edges are specified. Clipping
                            WILL NOT WORK if character extents are not
                            present in the compressed outline.


    squeeze                 "left" "right" "top" "bottom" (one or more)
                            Scales the character so that the bitmap fits
                            within whatever edges are specified.
                            Squeezing WILL NOT WORK if character extents
                            are not present in the compressed outline.
                            Squeeze turns clipping on automatically for
                            that edge.

            Top and bottom refer to the top and bottom of the
            em-square. Left and right refer to the left and right
            sidebearings. Clipping and squeezing take effect only
            if the rotation angle is 0.



    subset list             Takes 1 argument, the pathname of a character
                            subset file. This is how you can create a bitmap
                            font that is a subset of the outline font. A
                            character subset file is an ASCII text file that
                            is a list of Fontware character id numbers. The
                            program finds the requested characters whenever
                            possible, and generates a bitmap font of those
                            characters in the order requested. No bitmap
                            character is created, if a character id isn't in
                            the outline font. The file format is
                  (first line)   $CSDTXT
             (all other lines)   <char-id-number>  <comments> <newline>



    kerning table           Takes either 0 or 1 argument.

                            If 1 argument, argument is the pathname of a
                            kerning pair file. This file is an ASCII text
                            file, editable by the user, that has a list of
                            kerning pairs. The file format is
                  (first line)   $KERN
             (all other lines)   <char-id-#1>  <char-id-#2>  <cmmts> <newline>

                            If 0 arguments, uses a default kerning pair file
                            ("/user/include/kern.prs"). This file has a list
                            of standard kerning pairs (about 170).

                            The kerning pair adjustment values are taken from
                            the outline font and converted from relative units
                            to pixels.  The outline font must have character
                            id's. If any outline characters are omitted from
                            the bitmap font, then kerning pairs with those
                            characters will also be omitted. Kerning pairs
                            with an adjustment of 0 pixels will be omitted.

    kerning all             No argument. All possible kerning pairs from the
                            outline font are included in the bitmap font.

                            The kerning pair adjustment values are taken from
                            the outline font and converted from relative units
                            to pixels.  The outline font must have character
                            id's. If any outline characters are omitted from
                            the bitmap font, then kerning pairs with those
                            characters will also be omitted. Kerning pairs
                            with an adjustment of 0 pixels will be omitted.



            Bitmap fonts are named "cmpr.ffff_lll_000_v_1". The three fixed
            fields, "cmpr", "000" and "1", can be changed from their default
            values by the following keywords.

    first four              Takes 1 argument, any text string. Overrides the
                            first 4 characters of the bitmap font file name,
                            "cmpr".
                                "****.0003_050_000_2_1"

    device                  Device number. Takes 1 integer argument.
                            Inserts argument into device field of bitmap name,
                                "bmap.0003_050_***_2_1"

    revision                Revision number. Takes 1 integer argument.
                            Inserts into bitmap revision number field of
                            bitmap name,
                                "bmap.0003_050_000_2_*"

    ;                       Comment symbol. Anything following a semicolon on
                            the same line is ignored.


EXAMPLE OF A JOB CONTROL FILE:

    $BFG    ;The first 4 characters of the file must be '$BFG'.

    compressed font         font.0003_1080
    lines per em            60
    ; Creates a 60-scan line bitmap font from compressed outline
    ; "font.0003_1080". Since the resolution is not specified, it defaults
    ; to 72 dots per inch. The point size is calculated from the lines per em
    ; and resolution.
    $

    compressed font         font.0003_1080
    horizontal resolution   600
    vertical resolution     300
    point size              12
    ; Creates a 12 point line bitmap font. The number of lines per em (50) in
    ; the font is calculated from the point size and vertical resolution.
    $

    compressed font         font.0003_1080
    horizontal resolution   600
    vertical resolution     300
    lines per em            60
    ; Creates a 60-scan line bitmap font. The point size is calculated from
    ; the lines per em and vertical resolution.
    $

    compressed font         font.0003_1080
    resolution              300
    point size              12
    lines per em            25
    ; This is illegal. You cannot specify both lines per em and point size.
    $

    compressed font         font.0003_1080
    vertical resolution     84
    aspect ratio            1.1
    point size              12
    ; Creates a 12 point bitmap font. A horizontal resolution of 92.4 dpi
    ; is calculated from the product of the aspect ratio and vertical
    ; resolution.
    $

    compressed font         font.0003_1080,  font.0004_1080
    lines per em            6:120
    resolution
    ; This is an example of how to use argument lists.
    ; Creates 115 bitmap fonts from "font.0003_1080" from 6 to 120 lines, and
    ; then another 115 bitmap fonts from "font.0004_1080". "resolution" has no
    ; argument so it is ignored.
    $

    compressed font         font.0003_1080
    point size              4 : 8 : 0.5, 10, 12
    resolution              300
    oblique                 12
    set width unconstrained
    ; Creates point sizes 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 10, and 12,
    ; obliqued at 12 degrees.
    $


FORMAT:

    MAKE_BMAP  <font_file> [options]

    MAKE_BMAP uses the Bitmap Font Generator software to create Bitstream
    format (B1.1) bitmaps out of compressed/fontware outlines. Arguments are
    taken from the command line.


ARGUMENT (required):

    compr_font      pathname of compressed outline font


OPTIONS:

    -l              Followed by an argument list. This is the number of scan
                    lines per em of the bitmap font. These numbers must be
                    integers.

    -p              Followed by an argument list. This is the point size of
                    the font.

            You need to specify either 'lines per em' or 'point size'
            but not both, since one can be computed from the other.

    -r              The argument following "-r" is the output device
                    resolution in dots per inch.

    -h              The argument following "-h" is the output device
                    resolution in the horizontal dimension in dots per inch.

    -v              The argument following "-v" is the output device
                    resolution in the vertical dimension in dots per inch.

    -a              The argument following "-a" is the aspect ratio. The
                    default value is 1.

            Of the three quantities 'aspect ratio', 'horizontal resolution',
            and 'vertical resolution', 2 of these numbers must be
            specified. The third one will be computed from the other
            two. If the horizontal and vertical resolution are equal, you
            can use 'resolution'. The aspect ratio will be exactly 1.0.

    -w              The argument following "-w" is the rotation angle. The
                    default value is 0 degrees. A clockwise rotation is
                    positive.

    -q              The argument following "-w" is the obliquing angle. The
                    default value is 0 degrees. A slant to the right is a
                    positive obliquing angle.

    -b              Bogus mode. No argument is required. Ignore plaid data
                    even if present in fontware outline.

    -u              Unconstrained set widths. No argument is required.
                    Each zone is allocated pixels without taking into account
                    the number of pixels that have already been allocated 
                    to other zones. This produces the most accurate pixel
                    allocation at the expense of set width.

    -i              The argument following "-i" is the filename of a
                    compressed font. The characters will be scaled in x
                    to match the widths of the specified font. Corresponds
                    to "import widths" (not implemented).

    -c              Arguments: left, right, top, bottom.
                    The character is clipped so that it fits within whatever
                    boundaries are specified. Corresponds to "clip".

    -z              Arguments: left, right, top, bottom.
                    The character is scaled so that it fits within whatever
                    boundaries are specified. Corresponds to "squeeze".

    -s              The argument following "-s" is a character subset file
                    that has a list of character ID's. Refer to "subset list"
                    in the keywords section for complete information.

    -kt             An optional argument following "-kt" is a kerning pair
                    table pathname. Otherwise uses default table
                    ("/user/include/kern.prs").

    -ka             Includes all possible kerning pairs from the outline font.

    -f              The argument following "-f" is a string. It sets the first
                    four characters of the bitmap font file name.

    -d              The argument following "-d" is the device number. This is
                    part of the bitmap filename. Default is 0.

    -e              The argument following "-e" is the revision number of the
                    bitmap font. This is part of the filename. Default is 1.


EXAMPLES:

    make_bmap  font.0003_2160  -l 60
        Creates a 60-scan line bitmap font. Since the resolution is not
        specified, it defaults to 72 dots per inch. The point size is
        calculated from the lines per em and resolution.

    make_bmap  font.0003_2160  -h 600 -v 300 -p 12
        Creates a 12 point line bitmap font. The number of scan lines (50)
        in the font is calculated from the point size and vertical resolution.

    make_bmap  font.0003_2160  -h 600 -v 300 -l 60
        Creates a 60-scan line bitmap font. The point size is calculated
        from the lines per em and vertical resolution.

    make_bmap  font.0003_2160  -r 300 -p 12 -l 25
        This is illegal. You cannot specify both lines per em and point size.

    make_bmap  font.0003_2160  -v 84  -a 1.22  -p 12
        Creates a 12 point bitmap font. A horizontal resolution of
        102.48 dpi is calculated from the product of the aspect ratio
        and vertical resolution.

    make_bmap  font.0003_2160  -l 6:120
        This is an example of an argument list.
        Creates 115 bitmap fonts at all integer sizes from 6 to 120 lines.

    make_bmap  font.0003_2160  -l 4:8:.5, 10, 12 -r 300 -q 12 -u
        Creates point sizes 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 10, and 12,
        300 dpi, obliqued at 12 degrees, set width unconstrained
