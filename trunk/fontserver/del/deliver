echo "Delivering fontserver..."

DELIVER_TYPE=$1
NULL=/dev/null

[ -n "$FONTSERVER" ] || echo 'FATAL: Define $FONTSERVER' && exit 1
[ -n "$XFONTSERVER" ] || echo 'FATAL: Define $XFONTSERVER' && exit 1

# Check each of the files delivered with fontserver to ensure that
# we can read them

LIBFONTSERVER="libFS_s.a"
LIBFONTSERVERX="libXFS_s.a"

HFILES="
	$FONTSERVER/src/hfiles/FS.h
	$FONTSERVER/src/hfiles/FSTypes.h
	$FONTSERVER/src/hfiles/FSFont.h
	$FONTSERVER/src/hfiles/FSBmap.h
	$FONTSERVER/src/hfiles/FSOutl.h
	$FONTSERVER/src/hfiles/FSTypeface.h
	$XFONTSERVER/src/hfiles/FSX.h
	$XFONTSERVER/src/hfiles/FSXBmap.h
	$XFONTSERVER/src/hfiles/FSXFont.h
	$XFONTSERVER/src/hfiles/FSXOutl.h
	$XFONTSERVER/src/hfiles/FSXTypeface.h
	$XFONTSERVER/src/hfiles/FSXTypes.h
	"

PRODUCT_FILES="
	$FONTSERVER/src/afiles/README
	$FONTSERVER/src/afiles/product.def
	$FONTSERVER/del/install.sh
	$FONTSERVER/del/remove.sh
	"
LIBFS_FILES1="
	$FONTSERVER/src/cfiles/libFS_s.a
	"

LIBXFS_FILES1="
	$XFONTSERVER/src/cfiles/libXFS_s.a
	"

LIBFS_FILES3="
	$FONTSERVER/src/cfiles/libFS_s.a3
	"

LIBXFS_FILES3="
	$XFONTSERVER/src/cfiles/libXFS_s.a3
	"

LIBFS_FILES4="
	$FONTSERVER/src/cfiles/libFS_s.a4
	"

LIBXFS_FILES4="
	$XFONTSERVER/src/cfiles/libXFS_s.a4
	"

SHLIBS="
	$FONTSERVER/src/cfiles/libFS2_s
	$FONTSERVER/src/cfiles/libFS2_s4
	"

WORKED="YES"
for FILE in		\
	$HFILES		\
 	$LIBFS_FILES1	\
 	$LIBFS_FILES3	\
	$LIBFS_FILES4	\
 	$LIBXFS_FILES1	\
 	$LIBXFS_FILES3	\
	$LIBXFS_FILES4	\
	$PRODUCT_FILES
do
	[ -r "$FILE" ] || echo "FATAL: Can't access $FILE" && WORKED="NO"
done

[ "$WORKED" = "YES" ] || exit 1

# Update version number.

ksh $GRA_BIN/Update.$DELIVER_TYPE
VERSION=`ksh $GRA_BIN/getVersion`
DATE=`ksh $GRA_BIN/getDate`

# Patch version number into shlib

$ENVIRONV/del/setver/setver Fontserver "Fontserver $DATE $VERSION" $SHLIBS

# Get to a fresh tmp directory.

FSTMP=$FONTSERVER/tmp

rm -rf $FSTMP 2>$NULL
mkdir $FSTMP 2>$NULL
cd $FSTMP 2>$NULL || echo "Can't cd to $FSTMP." && exit 1

# Edit the current version and date into the readme files.

for FILE in $PRODUCT_FILES
do
	FNAME=${FILE##*/}	# strip off all but file name
	sed -e "s/:DATE:/$DATE/g" -e "s/:VERSION:/$VERSION/"	\
		<$FILE >$FNAME 2>$NULL
done

# Copies are necessary here (rather than symbolic links) because we will
# need to change permissions on the files.

echo "Copying files to delivery directory."

mkdir prod
cp $HFILES prod
chmod a=r,u+w prod/*.h

echo "Sending the files."

FSDIR=$DELDIR/fontserve
# fmu $SYSTEM com mkdir $FSDIR
rcmd $HOST -l $LOGIN mkdir $FSDIR

for FILE in $PRODUCT_FILES
do
	FNAME=${FILE##*/}	# strip off all but file name
#	fmu -v $SYSTEM send $FNAME $FSDIR/$FNAME
	rcp -p $FNAME $LOGIN@$HOST:"$FSDIR/$FNAME"
done

cd prod
# find . -print | cpio -o | compress |
# 	fmu -v $SYSTEM send - $FSDIR/fontserve.sun

#find . -print | cpio -o | compress >$FSTMP/fontserve.sun
#rcp -p $FSTMP/fontserve.sun $LOGIN@$HOST:"$FSDIR/fontserve.sun"
#rm $FSTMP/fontserve.sun

mkdir c100 c300 c400
cp $LIBFS_FILES1 c100/$LIBFONTSERVER
cp $LIBFS_FILES3 c300/$LIBFONTSERVER
cp $LIBFS_FILES4 c400/$LIBFONTSERVER
cp $LIBXFS_FILES1 c100/$LIBFONTSERVERX
cp $LIBXFS_FILES3 c300/$LIBFONTSERVERX
cp $LIBXFS_FILES4 c400/$LIBFONTSERVERX

# find . -print | cpio -o | compress |
# 	fmu -v $SYSTEM send - $FSDIR/fontserve.prod

find . -print | cpio -o | compress >$FSTMP/fontserve.prod
rcp -p $FSTMP/fontserve.prod $LOGIN@$HOST:"$FSDIR/fontserve.prod"
rm $FSTMP/fontserve.prod

ksh $GRA_BIN/Init.prod fontserve

echo "\nDelivered version $VERSION on $DATE"
