/* Do not alter this SPC information: $Revision: 1.1.53.1 $ */
/*
**	NAME:							uldschdf.rc
**	AUTHORS:						Jennifer Xia
**	CREATION DATE:					July 9, 1990
**	ABSTRACT:
**		It contains a function which unloads a schema definition.
**	
**	REVISION HISTORY:August 6th, 1991 Hitesh Patel
**					 Modified 'RISint_new_stmt' call to avoid 'repreparing of
**                   static stmts' by Prasad Challa on  9/16/91
*/
 
/* {{{ DEFINES */

#if defined(WIN32S) && defined(ULD_EXE)
#include <windows.h>
#include <windowsx.h>
#include "winport.h"
#include "winio.h"
#include "winhan.h"
#include "risutl.h"
#include "prog32s.h"
#endif 

#define SQL_H
#ifdef UNLOAD_DEBUG
#undef UNLOAD_DEBUG
#endif

/* }}} */
/* {{{ INCLUDES */

exec sql include "unlod.h";

/* }}} */
/* {{{ VARIABLES */

/* }}} */
/* {{{ FUNCTION PROTOTYPES */

#define uldschdf_rc
#include "sys.prt"
#include "comdebug.prt"
#include "comjmp.prt"
#include "comumsg.prt"
#include "ris.prt"
#include "uldermsg.prt"
#include "uldfmsch.prt"
#include "uldschdf.prt"
/*#include "uldsecur.prt"*/
#include "uldtime.prt"
#include "ucoerrbx.prt"

/* }}} */
/**********************************************************************/
/* {{{ RISuld_unload_sch_def() */

extern int RISuld_unload_sch_def(
	sch_node_type	*sch_node_ptr)
{
/* {{{ Local Variables */

	ris_schema_info	*schema_info;
	ris_db_info	*db_info;
/***
	char declare_schema_stmt[STRING_MAX_LEN];
	char *osuser;
	char *ospasswd;
***/
	exec sql begin declare section;
		char	*err;
	exec sql end declare section;

/* }}} */
/* {{{ Get schema info */

	ULD_DBG(("RISuld_unload_sch_def: sch_node_ptr 0x%x \n", sch_node_ptr));

	RISget_schema_info(sch_node_ptr->sch_name,&schema_info,&db_info,0);

	UNLOD_WARNING_CHECK(
		RISuld_ptr_struct_ptr->bsnode_ptr->snode_ptr->ssqlwarnings);

	if( SQLCODE != RIS_SUCCESS )
	{
		if( RISuld_mode == EMBED )
		{
			RISuld_ptr_struct_ptr->bsnode_ptr->snode_ptr->sris_err_code 
				= risca->sqlcode;
			RISuld_ptr_struct_ptr->bsnode_ptr->snode_ptr->sdb_err_code 
				= dbca->sqlcode;
		}
		else
		{
			exec sql report error into :err;
#if !defined(ULD_DLL)
			PUTS(err);  
#endif
		}

		/*
		**	nothing to free
		*/
		ULD_DBG(("1. RISuld_unload_sch_def: end"));
		return(FAILURE);
	}

/* }}} */
/* {{{ Display debug info about the schema */

	if (RISuld_debug)
	{
		int i;
		RIScom_output_debug("schname = <%s>\n", schema_info->schname);
		RIScom_output_debug("schowner = <%s>\n", schema_info->schowner);
		RIScom_output_debug("schownpass = <%s>\n", schema_info->schownpass);
		RIScom_output_debug("db->dbid = %d\n", db_info->dbid);
		RIScom_output_debug("db->dtype = <%c>\n", db_info->dtype);
		RIScom_output_debug("db->dbname = <%s>\n", db_info->dbname);
		for (i = 0; 
			(i < RIS_MAX_NODE_SIZE) &&
			((db_info->pathways + i)->protocol != '\0') && 
			(*(db_info->pathways + i)->netaddr != '\0');
			i++)
		{
			RIScom_output_debug("protocol = <%c>, netaddr[%d] = <%s>\n",
				(db_info->pathways + i)->protocol, i,
				(db_info->pathways + i)->netaddr);
		}
	}

/* }}} */
/* {{{ Output the CREATE SCHEMA statement */

    /* create [secure] schema <schema_name> */
	RISuld_form_sch_clause(sch_node_ptr);

	/* on database */
	if (FPUTS(" on database", RISuld_out_fp) == EOF) 
		WRITING_FILE_ERR(RISUTL_E_CANT_WRITE_OUTPUT_FILE)

	/* Also has left paren */
	RISuld_form_dbtype_clause(db_info->dtype);

	RISuld_form_dbname_clause(db_info->dbname);

	RISuld_form_ris_dict_dbname_clause(db_info);

	RISuld_form_osuser_clause(db_info);

	RISuld_form_dir_clause(db_info);

	RISuld_form_ostype_clause(db_info->ostype);

	RISuld_form_remote_clause(db_info);

	RISuld_form_gateway_clause(db_info);

	/* Also has right paren */
	RISuld_form_option_clause(db_info);

	if (sch_node_ptr->db_name[0] != '\0')
		RISuld_form_user_clause(sch_node_ptr->db_name, sch_node_ptr->db_pwd);
	else if (sch_node_ptr->os_name[0] != '\0')
		RISuld_form_user_clause(sch_node_ptr->os_name, sch_node_ptr->os_pwd);
        else
		RISuld_form_user_clause(schema_info->schowner, schema_info->schownpass);
		
	/* End of the line, chump */
	if (FPUTS("\n", RISuld_out_fp) == EOF) 
		WRITING_FILE_ERR(RISUTL_E_CANT_WRITE_OUTPUT_FILE)

	RISuld_print_msg(MSG(RISUTL_E_UNLOADED_SCHEMA), 
					 sch_node_ptr->sch_name);

/* }}} */
/* {{{ Free memory and exit */

	/*
	** All these structures were malloced by application and have to be freed
	** risgrantee list is malloced not matter what and therefore has to be freed
	*/
	free(db_info);
	free(schema_info);

	ULD_DBG(("3. RISuld_unload_sch_def: end"));
	return(SUCCESS);

/* }}} */
}

/* }}} */
