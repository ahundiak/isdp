/* $Id: README,v 1.1.1.1 2001/01/04 21:07:41 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/vdassoc / README
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: README,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:41  cvs
 *	Initial import to CVS
 *	
# Revision 1.2  1998/03/06  16:08:00  pinnacle
# VDbro1.I
#
# Revision 1.1  1997/05/08  14:32:08  pinnacle
# initial revision
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 03/06/98  ah      Browser Information
 * -------------------------------------------------------------------*/

/* ------------------------------------------------------------------
 * 03/06/98 Art Hundiak
 * I wanted to add the generic vdbro$PrintObject function here so I could
 * use it to debug vdassoc problems without running into loading
 * problems.  
 */

- swap dependent on a macro occurence --> memory fault.
  fix in the file macro/ACcpxi.I

- return code not initialize in the method ACgive_path of ACncpx.
  No impact on model since nobody in model tests it, but struct does.
  fix in the file nmacro/ACncpxi.I

- to be able to use "modify macro" on an occurence which has lost one root
  because the root was in a reference file and has been deleted.
  fix in the file nmacro_co/COm_place3.I

- method ACgive_foot, ACreturn_structure should return an error when send
  to an ASsourcein object or an ACpretendin object when the object in the
  reference has been deleted.
  fix in file source/ASsourceini.I macro/ACpretendini.I

- method ACgive_structure,  remove noisy error message :
  Error at line 68 of the file NDmacroi.I :
  Error status = 2508010,
  OM-W-UNKNOWN_MSG, Unknown message send attempted
  fix in file node/NDmacroi.I

- function NDget_comp_state remove noisy error message 
  fix in file node/NDgm.I

- function NDupdate_graph compute state of ND_EXTERN elements of the computed
  graph was not initialize to ND_COMP_SAME
  fix in file node/NDgraph.I

- TEMPORARY FIX to not return an error code when wild_disconnect fails on 
  expression. That's a temporary fix because we NEED to understand WHY it
  occurs
  fix in file nodein/NDchannel.I

- dependent connection to members of ci_macro or structure element
  fix in the file gopara/ASsupport.I

- when a reference file is dettached, dependency is transformed to non 
  associative.
  fix in the file GRctxdeletec.I

- when a macro library is removed from ACpath and when the object space is
  saved, the corresponding OS does not receive "close_module" when exiting
  the desing file.
  fixe in the file super_parai.I

- memory fault in ACrg_collect
  fix in the file ACrg_coli.I

- connection to an expression member of a macro is not done by pretend
  on the dependency channel of the macro --> parent lost when recompute
  fix in the file exp_ovrdi.I exp_util.I


- when copy/move dependent graph, extern of the copied graph were copied 
  to root instead of reconnection to initial elements
  fix in the file COm_move3.I
  

- feet don't transfer symbology when the suffix contain 0 or 9
  fix in the files ACncpxi.I (from the previous kludge) and ACconsti.I

#
# - Don't touch symbology of expressions
#   fix in files GRvgchgcolor.I  GRvgchglevel.I  GRvgchgweigh.I GRvgchgdp.I 
#  GRvgchgstyle.I  GRvgputsymb.I   
#
# Removed because EMS 02.01.01.XX fixed it (92/12/15)
#

- representation of dependent construction was not correctly evaluated
  when roots in a reference file
  fix in ACrep_sup.I


fixes in January 93, not integrated yet in Ems

- copy dependent graph does not work to copy plates splitted by another plate
  from a support plate to another

  fix in NDchannel.I :  in method move_to_tmp_clone Root.move_channel does not 
	work if target channel is not empty

  fix COm_move3.I : in method copy_graph  Before the copy graph, verify that the
    extern are root of the internal graph after integrating them in the list of
    initial objects.
    If not copy them to tmp_root and perform get_internal_graph again.
  
    NB : Problem with struct object : they maintain a dependency to global
	 attribute when copy to tmp_root.
   


- Maintain the symbology of feet when changing from one condition value
  to another one and coming back.
#
#  VDsymb_hold.S VDsymb_holdi.I : new object to hold symbology
#  Moved to ~vds/VDsymb_hold directory
#

  COm_option.I : Take default occurence from conditional parameter box if found
        instead of taking it always from first macro

  COm_condit4.I : method find_feet, when the conditional is defined store from 
     which macro comes the foot in me->Feet_Channel, and the objid of the
     foot in the corresponding default occurence in me->Feet_Used

  COm_condit3.I : method execute, create a default occurence for the conditional
     This default occurence contains the copy of the feet coming from the
     first macro contained in the conditional and a VDsymb_hold for other
     feet without matching names.

  COm_condit.S : The spec file should be modified to reflect the use of 	
     me->Feet_Channel and me->Feet_Used.
  
	
  ACcond_defi.I:
     method ACcontext_compute_feet : transfer symbology from context object to
	VDsymb_hold objects if any

     method ACmap_feet : create VDsymb_hold objects for existing feet without
        matching name in the new representation

     function ACfind_matching_name : find a foot_name has an instanciated foot
	with a mathcing prefix.
  

- bad transfer of symbology from one macro of a conditional to another 
  when the new computed macro has less feet than the initial if the 
  foot names are something like
     X1 X2 Y2 ---> Y1

  file ACncpxi.I ACconsti.I


- bad transfer of symbology when a ci macro places a macro : The entire
  macro takes the symbology of the first component when recomputes

  file ACconsti.I ACncpx_comp.I


- Copy/move dependancy graph does not work across reference files.

  file COm_move3.I



- ACconsume memory fault on an ASsourcein.

  file NDMacCons.I, just an override of ACconsume defined in NDmacro_over.I


- Modification of ACheader objects to better manage the "consume" and
  "unconsume". 

  file ACconsume.

- Fixe a problem of make_source of the ACheader objects (ex: face of
  a solid).

  file ACheadloc.I.
  
- Modification of the show data of the ACheader objects.

  file ACheaderi.I.

- Modification to make the macros working with graphic groups as feet
  (modif already done in 2.2).

  file NDmacro_over.I, ASsourcei.I.


- Even if an ACpretendin was already existing with the same downscan, 
  another one was created. 

  file ASmultigo.I

- The method ACreturn_go gives a return status (as$status) in stead of
  an error message explaning the reason of the failure.

  file ACpretendi.I

- It was a problem trying to attach the macro libs when the macro lib
  have not been correctly unmounted at save time.

  file dir_macro.I

- Problem with copy/move dependent graph when pretend extern of the copied
  graph

  file ACpretendi.I

- Fix memory fault we recall the last located objects with locate
  components properties on.       the 2 june 93 MF & LLC

  file headloc.I

- Fix VDsymb_hold delete at save time     LLC & JLA       3 june 93

  file NDmacro_over.I

- 29 june 1993, dependant connection to a face of a SMLtdVol, SMSketchVol,
  SMVolBySplt

  file gopara/ASsupport.I

- Fix trans_symb.I In case the VDsymb_hold is none initialise we do no more
  transfer the symbology to the object.		LLC 30 june 93.

  file trans_symb.I

- Command "Review Root Element" activates NDdisplay for objects of class
  ACrg_collect and ACpretend. (An error message appears ..)

  file CO_hilitei.I

- In trans_symb.I remove the error message when GRput_symb fail. It happens
  when ACpl_hold received this message during recomputation of an equipment.
  Jean 14 July 93.

  file trans_symb.I


