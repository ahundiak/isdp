Author : Marc Fournier (ISDC France)		
Date   : 10-April-1992
Modify : 04-May-1992


		--------------------------------------------------------
		I/VDS database ASCII files for I/STRUCT, I/ROUTE & I/VDS
		--------------------------------------------------------


0) Definitions :	{VDS} is the path to I/VDS (like /usr/ip32/vds).
   -----------

1) Files location :
   --------------

	PDM/PDU parametric families generation
	--------------------------------------
		I/STRUCT : {VDS}/data/struct	(sections, material & grade)
		I/ROUTE	 : {VDS}/data/piping	(piping components)
		I/VDS	 : {VDS}/data/equip	(equipment components)

		These parametric families are generated by {VDS}/VDSinit_db
		executable. This executable is kick of by {VDS}/VDSinit.sh or
		by VDS}/VDSloaddata shell scripts.

		The file structure will be explained after.

	VDS tables generation
	---------------------
		I/VDS    : {VDS}/data/vds	(tables created with RIS)

		These tables are created via RIS, using {VDS}/data/vds/vds.ddl,
		deleted via RIS, using {VDS}/data/vds/vdsrm.ris.
		These tables are loaded using {VDS}/data/vds/vdsld.ris file and
		{VDS}/bin/RISload executable.

2) Family file : *.f
   -----------

	Example 1 : {VDS}/data/struct/AAS_I_beam.f
 	---------
		[
		n_catalogname(char[12])=AAS_I_beam
		n_catalogdesc(char[100])=Parametric Catalog for AAS_I_beam
		n_cofilename(char[14])=struct/VSmacro
		p_d1|coor_sys(referential)=coor_sys
		p_o2|interference(curve)=interference
		p_o3|schematic(curve)=schematic
		p_o4|without_fillet(curve)=without_fillet
		p_o5|with_fillet(curve)=with_fillet
		p_u0|p_partnum(char[15])=Part Number
		p_u0|p_revision(char[15])=Material
		p_u0|p_partdesc(char[40])=Part Description
		p_u0|n_creator(char[14])=CREATED BY
		p_u0|p_creationdate(char[10])=Part Creation Date
		p_u0|p_creationtime(char[8])=Part Creation Time
		p_u0|p_parttype(char[1])=Part Type
		p_s8|Height(double)=Height
		p_s9|width(double)=width
		p_s10|webThickness(double)=webThickness
		p_s11|flgThickness(double)=flgThickness
		p_s12|fltRadius(double)=fltRadius
		p_f0|n_cofilename(char[14])=Local File Name
		]

	Example 2 : {VDS}/data/equip/chair.f
 	---------
		[
		n_catalogname(char[12])=chair
		n_catalogdesc(char[100])=I/VDS Equipment Catalog
		n_cofilename(char[14])=equip/EQUIPMENT
		n_itemdesc(char[40])=equipment
		p_d1|cs(referential)=cs
		p_v1|eqp_number(char[20])=Equipment Number[0001]
		p_v2|eqp_descr(char[40])=Equipment Description[Chair]
		p_v3|apprv_stat(char[40])=Approval Status[NA]
		p_v4|constr_stat(char[8])=Construction Status[new]
		p_v5|no_mto_flag(char[1])=No MTO Flag[y]
		p_v6|weight_grp(integer)=Weight Group[0]
		p_v7|chg_no(integer)=Change No[0]
		p_v8|comp_note(char[40])=Remarks[no note]
		p_u0|p_partnum(char[32])=Part Number
		p_u0|p_revision(char[15])=Part Revision
		p_u0|p_partdesc(char[40])=Part Description
		p_u0|n_creator(char[14])=CREATED BY
		p_u0|p_creationdate(char[10])=Part Creation Date
		p_u0|p_creationtime(char[8])=Part Creation Time
		p_u0|p_parttype(char[1])=Part Type
		p_u0|wet_weight(double)=wet_weight
		p_u0|eqp_type(char[12])=eqp_type
		p_u0|heat_disp(double)=heat_disp
		p_u0|mlx(double)=moment of inertia
		p_u0|mly(double)=moment of inertia
		p_u0|mlz(double)=moment of inertia
		p_f0|n_cofilename(char[14])=Local File Name
		]

 	first line : start of family definition
	line 2     : n_catalogname(char[12])=<family name>
	line 3     : n_catalogdesc(char[100])=<family description>
	line 4     : n_cofilename(char[14])=<macro_library path>
	other lines: family's parameters definition
 	last line  : end of family definition

	family name	   : database catalog name

	family description : database catalog description

	macro_library path : this is the relative path from

				1) [{VDS}/data/struct]
				2) [{VDS}/data/equip]

			      to the macro_library. In this case the
			      full path will be :

				1) [{VDS}/data/struct/struct/VSmacro]
				2) [{VDS}/data/equip/equip/EQUIPMENT]

	parameter definition : <suffix><order>|<attr_name>(<type>)=<param_name>

		suffix : p_c	--> Dynamic Create	 [not template]

			 p_d	--> Dynamic Locate	 [dynamic template]
			 p_o	--> Dynamic Output	 [feet of the macro]
			 p_s	--> Static Create	 [static template]

			 p_v	--> User_defined Dynamic [not template]
			 p_u	--> User Attribute	 [PDU required]
			 p_f	--> Family Name		 [PDU required]

		order  : 0 for PDM/PDU attributes (p_u & p_f)
			 1 to n for non PDM/PDU attributes

		Difference between <p_c> and <p_v>. Both are their values given
		by user at placement time. This value will be check in CIT table
		for <p_v> type attribute.


			 NB : 1) the lines where order=0 cannot be modified
			      2) the lines where order!=0 must be numbered from
				 1 to n, without number missing.

		attr_name  : shorten parameter name in the database

			NB : Only I/PDM or I/NFM system attributes may begin
			     with a p_ or n_.  The only exeception to this is
			     p_macro, which may be used.  All other p_ or n_
			     attributes will load when creating the familiy,
			     but will not be unloaded if you regenerate the .f
			     file.
			
		type       : parameter datatype (curve, refential, double ...)
		param_name : full parameter name in the database

        Default values can be specified for user dynamic attributes as follows.
	They cannot be specified for <p_u> or <p_d> attributes.
        p_v4|apprv_stat(char[10])=Approval Status[NEW]

        There is no differentiation between p_c or p_o or p_v by PDM.

	Note : there only one definition in a "*.f" ASCII file.

	The default template definitions are present in config directory as 
	VDGnFmFl.def and VDGnFmFl.pip, VDGnFmFl.eqp and VDGnFmFl.str.

3) Part file : *.p
   ---------

	Example 1 : {VDS}/data/struct/AAS_I_beam.p
        ---------
		[
		n_catalogname=AAS_I_beam
		n_cofilename='VSmacro'
		p_partnum='I2x0.577'
		p_revision='aluminium'
		p_partdesc=''
		n_creator='nfmadmin'
		p_creationdate='04/28/90'
		p_creationtime='13:11:04'
		p_parttype='P'
		Height=2.000000
		width=1.000000
		webThickness=0.130000
		flgThickness=0.130000
		fltRadius=0.100000
		]
		[
		...
		]
		.
		.
		.
		]

	
	Several parts can be defined in a "*.p" ASCII file. Each part starts 
	with "[" and end with a "]".

	line 1 : start first part definition 
	line 2 : n_catalogname=<family name>
	line 3 : n_cofilename='<macro_library name>'
	line 4 : n_itemname='<part name>'
	line 5 : n_itemrev='<part revision>'
	line 6 : n_itemdesc='<part description>'
	line 7 : n_creator='<PDU database owner : server login>'
	line 8 : p_creationdate='<date>'
	line 9 : p_creationtime='<time>'
	line 10: p_parttype='P'		: harcoded for Parametric Part
	line 11 --> line 16	: <static parameter short name>=<value>
	line 17: end first part definition
	
	The following lines define other parts of <family name> if any.

		Note : Only the STATIC parameters are defined here. There will
		       be stored in the VDS database.

				------------

	Example 2 : {VDS}/data/equip/chair.p
        ---------

		[
		n_catalogname=chair
		n_itemname='chair'
		n_itemrev='1'
		n_itemdesc='chair'
		n_creator='nfmadmin'
		n_creationdate='05/24/91'
		p_parttype='P'
		wet_weight=40.0
		eqp_type='chair'
		heat_disp=0.0
		mlx=0.0
		mly=0.0
		mlz=0.0
		n_cofilename='EQUIPMENT'
		]
		[
		...
		]
		.
		.
		.
		]

	line 1 : start first part definition 
	line 2 : n_catalogname=<family name>
	line 3 : n_itemname='<part name>'
	line 4 : n_itemrev='<part revision>'
	line 5 : n_itemdesc='<part description>'
	line 6 : n_creator='<PDU database owner : server login>'
	line 7 : p_creationdate='<date>'
	line 8 : p_creationtime='<time>'
	line 9 : p_parttype='P'		: harcoded for Parametric Part
	line 10 --> line 15	: <static parameter short name>=<value>
	line 16: n_cofilename='<macro_library name>'
	line 17: end first part definition
	
		Note : In this EQUIPMENT example, the macro_library name is 
		       defined at the end of each part description. As in the
		       STRUCT example, only the static parameters are defined in
		       the *.p file.

