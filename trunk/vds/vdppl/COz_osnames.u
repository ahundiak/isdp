/* $Id: COz_osnames.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $ */ 

/***************************************************************************
 * I/VDS
 *
 * File:        vdppl/COz_osnames.u
 *
 * Description: Lists all internal/external osnames
 *
 * Dependencies:
 *
 * Revision History:
 * $Log: COz_osnames.u,v $
 * Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 * Initial import to CVS
 *
# Revision 1.1  1998/11/05  16:53:12  pinnacle
# tags
#
 *
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 11/05/98  ah      Created
 ***************************************************************************/
#include "VDppl.h"

IGRint bad;

IGRstar VDosPrint(osNum)
  VDosnum  osNum;
{
  IGRchar name1[128];
  IGRchar name2[128];

  IGRchar file1[32];
  IGRchar file2[32];

  IGRchar *p;
  IGRchar flag;

  // Get Internal name  
  *name1 = 0;
  om$os_number_to_internal_name (osnum = osNum, osname = name1);
  if (*name1 == 0) {
    return 0;
  }
  // Get external name
  *name2 = 0;
  om$os_number_to_name (osnum = osNum, osname = name2);

  // Filenames should match
  p = strchr(name1,'~');
  if (p == 0) *file1 = 0;
  else {
    *p = 0;
    strcpy(file1,name1);
    *p = '~';
  }
  p = strrchr(name2,'/');
  if (p == 0) *file2 = 0;
  else strcpy(file2,p+1);

  if (strcmp(file1,file2)) {
    bad = bad + 1 ;
    flag = '?';
  }
  else flag = ' ';

  printf("%c %2d %-32s %s\n",flag,osNum,name1,name2);

  return 1;
  
}

main()
{ 
  IGRint i;
  IGRchar buf[128];

  bad = 0;

  printf("========== OSnames Scanning =============\n");
  for(i = 2; VDosPrint(i); i = i + 1);

  if (bad == 0) {
    sprintf(buf,"%d osnames ok",i);
    UI_status(buf);
  }
  else {
    sprintf(buf,"%d bad internal osnames!",bad);
    UI_status(buf);
  }
  return 1;
}










