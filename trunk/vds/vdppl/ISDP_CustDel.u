#include "VDppl.h"
#include "VDmem_ppl.h"
#include "vdprdmacros.h"
#include "v_slcdef.h"
#include "v_pplslc.h"
#include "vsdbgmacros.h"

int Struct_CustomDel()
{
    IGRint		loc_cnt, i;
    struct GRobj_env	structObj, OutputObj;
    struct GRid		*mc;
    extern IGRint	VSCustomDeletePPL();

    SetProc( Struct_CustomDel ); Begin;

    /* Initialize */
    loc_cnt = 0;
    mc = NULL;
    vd$ppl_getarg_at_index( which_info = INPUT_INFO,
			    index      = 0,
			    value      = &structObj);
    __DBGpr_obj("Object being deleted",structObj.obj_id);

    if( vd$prd_get_product_info( run_name = "Struct" ) == TRUE )
    {
	/* Implemented in isdp/struct/vscmdsup/VSCmdRevImp.I */
	VSCustomDeletePPL( &structObj.obj_id, &loc_cnt, &mc );
    }

    __DBGpr_int("loc_cnt",loc_cnt);
    vd$ppl_set_size( which_info	= OUTPUT_INFO,
		     size	= loc_cnt );

    for( i=0 ; i<loc_cnt ; i=i+1 )
    {
	OutputObj.obj_id = mc[i];
	__DBGpr_obj("i-th object added as output",OutputObj.obj_id);

	vd$ppl_setarg_at_index( which_info = OUTPUT_INFO,
				index	   = i,
				type	   = VD_object,
				value	   = &OutputObj );
    }

    _FREE( mc ); 
    End;
    return OM_S_SUCCESS;
}
