/* $Id: COz_InfChk.u,v 1.1.2.1 2003/06/17 16:43:03 ahundiak Exp $ */
/*************************************************************************
 * I/VDS
 *
 * File:        isdp/vds/vdppl/COz_InfChk.u
 *
 * Description: PPL to show all infinite planes with no children
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_InfChk.u,v $
 *      Revision 1.1.2.1  2003/06/17 16:43:03  ahundiak
 *      ah
 *
 *      Revision 1.1  2001/10/20 18:37:20  ramarao
 *      Implemented CR# 4033.
 *
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 06/17/03  ah      CR7469, Creation, Cloned from COz_badOcc.u
 *************************************************************************/

#include "VDppl.h"
#include "VDobj.h"
#include "VDmac.h"
#include "VDchn.h"
#include "vdVALmacros.h"

extern VDpms_findall_ancestryobjects();

extern GRclassid OPP_SMInfPlane_class_id;

main()
{
IGRlong			sts;
IGRint			i, j, loc_cnt, nb_class, tot_temp, state, cnt;
IGRchar			macName[100], tmpStr[200];
GRclassid		classid[1];
OMuword			osnum;
OM_S_OBJID		*loc_list;
struct GRid		obj_chk, defID, parentID;
struct  stemp   	*dtemp;
struct GRmd_env		cur_env;

   sts = MSSUCC;

   loc_cnt  = 0;
   loc_list = NULL;
   nb_class = 1;

   ci$get_module_info( md_env = &cur_env );
   osnum = cur_env.md_id.osnum;

   classid[0] = OPP_SMInfPlane_class_id;

   loc_cnt = 0;
   VDpms_findall_ancestryobjects( osnum, nb_class, classid, &loc_cnt, NULL );
   if( !loc_cnt ) goto wrapup;

   loc_list  = ( GRobjid * ) malloc( sizeof(GRobjid)*loc_cnt );
   if( loc_list == NULL ) goto wrapup;

   VDpms_findall_ancestryobjects( osnum, nb_class, classid, 
				  &loc_cnt, loc_list );

   vd$VAL_openLog();

   for( i=0; i<loc_cnt; i=i+1 ) 
   {
      obj_chk.objid = loc_list[i];
      obj_chk.osnum = osnum; 

      cnt = 0;

      vdchn$Get2(objID = &obj_chk, chnIDx = VDCHN_IDX_CHILDREN, cnt = &cnt);

      if (cnt == 0)
      {

        vd$VAL_addObject( GRid     = obj_chk,
                          PostText = "has no children");
      }
   }

   vd$VAL_closeLog();

wrapup:
   if( loc_list ) { free( loc_list );  loc_list = NULL; }
   return sts;
}
