/* $Id: COcrv_blendc.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/obsolete/cmd / COcrv_blendc.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COcrv_blendc.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
	 (not in commands.m => not compiled)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 			ci_mac_bib_FileId;
IGRint			resp_exp;

struct GRmd_env 	MOD_ENV;
struct GRid 		TEMP[8];
GRobj 			MAC1;
char			loc_mes[80],loc_prompt[80], exp_prompt[80];
double			exp_default;
int 			suc;

extern ASmake_source_from_env();

main()
{

 while(1){

exp0:
     resp_exp = 0;
     status("Reset to create expressions for G1 and G2 ratio");
exp1:


     while(1) {


step0:  ci$locate(     prompt       = "Identify curve 1 ",
	               obj          = &(TEMP[0].objid),
                       osnum        = &(TEMP[0].osnum),
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
   		       classes      = "GRcurve",
		       response     = &M_response,
		       md_env       = &MOD_ENV  );

	status("");
	if( (M_response == EX_RJT_MOVEON) && (resp_exp == 0) ){
		resp_exp = 1;
		ask_expressions();
		goto step0;
	}
	else if( (M_response == EX_DATA)   ){
		if(  resp_exp == 0 ) cre_default_expressions();
	   	ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0]);	
	}
	else if( M_response == EX_BACK_UP ){ 
		resp_exp = 1;
		ask_expressions();
		goto step0;
	}
	else exit;

step1:  if(!ci$locate( prompt       = "Identify blend point on curve 1 ",
	               obj          = &(TEMP[1].objid),
                       osnum        = &(TEMP[1].osnum),
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                       classes      = "GRpoint",
		       md_env       = &MOD_ENV         )) goto step0;
	ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]);	

step2: if(!ci$locate( prompt       = "Identify curve 2 ",
	              obj          = &(TEMP[2].objid),
                      osnum        = &(TEMP[2].osnum),
                      properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                      owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		      classes      = "GRcurve",
                      md_env       = &MOD_ENV          )) goto step1;

	ASmake_source_from_env( &TEMP[2],&MOD_ENV,&TEMP[2]);	


       if(!ci$locate( prompt       = "Identify blend point on curve 2 ",
	              obj          = &(TEMP[3].objid),
                      osnum        = &(TEMP[3].osnum),
                      properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                      owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                      classes      = "GRpoint",
		       md_env       = &MOD_ENV         )) goto step2;

	ASmake_source_from_env( &TEMP[3],&MOD_ENV,&TEMP[3]);

   	ci$get_module_info(md_env = &MOD_ENV);

      MAC1 = NULL_OBJID;

      ci$send(msg      = message nci_macro.init( &suc,
						0,
						"crv_blendc",
						8,
						TEMP,
						0,
						&MOD_ENV ),
	      targetid = MAC1,
	      targetos = MOD_ENV.md_id.osnum );

	   if( suc == 0 ){
		write("placement of nci_macro \"crv_blendc\" failed\n");
		status("placement of nci_macro \"crv_blendc\" failed");
      		ci$send(msg = message Root.delete(0),
			targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );
	   }
	}
 }
}


/*==========================================================================*/
init(){

 	strcpy(loc_mes,"<Assoc> Blend 2 Curves with G2 continuity");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;
}

wakeup(){
	message(loc_mes);
}

ask_expressions(){

ask0:
       strcpy(loc_prompt,"enter expression start G1 ratio");
       strcpy(exp_prompt,"enter G1 value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[4];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) exit;
ask1:
       strcpy(loc_prompt,"enter expression start G2 ratio");
       strcpy(exp_prompt,"enter G2 value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[5];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) exit;
ask2:
       strcpy(loc_prompt,"enter expression end G1 ratio");
       strcpy(exp_prompt,"enter G1 value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[6];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) goto ask1;

       strcpy(loc_prompt,"enter expression end G2 ratio");
       strcpy(exp_prompt,"enter G2 value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[7];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) goto ask2;

        resp_exp = 1;

}

cre_default_expressions(){

IGRint	i;

	for(i=4;i<8;i=i+1){
         	push (char *)&suc, (IGRdouble)1.0, (char *)&TEMP[i];
         	ci$run( file_id = &ci_mac_bib_FileId,
 	         	entry   = "CreDefUnExp" );
         		if( suc != MSSUCC ) exit;
	}

	 resp_exp = 1;
}
/*==========================================================================*/



