/* $Id: COsol_bx2pts.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/solid/cmd / COsol_bx2pts.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsol_bx2pts.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.1 - PPM macro library - 92/07/09 (alc)
	 Revision date : 93/02/16
 */
   
#include "ciminimum.h"
#include "cimacros.h"

struct GRid 		TEMP[3];
GRobj 			MAC1;
int 			suc;
char			loc_mes[80];
struct 	GRmd_env	MOD_ENV;


extern ASmake_source_from_env();


main()
{

    strcpy(loc_mes,"<Assoc> Place Box by Coordinate System and 2 Points");
    message(loc_mes);  

    while(1){

step0:
    	if ( !ci$locate ( prompt       = "Identify coordinate system",
                    	  properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                    	  owner_action = LC_RIGID_COMP
                                      	| LC_RIGID_OWNER | LC_FLEX_COMP
                                      	| LC_FLEX_OWNER  | LC_REF_OBJECTS,
		    	  obj          = &(TEMP[0].objid),
		    	  osnum        = &(TEMP[0].osnum),
                    	  classes      = "GRlbsys",
			  md_env       = &MOD_ENV) ) exit;

	ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0]);	

 	while(1)
 	{
step1:
		status("");

  		if(!ci$locate( prompt       = "Identify lower left point",
			       classes      = "GRpoint",
                	       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                	       owner_action = LC_RIGID_COMP
                	                      | LC_RIGID_OWNER | LC_FLEX_COMP
                	                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	        	       obj          = &(TEMP[1].objid),
                	       osnum        = &(TEMP[1].osnum),
			       md_env	    = &MOD_ENV)) goto step0;

		ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]);	

        	if(!ci$locate( prompt       = "Identify upper right point",
			       classes      = "GRpoint",
                               properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                               owner_action = LC_RIGID_COMP
                        	              | LC_RIGID_OWNER | LC_FLEX_COMP
                        	              | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	                       obj          = &(TEMP[2].objid),
                               osnum        = &(TEMP[2].osnum),
			       md_env	    = &MOD_ENV)) goto step1;

		ASmake_source_from_env( &TEMP[2],&MOD_ENV,&TEMP[2]);	


   		ci$get_module_info(md_env = &MOD_ENV);

       		MAC1 = NULL_OBJID;

       		ci$send(msg = message nci_macro.init( 	&suc,
					 	      	0, 
					   		"sol_bx2pts",
					     		3,
					     		TEMP,
					     		NULL,
					     		&MOD_ENV ),
	       		targetid = MAC1,
	       		targetos = MOD_ENV.md_id.osnum	);
		if( suc == 0 ){
			write("placement of nci_macro failed\n");
      			ci$send(msg = message Root.delete(0),
	      			targetid = MAC1,
	      			targetos = MOD_ENV.md_id.osnum );
		}
	}
   }
}


wakeup(){

        message(loc_mes);
}
