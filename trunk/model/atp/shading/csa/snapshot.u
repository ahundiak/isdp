//~Name      : 
//~Originator: yvonne
//~Originated: (RAP) Wed Jun 17 09:29:59 1992
//~Product   : I/EMS 02.01.00.00 08-Jun-92 
//~Nodename  : h11434
//~Command   : 
//~Comments  : 

#include "ciminimum.h"
#include "cimacros.h"
#include "fi.h"
#include <stdio.h>
#include "igrdef.h"
#include "dpdef.h"
#include "dpezmac.h"
#include "OMminimum.h"
#include "OMprimitives.h"
#include "OMerrordef.h"
#include "exmacros.h"
#include "igrdp.h"
#include "go.h"
#include "growner.h"
#include "grgsmacros.h"
#include "hsmacros.h"

extern EXputq2();
extern GRgsmgr_fun();
extern GRgs_fun();
extern HSget_element_shading_symb();
extern  HSget_dpb_super();
extern  EX_get_super();
extern  EX_findmod();

main()
{
    IGRlong msg, size, sts;
    int response, i;
    IGRchar command_key[30];
    struct GRid gs_id, my_id;
    IGRint obj_count, num_ret;
    struct GRobj_env obj_info;
    IGRint finish;
    IGRdouble spec_refl, diff_refl, transparency;
    struct GRsymbology symb;
    OMuword dpb_os, mod_os;
    OM_S_OBJID dpb_id, mod_id;

    fprintf(stderr, "==================================================\n");

    ex$get_cur_mod( osnum = &mod_os, id = &mod_id );

    sts = ex$get_super(mod_id = mod_id,
                          mod_osnum = mod_os,
                          super_name = "IGECOLOR",
                          create = TRUE,
                          super_class = "IGEcolor",
                          super_id = &dpb_id,
                          super_osnum = &dpb_os);

    sts = ci$send( msg = message IGEcolor.debug(), 
			targetid = dpb_id, 
			targetos = dpb_os );

    fprintf(stderr, "\n");

    HSget_dpb_super( &dpb_id, &dpb_os );

    sts = ci$send( msg = message HSdpb2.debug(), 
			targetid = dpb_id, 
			targetos = dpb_os );

    strcpy(command_key, "GRSlEInV");

    size = strlen(command_key) +1;

    response = EX_CMD_KEY;

    ex$putque(	msg = &msg,
              	response = &response,
              	byte = &size,
              	buffer = (IGRchar *)command_key );
  
    ci$put(string = "iso");

    sts = gr$gsget_select_set( 
		msg = &msg, 
		select_set_id = &gs_id );

    sts = gr$gsinqcount(
		msg = &msg, 
		count = &obj_count, 
 		senderid = NULL,
		object_id = &gs_id );

    fprintf(stderr, "\nPHONG SHADING PARAMETERS\n\n");
    
    for (i=0; i<obj_count; i=i+1)
    {
        gr$gsget_objects( 
		msg = &msg, 
		array = &obj_info,
		size = sizeof(struct GRobj_env),
		count = &num_ret,
		from_obj = i,
		to_obj = i,
	        senderid = NULL,
		object_id = &gs_id );

        sts = hs$get_element_shading_symb( 	
					objid = obj_info.obj_id.objid,
                                       	osnum = obj_info.obj_id.osnum,
					finish = &finish,
					spec_refl = &spec_refl,
					diff_refl = &diff_refl,
					transparency = &transparency );

        sts = ci$send( targetid = obj_info.obj_id.objid,
                   targetos = obj_info.obj_id.osnum,
                   msg = message GRvg.GRgetsymb(&msg, &symb) );


	fprintf(stderr, "%d\n", i);
        fprintf(stderr, "	FINISH 		%d\n", finish);
	fprintf(stderr, "	SPEC_REFL 	%lf\n", spec_refl);
	fprintf(stderr, " 	DIFF_REFL 	%lf\n", diff_refl);
        fprintf(stderr, "	SYMBOLOGY\n");
	fprintf(stderr, "	   COLOR	%d\n",symb.display_attr.color);
	fprintf(stderr, "	   WEIGHT	%d\n",symb.display_attr.weight);
	fprintf(stderr, "	   STYLE	%d\n",symb.display_attr.style);
	fprintf(stderr, "	   LEVEL 	%d\n",symb.level);
    }

    fprintf(stderr, "==================================================\n");
}
