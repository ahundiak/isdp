#   SYNOPSIS
#
#   bsversion [makefiledir [bslib]]
#
#   DESCRIPTION
#
#   This script gets the current BS math libraries version from
#   /usr/ip32/ems_ml/fixes.com, if it exists.  Otherwise it gets
#   it from the makefile in directory makefiledir.  If the former
#   is the case, the makefile (in makefiledir) variable "bsmath"
#   is modified to reflect the version.  In either case, the
#   version is echoed to standard out. 
#
#   HISTORY
# 
#   30 Dec 1988 jBk Changed use of ed to be explicitly /bin/ed
#                   because some developers alias "ed" to be
#                   things other than the standard ed.
#   07 Oct 1988 jBk Changed reference to bsdg_s.a to be bsut_s.a.
#   13 May 1988 jBk Modified so makefiledir and bslib are not
#                   necessary.
#   28 Mar 1988 jBk Instead of getting version from
#                   /usr/ip32/ems_ml/fixes.com, get it from
#                   version file in library.  Added arguments to
#                   indicate library.
#   23 Mar 1988 jBk Changed references to makeapp to be makefile.
#   22 Feb 1988 jBk Added makeappdir parameter.
#   15 Feb 1988 jBk Genesis.

APP="$1"
lib="$2"

if [ "${APP}" = "" ]
then
    APP=/dev/null
fi

if [ "${lib}" = "" ]
then
    lib=${BS}/lib/bsut_s.a
fi

vfile=`basename ${lib} .a`.v

retval=0

makefile=${APP}/makefile

if ar -x $lib $vfile
then
    true
else
    retval=2
fi

if [ $retval -eq 0 ]
then
    if [ -f $vfile ]
    then
        line=`dump -o $vfile`
        rm -f $vfile
    else
        retval=3
    fi
fi

set $line blap
hex="$7"

if [ $retval -eq 0 ]
then
    if varr[3]=`expr "$hex" : '\([a-f0-9]\)[a-f0-9][a-f0-9][a-f0-9]'`
    then
        true
    else
        if [ ${varr[3]} -ne 0 ]
        then
            retval=4
        fi
    fi
fi

if [ $retval -eq 0 ]
then
    if varr[2]=`expr "$hex" : '[a-f0-9]\([a-f0-9]\)[a-f0-9][a-f0-9]'`
    then
        true
    else
        if [ ${varr[2]} -ne 0 ]
        then
            retval=5
        fi
    fi
fi

if [ $retval -eq 0 ]
then
    if varr[1]=`expr "$hex" : '[a-f0-9][a-f0-9]\([a-f0-9]\)[a-f0-9]'`
    then
        true
    else
        if [ ${varr[1]} -ne 0 ]
        then
            retval=6
        fi
    fi
fi  

if [ $retval -eq 0 ]
then
    if varr[0]=`expr "$hex" : '[a-f0-9][a-f0-9][a-f0-9]\([a-f0-9]\)'`
    then
        true
    else
        if [ ${varr[0]} -ne 0 ]
        then
            retval=7
        fi
    fi
fi

if [ $retval -eq 0 ]
then
    let version=0
    let mult=1
    let ii=0

    while [ $ii -lt 4 ]
    do
        case ${varr[ii]} in
        [0-9])
            ;;
        a)
            varr[ii]=10;;
        b)
            varr[ii]=11;;
        c)
            varr[ii]=12;;
        d)
            varr[ii]=13;;
        e)
            varr[ii]=14;;
        f)
            varr[ii]=15;;
        *)
            retval=8;;
        esac

        let varr[ii]=varr[ii]'*'mult
        let version=version+varr[ii]

        let ii=ii+1
        let mult=mult'*'16
    done
fi

if [ -f ${makefile} ]
then
    if [ $retval -eq 0 ]
    then
        /bin/ed ${makefile} > /dev/null 2>&1 << EO
1,\$s/^bsmath =.*\$/bsmath = $version/
w
q
EO
    
       retval=$?
    else
        string=`egrep "^bsmath" ${makefile}`
        version=`expr "$string" : 'bsmath = \([0-9]*\)'`
    fi
fi

echo bsmath = $version
exit $retval
