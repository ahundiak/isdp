/* $Id: VSpppPlPlate.u,v 1.1.1.1 2001/01/04 21:10:02 cvs Exp $ */

/*******************************************************************************
 * I/STRUCT
 *
 * File:  struct/pplcmd/VSpppPlPlate.u  (struct/ppl/bin/VSpppPlPlate.e)
 *
 * Description:
 *
 *	This ppl has to be assigned to each structural detail macro created
 *	so that non-parametric plates can be placed after the macro is placed.
 *	To assign it :
 *		 edit the macro definition ( Modify Macro Definition )
 *		 add under "Placement Options" : "~~post_placement"
 *		 add under "Value": "VSpppPlPlate"
 *
 *	The "post_placement" function will be activated by the command Place
 *	Macro for a new macro and ci=VSpppPlPlate for an existing macro.
 *
 * Revision History:
 *	$Log: VSpppPlPlate.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:10:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.2  1999/02/25  22:12:06  pinnacle
# TR_179900374: Process a set of macros, too
#
# Revision 1.1  1998/04/30  10:08:06  pinnacle
# STRUCT 2.5.1
#
# Revision 1.3  1998/04/26  14:05:34  pinnacle
# ah
#
# Revision 1.2  1998/02/12  20:46:46  pinnacle
# TR_179800356: Added locate filter, classes
#
 *
 * History:
 *	MM/DD/YY    AUTHOR	DESCRIPTION
 *	8/20/97	    ejm		CR179701702: Created for post placement of 
 *				plates on a structural detail macro.
 *      02/11/98    ejm		TR179800356: added locate filter, classes = 
 *				"ACncpx", although, fix for this TR is in
 *				VSpppPlPlate.I. 
 *      04/26/98    ah          Set status code before testing it
 *      02/24/99    ejm		TR_179900374: Process a set of macros, too.
 *				Print count of new plates.
 **************************************************************************** */

#include "ciminimum.h"
#include "cisymb.h"
#include "cieveryone.h"
#include "cimacros.h"
#include "cigetargs.h"
#include "coparamac.h"  // as$start_fence 
#include "growner.h"    // struct GRobj_env


struct GRid 		MACRO_ID;
struct GRmd_env		MOD_ENV;
IGRint			cntPlates;

extern int VSisLoggedIntoRDB() ;
extern int printf();
extern ASstart_var_fence();
extern ASend_fence();







/* BEGIN */

/* routine, main, only used with ci=VSpppPlPlate on command line */

main( argc, argv)
int	argc;
char	**argv;
{
  IGRint  sts;
  IGRint  response;
  IGRint  i;

  IGRint  totPlates;
  IGRint  locNum;
  struct GRobj_env  *locOEs;

  totPlates = 0;

  message("Place Plates on macros");
  /* check to see if the user is logged into the DBS */ 
  if(!VSisLoggedIntoRDB())
  {	
	status("You need to log in to PDM");
	printf("You need to log in to PDM\n");
	sts = -1;
	goto wrapup;
  }

  while(1)
  {
     MACRO_ID.objid = NULL_OBJID;

     response = 0;

     message("Place Plates on Macros");

     sts = ci$locate( 	prompt  = "Locate macro(s) to place plates on",
			classes = "ACncpx",
			properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
			owner_action = LC_RIGID_COMP
                                     | LC_RIGID_OWNER | LC_FLEX_COMP
                                     | LC_FLEX_OWNER  | LC_REF_OBJECTS,
			response     = &response,
			obj          = &MACRO_ID.objid,
			osnum        = &MACRO_ID.osnum,
			md_env       = &MOD_ENV );

    if (!(sts & 1)) response = 0;

    switch(response) {

    case EX_OBJID:   // Object Set

      /* Grab Located Objects */
      as$start_fence(
      set       = &MACRO_ID,
      set_env   = &MOD_ENV,
      nb_obj    = &locNum,
      p_obj_env = &locOEs);

      for(i = 0; i < locNum; i = i + 1) {
	MACRO_ID = locOEs[i].obj_id;
	MOD_ENV  = locOEs[i].mod_env;
        sts = post_placement();
        if( sts&1 ) totPlates = totPlates + cntPlates;
      }

      ASend_fence();
      break;

    case EX_DATA:    // Single Object
      sts = post_placement();
      if( sts&1 ) totPlates = totPlates + cntPlates;
      break;

    } // Switch

  printf("\tTotal number of plates placed = %d\n", totPlates);

  } // While


wrapup:
       	if((sts != OM_S_SUCCESS))
	{
	  status(" post placement of plate did not complete");
	}
}//end of main


/* entry point as assigned by ~~post_placement option in macro definition */
extern int VSppp_post_place_plate() ;

post_placement()
{
	IGRint sts;

	sts = VSppp_post_place_plate( MACRO_ID, MOD_ENV, &cntPlates );

	return sts;
	
}//end of post_placement
