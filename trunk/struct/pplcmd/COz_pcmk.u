/* $Id: COz_pcmk.u,v 1.5 2001/03/11 19:37:00 ramarao Exp $  */
/* --------------------------------------------------------------------
 * I/STRUCT
 *
 * File:                pplcmd/COz_pcmk.u
 *
 * Description: PPL to fit an object in all windows and give the object
 *	 	information in the unix window, given a piece mark number.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_pcmk.u,v $
 *      Revision 1.5  2001/03/11 19:37:00  ramarao
 *      Modified fit scale for Profile Cards from 1.0 to 1.25.
 *
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      07/05/00        Rama Rao        File Creation.
 * -------------------------------------------------------------------*/

#include "VDppl.h"
#include "VDobj.h"
#include "VDsa.h"
#include "grmsg.h"

#define MAX_WINDOW      40

extern 	VD_findall_objects_in_range(), VDvw_fit_many_objects(), DPgetggid(),
	VSbulkDisplayByGRobj_envs(), VSbulkDisplayByGRids(),
	VSgetChildrenGoThruPretends();

extern GRclassid	OPP_VSplate_class_id, OPP_VSbeam_class_id ;

main()
{
IGRlong			sts, msg;
IGRint			i, j, count, pcmk_no, mask, response, num_ggid, 
			pcmk_count, num_unwraps, num_pcards, num_mac ;
IGRdouble		range[6];
IGRchar			pcmk[40], exp_txt[100], win_name[40];
struct GRevent      	event;
GRclassid		classids[2];
struct GRid    		ggid[MAX_WINDOW], unwraps[50], pcards[50], *child_mac;
struct GRobj_env	*list ;
struct GRmd_env		loc_env;
struct ret_struct	rs;

  count     = 0;
  list      = NULL;
  child_mac = NULL;

  dp$erase_hilite( msg = &msg );

  message( "Piece Mark Fit" );
  ci$get( string = exp_txt,
          prompt = "Enter Piece Mark Number" ); 
  pcmk_no = atoi( exp_txt );
  if( pcmk_no == 0 ) return 1;

  ci$getevent( prompt   = 
		 "Identify Window/Key-in Window Name/Move on for All Windows",
               response = &response,
               mask     = mask,
               event    = &event,
               stackable= 1 );

  if( response == EX_DATA )
  {
     num_ggid = 1;
     ggid[0].osnum = event.event.button.osnum;
     ggid[0].objid = event.event.button.objid;
  }
  else if( response == EX_STRING )
  {
     if ( !strlen( event.event.keyin ) ) return 1;
     num_ggid = 0;
     dp$get_gragad_id(  msg         = &msg,
                        name        = event.event.keyin,
                        array_size  = MAX_WINDOW,
                        numberofids = &num_ggid,
                        found_GRids = ggid,
                        type_gragad = ALL_GG_CLASSES | GG_WIN_ON );
     if ( num_ggid == 0) {
         ex$message ( msgnumb = GR_E_WinNotFnd);
	 return 1;
     }
     else if( num_ggid > 1 && MAX_WINDOW == 1 )
     {
	 ex$message ( msgnumb = GR_E_AmbNme );
	 return 1;
     }
  }
  else if( response == EX_RJT_MOVEON )
  {
     num_ggid = 0;
     dp$get_gragad_id(  msg         = &msg,
                        name        = "*",
                        array_size  = MAX_WINDOW,
                        numberofids = &num_ggid,
                        found_GRids = ggid,
                        type_gragad = ALL_GG_CLASSES | GG_WIN_ON );
     if ( num_ggid == 0) {
         ex$message ( msgnumb = GR_E_WinNotFnd);
         return 1;
     }
     else if( num_ggid > 1 && MAX_WINDOW == 1 )
     {
         ex$message ( msgnumb = GR_E_AmbNme );
         return 1;
     }
  }
  if( !num_ggid )   return 1;

  ci$get_module_info( md_env = &loc_env);
  classids[0] = OPP_VSplate_class_id ;
  classids[1] = OPP_VSbeam_class_id ;

  range[0] = range[1] = range[2] = -1.0e+6; 
  range[3] = range[4] = range[5] =  1.0e+6;

  VD_findall_objects_in_range( range, 2, classids, TRUE, loc_env,
			       &count, &list );

  pcmk_count  = 0;
  num_unwraps = 0;
  num_pcards  = 0;

  for( i=0; i<count; i=i+1 )
  {
      num_mac = 0;
      if( child_mac ) { free ( child_mac ); child_mac = NULL; }
      vdsa$GetStruct(objOE = &list[i],
                     name = "SA_AST:StagingTree:0:pcmk",
                     txt   = pcmk );
      if( pcmk_no == atoi( pcmk ) )
      {
	list[pcmk_count] = list[i] ;
	pcmk_count = pcmk_count + 1 ;
        VSgetChildrenGoThruPretends( &msg, &list[i].obj_id,
                                     &num_mac, &child_mac );
        if( !num_mac ) continue;
        for( j=0; j<num_mac; j=j+1 )
        {
	   if( VDobjIsAncestryValid( NULL, &child_mac[j], 
				 OM_K_NOTUSING_CLASSID, "VLunwObj") )
	   {
	      if( num_unwraps == 50 ) continue;
	      unwraps[num_unwraps] = child_mac[j];
	      num_unwraps = num_unwraps + 1 ;
	   }
	   else if( VDobjIsAncestryValid( NULL, &child_mac[j],
                                 OM_K_NOTUSING_CLASSID, "VLpcText") )
           {
              if( num_pcards == 50 ) continue;
              pcards[num_pcards] = child_mac[j];
              num_pcards = num_pcards + 1 ;
           }
        }
      }
  }

  if( !pcmk_count )
  {
     printf("There are NO objects with piece mark# %d\n", pcmk_no );
     return 1;
  }

  printf("Number of Objects with Piece Mark# %d = %d\n", pcmk_no, pcmk_count );
  VDvw_fit_many_objects( pcmk_count, NULL, list, 1.0, NULL, 
			 ggid, num_ggid );
  VSbulkDisplayByGRobj_envs( GRhd, pcmk_count, list );

  if( num_unwraps )
  {
     num_ggid = 0;
     dp$get_gragad_id(  msg         = &msg,
                        name        = "unwrap",
                        array_size  = MAX_WINDOW,
                        numberofids = &num_ggid,
                        found_GRids = ggid,
                        type_gragad = ALL_GG_CLASSES | GG_WIN_ON );

     if( num_ggid == 0 )
     {
        dp$get_gragad_id(  msg         = &msg,
                           name        = "UNWRAP",
                           array_size  = MAX_WINDOW,
                           numberofids = &num_ggid,
                           found_GRids = ggid,
                           type_gragad = ALL_GG_CLASSES | GG_WIN_ON );
     }
     if ( num_ggid > 0) 
     {
         VDvw_fit_many_objects( num_unwraps, unwraps, NULL, 1.0, NULL,
			        ggid, num_ggid );
         VSbulkDisplayByGRids( &loc_env, GRhd, num_unwraps, unwraps );
     }
  }

  if( num_pcards )
  {
     num_ggid = 0;
     for( i=0; i<4; i=i+1 )
     {
	 if( i==0 ) strcpy( win_name, "sketches" );
	 if( i==1 ) strcpy( win_name, "SKETCHES" );
         if( i==2 ) strcpy( win_name, "sketch" );
         if( i==3 ) strcpy( win_name, "SKETCH" );
	 num_ggid = 0;
         dp$get_gragad_id(  msg         = &msg,
                            name        = win_name,
                            array_size  = MAX_WINDOW,
                            numberofids = &num_ggid,
                            found_GRids = ggid,
                            type_gragad = ALL_GG_CLASSES | GG_WIN_ON );
	 if( num_ggid > 0 ) break;
     }
     if ( num_ggid > 0)
     {
         VDvw_fit_many_objects( num_pcards, pcards, NULL, 1.25, NULL,
                                ggid, num_ggid );
     }
  }

  for( i=0; i<pcmk_count; i=i+1 )	vdobj$Print( objOE = &list[i] );
  printf("\n" );

wrapup:
  if( list      ) { free ( list      ); list      = NULL; }
  if( child_mac ) { free ( child_mac ); child_mac = NULL; }
  return 1;
}
