/***************************************************************************
 * I/STRUCT
 *
 * File:        api/APIjnttype.u
 *
 * Description:
 *
 *  This ppl informs about the joint type between plates using the
 *		API vs$giveJointType().
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      india           creation date
 *
 ***************************************************************************/

#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "cichannel.h"
#include "vsplacmacros.h"
#include "vsmodmacros.h"
#include "vsmiscpplmac.h"
#include "grmacros.h" 
#include "string.h"
#include "vsjntmacros.h"

extern long  	VSgiveJointType();

main() 
{
    int                 jnType;
    long                sts, msg;
    struct GRid         pl0,pl1, jn;
    struct GRobj_env    plate0, plate1,joint;
    struct GRmd_env     env, pl0Env,pl1Env;

    if( !ci$locate(
        prompt       = "Identify Plate #1",
        classes      = "VSplate",
        properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
        owner_action = LC_RIGID_COMP | LC_RIGID_OWNER | LC_FLEX_COMP |
                       LC_FLEX_OWNER,
        obj          = &pl0.objid,
        osnum        = &pl0.osnum,
        md_env       = &pl0Env ) ) exit ;


    if(!ci$locate(
        prompt       = "Identify Plate #2",
        classes      = "VSplate",
        properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
        owner_action = LC_RIGID_COMP | LC_RIGID_OWNER | LC_FLEX_COMP |
                       LC_FLEX_OWNER | LC_REF_OBJECTS ,
        obj          = &pl1.objid,
        osnum        = &pl1.osnum,
        md_env       = &pl1Env)) exit;


    if(!ci$locate(
        prompt       = "Identify Joint Between Plates",
        classes      = "VSjoint",
        properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
        owner_action = LC_RIGID_COMP | LC_RIGID_OWNER | LC_FLEX_COMP |
                       LC_FLEX_OWNER | LC_REF_OBJECTS ,
        obj          = &jn.objid,
        osnum        = &jn.osnum,
        md_env       = &env)) exit;

	plate0._grid = pl0;
	plate1._grid = pl1;

	plate0.mod_env = pl0Env;
	plate1.mod_env = pl1Env;

	joint._grid = jn;
	joint.mod_env = env;	
	jnType = 100;

	sts = vs$giveJointType ( msg	= &msg, 
				 joint	= &joint, 
				 plate0	= plate0,
				 plate1 = plate1,
				 jointType = &jnType );
}


