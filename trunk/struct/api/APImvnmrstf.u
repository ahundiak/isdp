/***************************************************************************
 * I/STRUCT
 *
 * File:	api/APImvnmrstf.u
 *
 * Description:
 * 
 * This ppl move and mirror a stiffener using the API
 *		vs$move_and_mirror_stiffener().
 *
 * Dependencies:
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *			i-paris		creation date
 *
 ***************************************************************************/

#include "OMminimum.h"
#include "cieveryone.h"
#include "cievent.h"
#include "cilocate.h"
#include "cisend.h"
#include "vsAPImacros.h"

extern void printf() ;

/*----------------------------------------------------------------------------*/
wakeup() { message( "API: Move And Mirror Stiffener" ) ; }
/*----------------------------------------------------------------------------*/
main() {
	long		 sts,
			 msg ;
	struct GRid	 stiffenerId ;
	struct GRmd_env  stiffenerEnv ;

	while( TRUE ) {
	if( !ci$locate(
		prompt		= "Identify stiffener to move and mirror",
		classes 	= "VSstfBeam",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &stiffenerId.objid,
		osnum		= &stiffenerId.osnum,
		md_env		= &stiffenerEnv ) ) exit ;

	sts = vs$move_and_mirror_stiffener( msg	        = &msg,
				            stiffenerId = &stiffenerId ) ;

	if( !( sts & 1 & msg ) )
		printf( "Error in move and mirror of stiffener\n" ) ;
	}
}
/*----------------------------------------------------------------------------*/
