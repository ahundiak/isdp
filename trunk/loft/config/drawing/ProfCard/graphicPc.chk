#******************************************************************************
#	STRUDEL FILE FOR AVONDALE PROFILE CARDS
#
#	Maciej Jablkowski - INTERGRAPH Corp., March 9th, 2000
#
# Strudel file contains rules for extracting 3D model stiffeners 
# to the 2D profile card not-to-scale manufacturing sketches
#
# This file contains code for chocks
#
#	This file uses external PPL program "PcGen.e" which helps to 
#	determine a name of a 2D symbol macro to place on the profile
#	card from striffener type being processed and aplied macros.
#
# History:	MJ	03-09-2000 - Creation
#		MJ	08-02-2001 - Major review and update
#		MJ	09-18-2001 - PPL calls reduced by using attributes
#
#******************************************************************************

# Turn report mode on/off
silent;
#verbose;

#*********************************************************
#
#	CHOCKS
#
#*********************************************************

const(	definition	= "av_ch*", 
	view-criterion 	= "plt1" ) : {

	any-view : {

		#************************************************
		# Get view coordinate system & current view name
		#************************************************
		$csO 	:= vl-pc-ViewCs();
		$VwName := vl-pc-GetViewName();
		
		#**********************************
		# Process only for web (side) view
		#**********************************
		select when $VwName = "side" :

			#****************************
			# Get stock values
			#****************************
			$prof_len 	:= vl-GetAttributeVal( "ProfileLength" );
			$start_stock    := vl-GetAttributeVal( "StartStock" );

			#*********************************
			# Get macro coord sys & its angle
			#*********************************
			$csA 		:= vl-pc-ViewMcCs();
			$angle 		:= vl-pc-McAngle();
           		
			#***************************************************************
			# Find out if the current chock is really placed on current stf
			#***************************************************************
           		$stf 		:= vl-pc-GetStiff();
	   		$place_chk 	:= exec-ppl-func($ppl, $func_chk, $stf );

			select when $place_chk = $TRUE :

				#********************************************
				# Get profile attributes and chock position
				#********************************************
				$FirstEtPos	:= vl-GetAttributeVal( "FirstETPos" );
				$macPos 	:= vl-pc-McPosition();
			
				#***********************
				# Compute lean distance
				#***********************
				$chk_type 	:= 1; 	# it is a regular chock
				$distance 	:= exec-ppl-func($ppl, "mark_angle", 
								$angle, $chk_type );

				#***************************************
				# Put a X dimension on the profile card
				#***************************************
				$macPos 	:= vl-pc-McPosition();
				$macPosX	:= vl-pc-CvrtDouble( get-word( $macPos, 0 ));
	               		$xbase          := vl-pc-GetXBase( 0 );
				$positionX 	:= $macPosX-$FirstEtPos+$xbase+$start_stock;
				$positionDeltaX	:= $positionX + $distance;
				
				$numcharX 	:= string-length($positionX); 	
				$position	:= format-number(
							catenate-strings($numcharX,
								".0"), $positionX );
				$numcharX 	:= string-length($positionDeltaX); 	
				$positionDelta	:= format-number(
							catenate-strings($numcharX,
								".0"), $positionDeltaX );
										
				#******************************
				# Set stacked dimension offset 
				#******************************
				$gap 		:= vl-GetAttributeVal( "gap" );
				select 	when $gap = -15 : 
						$gap := vl-SetAttributeVal( "gap", -5 );
					when $gap = -10 :
						$gap := vl-SetAttributeVal( "gap", -15 );
					when $gap = -5 :
						$gap := vl-SetAttributeVal( "gap", -10 );
				end;
				
				#************************
				# Place 2d marking macro
				#************************
				vl-PlaceMacro("PCmark2d", $csO, $csA, $hprof, $angle, 
						$position, -$gap, $positionDelta, 5)
					[color = 13];
			end;
		end;
	}
}

silent;


