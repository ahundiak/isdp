#
#	Loftbook generation Apfel-Strudel setup file
#

#verbose ;

include	"LBdefine" ;


# ------------------------------------------------------------------------------
# Chapter A :		Displacement Stations / Frames Table
# ------------------------------------------------------------------------------

vl-lb-StationFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Displacement Stations / Frames Table",20,-1);
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",                       0, -1 );
		$rc := vl-Print ( "Frame Distance from",        10, -1 );
		$rc := vl-Print ( "Displacement",               35, -1 );
		$rc := vl-Print ( "Distance of Disp. Stations", 50, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Ship Origin (%s)", $UNIT_1ST ),
		       						10, -1 );
		$rc := vl-Print ( "Stations",                   37, -1 );
		$rc := vl-Print (
		       vl-Sprintf ( "from nearest frame (%s)", $UNIT_1ST ),
		       						50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StationFrameStart

	
vl-lb-StationFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ();
		$rc := vl-Print ( vl-lb-PlaneName (),              0, 0 );
		$rc := vl-Print ( "",                              5, 1 );
		$rc := vl-Print ( vl-lb-RelativePlaneValue ("x"), 15, 0 );
		$rc := vl-Print ( "",                             21, 1 );
		$rc := vl-Print ( vl-lb-NearStationName (),       40, 0 );
		$rc := vl-Print ( "",                             45, 1 );
		$rc := vl-Print ( vl-lb-NearStationDistance (),   55, 0 );
		$rc := vl-Print ( "",                             61, 1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StationFrameReport

	
vl-lb-StationFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StationFrameEnd


# ------------------------------------------------------------------------------
# Chapter B :		Frame Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-WaterlineFrameStart : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Frame Crossings with Waterlines", 20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print (
		       vl-Sprintf ( "Waterlines [Z value (%s)]", $UNIT_2ND ),
		       						      30, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-AbsoluteCurveList ("z",10,2), 10, 1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Frame" );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineFrameStart

	
vl-lb-WaterlineFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ();
		$rc := vl-Print ( vl-lb-PlaneName (),                  0, 0 );
		$rc := vl-Print ( "",                                  5, 1 );
		$rc := vl-Print ( vl-lb-AbsoluteInterList ("y",10,0), 10, 1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineFrameReport

	
vl-lb-WaterlineFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineFrameEnd


# ------------------------------------------------------------------------------
# Chapter C :		Station Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-WaterlineStationStart : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Station Crossings with Waterlines", 20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print (
		       vl-Sprintf ( "Waterlines [Z value (%s)]", $UNIT_2ND ),
		       						       30, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-AbsoluteCurveList ("z",10,2),  10,  1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Station" );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineStationStart

	
vl-lb-WaterlineStationReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ();
		$rc := vl-Print ( vl-lb-PlaneName (),                  0, 0 );
		$rc := vl-Print ( "",                                  5, 1 );
		$rc := vl-Print ( vl-lb-AbsoluteInterList ("y",10,0), 10, 1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineStationReport

	
vl-lb-WaterlineStationEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineStationEnd


# ------------------------------------------------------------------------------
# Chapter D :		Buttock Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-WaterlineButtockStart : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Buttock Crossings with Waterlines", 20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print (
		       vl-Sprintf ( "Waterlines [Z value (%s)]", $UNIT_2ND ),
		       						       30, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-AbsoluteCurveList ("z",10,2),  10,  1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "Buttock (%s)", $UNIT_2ND ) );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineButtockStart

	
vl-lb-WaterlineButtockReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("y"),      0, 2 );
		$rc := vl-Print ( "",                                  9, 1 );
		$rc := vl-lb-SetUnitDivisor ();
		$rc := vl-Print ( vl-lb-AbsoluteInterList ("x",10,0), 10, 1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterList (1),           10, 1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineButtockReport

	
vl-lb-WaterlineButtockEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-WaterlineButtockEnd


# ------------------------------------------------------------------------------
# Chapter E :		Stem Profile Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-StemFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Stem Profile Crossings with Frames",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",       0, -1 );
		$rc := vl-Print ( "X position", 23, -1 );
		$rc := vl-Print ( "Height",     43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",            23, -1 );
		$rc := vl-Print ( "above baseline (Z)", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( "-",                             0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeStartValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeStartValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StemFrameStart

	
vl-lb-StemFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativePlaneValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (1),      30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (2),      30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StemFrameReport

	
vl-lb-StemFrameEnd : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( "-",                           0,  1 );
		$rc := vl-Print ( "",                            4, -1 );
		$rc := vl-Print ( vl-lb-RelativeEndValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeEndValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                           50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-StemFrameEnd


# ------------------------------------------------------------------------------
# Chapter F :		Stern Profile Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-SternFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Stern Profile Crossings with Frames",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",       0, -1 );
		$rc := vl-Print ( "X position", 23, -1 );
		$rc := vl-Print ( "Height",     43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",            23, -1 );
		$rc := vl-Print ( "above baseline (Z)", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( "-",                             0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeStartValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeStartValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-SternFrameStart

	
vl-lb-SternFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativePlaneValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (1),      30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (2),      30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-SternFrameReport

	
vl-lb-SternFrameEnd : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( "-",                           0,  1 );
		$rc := vl-Print ( "",                            4, -1 );
		$rc := vl-Print ( vl-lb-RelativeEndValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeEndValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                           50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-SternFrameEnd


# ------------------------------------------------------------------------------
# Chapter G :		Flat-of-Side Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-FosWaterlineStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Flat-of-Side Crossings with Waterlines",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Waterline",  0, -1 );
		$rc := vl-Print ( "X value",   23, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",   23, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-FosWaterlineStart

	
vl-lb-FosWaterlineReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("z"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( "",                             30, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (1),      15,  3 );
		$rc := vl-Print ( "",                             30, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FosWaterlineReport

	
vl-lb-FosWaterlineEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FosWaterlineEnd


# ------------------------------------------------------------------------------
# Chapter H :		Flat-of-Side Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-FosFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Flat-of-Side Crossings with Frames",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",   0, -1 );
		$rc := vl-Print ( "X value",23, -1 );
		$rc := vl-Print ( "Z value",43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",       23, -1 );
		$rc := vl-Print ( "from baseline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-FosFrameStart

	
vl-lb-FosFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FosFrameEnd


# ------------------------------------------------------------------------------
# Chapter I :		Flat-of-Bottom Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-FobFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Flat-of-Bottom Crossings with Frames",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",   0, -1 );
		$rc := vl-Print ( "X value",23, -1 );
		$rc := vl-Print ( "Y value",43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-FobFrameStart

	
vl-lb-FobFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FobFrameReport

	
vl-lb-FobFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FobFrameEnd


# ------------------------------------------------------------------------------
# Chapter J :		Flat-of-Bottom Crossings with Buttocks
# ------------------------------------------------------------------------------

vl-lb-FobButtockStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print ( "Flat-of-Bottom Crossings with Buttocks",
				  20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Buttock",  0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP", 23, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-FobButtockStart

	
vl-lb-FobButtockReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("y"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( "",                             30, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-lb-OtherInterValue (1),      15,  3 );
		$rc := vl-Print ( "",                             30, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FobButtockReport

	
vl-lb-FobButtockEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-FobButtockEnd


# ------------------------------------------------------------------------------
# Chapter K :		Knuckle Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-KnuckleFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Knuckle <%s> Crossings with Frames",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",    0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Y value", 43, -1 );
		$rc := vl-Print ( "Z value", 63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-KnuckleFrameStart

	
vl-lb-KnuckleFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleFrameReport

	
vl-lb-KnuckleFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleFrameEnd


# ------------------------------------------------------------------------------
# Chapter L :		Knuckle Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-KnuckleWaterlineStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Knuckle <%s> Crossings with Waterlines",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Waterline",  0, -1 );
		$rc := vl-Print ( "X value",   23, -1 );
		$rc := vl-Print ( "Y value",   43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-KnuckleWaterlineStart

	
vl-lb-KnuckleWaterlineReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("z"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleWaterlineReport

	
vl-lb-KnuckleWaterlineEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleWaterlineEnd


# ------------------------------------------------------------------------------
# Chapter M :		Knuckle Crossings with Buttocks
# ------------------------------------------------------------------------------

vl-lb-KnuckleButtockStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Knuckle <%s> Crossings with Buttocks",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Buttock",  0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Z value", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",       23, -1 );
		$rc := vl-Print ( "from baseline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-KnuckleButtockStart

	
vl-lb-KnuckleButtockReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("y"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleButtockReport

	
vl-lb-KnuckleButtockEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-KnuckleButtockEnd


# ------------------------------------------------------------------------------
# Chapter N :		Tangent Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-TangentFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Tangent <%s> Crossings with Frames",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",    0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Y value", 43, -1 );
		$rc := vl-Print ( "Z value", 63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-TangentFrameStart

	
vl-lb-TangentFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentFrameReport

	
vl-lb-TangentFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentFrameEnd


# ------------------------------------------------------------------------------
# Chapter O :		Tangent Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-TangentWaterlineStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Tangent <%s> Crossings with Waterlines",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Waterline",  0, -1 );
		$rc := vl-Print ( "X value",   23, -1 );
		$rc := vl-Print ( "Y value",   43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-TangentWaterlineStart

	
vl-lb-TangentWaterlineReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("z"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentWaterlineReport

	
vl-lb-TangentWaterlineEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentWaterlineEnd


# ------------------------------------------------------------------------------
# Chapter P :		Tangent Crossings with Buttocks
# ------------------------------------------------------------------------------

vl-lb-TangentButtockStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Tangent <%s> Crossings with Buttocks",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Buttock",  0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Z value", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",       23, -1 );
		$rc := vl-Print ( "from baseline", 43, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-TangentButtockStart

	
vl-lb-TangentButtockReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("y"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 30,  3 );
		$rc := vl-Print ( "",                             50, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentButtockReport

	
vl-lb-TangentButtockEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-TangentButtockEnd


# ------------------------------------------------------------------------------
# Chapter Q :		Deck Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-DeckFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Deck <%s> Crossings with Frames",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",    0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Y value", 43, -1 );
		$rc := vl-Print ( "Z value", 63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-DeckFrameStart

	
vl-lb-DeckFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-DeckFrameReport

	
vl-lb-DeckFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-DeckFrameEnd


# ------------------------------------------------------------------------------
# Chapter R :		Deck Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-DeckWaterlineStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Deck <%s> Crossings with Waterlines",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Waterline",  0, -1 );
		$rc := vl-Print ( "X value",   23, -1 );
		$rc := vl-Print ( "Y value",   43, -1 );
		$rc := vl-Print ( "Z value",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-DeckWaterlineStart

	
vl-lb-DeckWaterlineReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("z"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-DeckWaterlineReport

	
vl-lb-DeckWaterlineEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-DeckWaterlineEnd


# ------------------------------------------------------------------------------
# Chapter S :		Seam Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-SeamFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Seam <%s> Crossings with Frames",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",    0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Y value", 43, -1 );
		$rc := vl-Print ( "Z value", 63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-SeamFrameStart

	
vl-lb-SeamFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-SeamFrameReport

	
vl-lb-SeamFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-SeamFrameEnd


# ------------------------------------------------------------------------------
# Chapter T :		Butt Crossings with Waterlines
# ------------------------------------------------------------------------------

vl-lb-ButtWaterlineStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Butt <%s> Crossings with Waterlines",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Waterline",  0, -1 );
		$rc := vl-Print ( "X value",   23, -1 );
		$rc := vl-Print ( "Y value",   43, -1 );
		$rc := vl-Print ( "Z value",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ),  0, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-ButtWaterlineStart

	
vl-lb-ButtWaterlineReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-AbsolutePlaneValue ("z"),  0,  2 );
		$rc := vl-Print ( "",                              5, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-ButtWaterlineReport

	
vl-lb-ButtWaterlineEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-ButtWaterlineEnd


# ------------------------------------------------------------------------------
# Chapter U :		Longitudinal Crossings with Frames
# ------------------------------------------------------------------------------

vl-lb-LongitudinalFrameStart : {
	any-view : {
		$rc := vl-Print ( vl-RepeatPattern () );
		$rc := vl-Skip ();
		$rc := vl-Print (
		       vl-Sprintf ( "Longitudinal <%s> Crossings with Frames",
				    vl-lb-CurveName () ),
		       20, -1 );
		$rc := vl-Skip (1);
		$rc := vl-Print ( "Frame",    0, -1 );
		$rc := vl-Print ( "X value", 23, -1 );
		$rc := vl-Print ( "Y value", 43, -1 );
		$rc := vl-Print ( "Z value", 63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( "from AP",         23, -1 );
		$rc := vl-Print ( "from centerline", 43, -1 );
		$rc := vl-Print ( "from baseline",   63, -1 );
		$rc := vl-Skip ();
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 23, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 43, -1 );
		$rc := vl-Print ( vl-Sprintf ( "(%s)", $UNIT_2ND ), 63, -1 );
		$rc := vl-Skip (1);
	} # end of any-view
} # end of vl-lb-LongitudinalFrameStart

	
vl-lb-LongitudinalFrameReport : {
	any-view : {
		$rc := vl-lb-SetUnitDivisor ($UNIT_DIV);
		$rc := vl-Print ( vl-lb-PlaneName (),              0,  1 );
		$rc := vl-Print ( "",                              4, -1 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("x"), 15,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("y"), 30,  3 );
		$rc := vl-Print ( vl-lb-RelativeInterValue ("z"), 50,  3 );
		$rc := vl-Print ( "",                             70, -1 );
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-LongitudinalFrameReport

	
vl-lb-LongitudinalFrameEnd : {
	any-view : {
		$rc := vl-Skip ();
	} # end of any-view
} # end of vl-lb-LongitudinalFrameEnd
