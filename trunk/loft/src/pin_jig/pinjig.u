#include	"ciminimum.h"
#include	"cimacros.h"
#include	"ci_mac_def.h"
#include	"macro.h"
#include	"parametric.h"

#include	"vlpinjig.h"

extern		sprintf();
extern		ASsuper_construct();

/* ========================================================================= */
/* the main function is the one implementing the definition creation	     */
/* ========================================================================= */

main ()
{
	IGRlong		sts;
	IGRchar		*temp_names[MACRO_P_FTEMP + MACRO_P_VTEMP];
	IGRchar		*feet_names[MACRO_P_FFEET + MACRO_P_VFEET];
	IGRint		 temp_types[MACRO_P_FTEMP + MACRO_P_VTEMP];
	IGRint		i, j;
        IGRchar           feet_buff[MACRO_P_VFEET * MAX_CHA_TEMP];
	GRobj 	 	ci_mac_def1;
	IGRint		temp_number, feet_number;

	temp_number = MACRO_P_FTEMP + MACRO_P_VTEMP;
	feet_number = MACRO_P_FFEET + MACRO_P_VFEET;

  	temp_names[IDX_PT_MACR] = NAM_PT_MACR;
  	temp_names[IDX_PT_OPTF] = NAM_PT_OPTF;
  	temp_names[IDX_PT_IPIN] = NAM_PT_IPIN;
  	temp_names[IDX_PT_INFR] = NAM_PT_INFR;

	temp_types[IDX_PT_MACR] = macro_generic;
	temp_types[IDX_PT_OPTF] = double_type;
	temp_types[IDX_PT_IPIN] = double_type;
	temp_types[IDX_PT_INFR] = double_type;

	feet_names[IDX_PF_NPIN] = NAM_PF_NPIN;
	feet_names[IDX_PF_ATTR] = NAM_PF_ATTR;

	for ( i=MACRO_P_FFEET; i<feet_number; i=i+1) {
                sprintf ( &feet_buff[(i - MACRO_P_FFEET)*MAX_CHA_TEMP],
                          "%s%d", NAM_PF_VARF, i - MACRO_P_FFEET);
                feet_names[i] = &feet_buff[(i - MACRO_P_FFEET)*MAX_CHA_TEMP];
        }

  	ci_mac_def1 = NULL_OBJID;

  	ac$cimacdef( 	cimacdef          = ci_mac_def1,
			prop		  = ACvariable_template,
			status 	          = &sts,
			name              = MACRO_PINJIG,
              		temp_num          = temp_number,
			temp_names        = temp_names,
			temp_types        = temp_types,
	      		extern_feet_num   = feet_number,
	 		extern_feet_names = feet_names );
return 1;
}
/* ========================================================================= */
