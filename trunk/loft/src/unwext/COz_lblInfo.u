
#include "VDppl.h"
#include "VDobj.h"
#include "v_slcdef.h"
#include "v_pplslc.h"

extern VSmatchRE();

main()
{
IGRchar			search_pattern[10], pltName[100], labelText[100], 
			tempString[100], *p;
struct GRobj_env	plateOE;

   vd$ppl_getarg_at_index( which_info = INPUT_INFO,
                           index      = 0,
                           value      = &plateOE );

   vdobj$Get( objOE = &plateOE, objName = pltName );

   /*
    * Check for Deck Plates.
    */
   strcpy( labelText, pltName );
   strcpy( search_pattern, "*d*.p*" );

   if( VSmatchRE( search_pattern, labelText ) )
   {
       	p = strstr( labelText, ".p" );
	if( p )
	{
	   p = p - 1;
      	   p[0] = '\0';

	   p = strrchr( labelText, 'd' );
	   if( p )
	   {
	      strcpy( labelText, p+1 );
	      strcat( labelText, " DECK" );
	      goto wrapup;
	   }
	}
   }

   /*
    * Check for Transversal BulkHead Plates.
    */
   strcpy( labelText, pltName );
   strcpy( search_pattern, "*tb*.p*" );

   if( VSmatchRE( search_pattern, labelText ) )
   {
        p = strstr( labelText, ".p" );
	if( p )
	{
           p[0] = '\0';

	   p = strstr( labelText, "tb" );
	   if( p )
	   {
	      sprintf( tempString, "TB - FR %s", p+2 );
	      strcpy( labelText, tempString );	
	      goto wrapup;
	   }
	}
   }

   /*
    * Check for Transversal Web Frame Plates.
    */
   strcpy( labelText, pltName );
   strcpy( search_pattern, "*tf*.p*" );

   if( VSmatchRE( search_pattern, labelText ) )
   {
        p = strstr( labelText, ".p" );
        if( p )
        {
           p[0] = '\0';

           p = strstr( labelText, "tf" );
	   if( p )
	   {
              sprintf( tempString, "TF - FR %s", p+2 );
              strcpy( labelText, tempString );        
	      goto wrapup;
	   }
	}
   }

   /*
    * Check for Longitudinal BulkHead Plates.
    */
   strcpy( labelText, pltName );
   strcpy( search_pattern, "*lb*.p*" );

   if( VSmatchRE( search_pattern, labelText ) )
   {
        p = strstr( labelText, ".p" );
        if( p )
        {
           p[0] = '\0';        

           p = strstr( labelText, "lb" );
	   if( p )
	   {
	      sprintf( tempString, "LB - %s", p+2 );
	      strcpy( labelText, tempString );
	      goto wrapup;
	   }
	}
   }

   /*
    * Check for Shell Plates.
    */
   strcpy( labelText, pltName );
   strcpy( search_pattern, "*sh.p*" );

   if( VSmatchRE( search_pattern, labelText ) )
   {
	strcpy( labelText, "SHELL" );
   }

wrapup:

   vd$ppl_set_size( which_info = OUTPUT_INFO,
                    size       = 1 );

   vd$ppl_setarg_at_index( which_info = OUTPUT_INFO,
                           index      = 0,
                           type       = VD_string,
                           value      = labelText    );
   return 1;
}
