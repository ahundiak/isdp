# This is the .profile for the Project Integrator.

# If executing profile through fmu exit before timeout.
#dmb:04/26/93:We need to watch out for this on SCO_UNIX!
if [ "$LOGNAME" = "" ]
then
  return 0
fi

#dmb:08/02/94:Adding this for streamlining...
set -o nolog

# Set basic symbols
System=ums
Project=ums20
Version=02.01.00.00  # Not Used


# Pick up SPC_PROJECT symbols defined for this node
# dmb:09/34/91:Note fake names for now.


# Set DISPLAY for X environment
# The O'Reilly Books say this is a defacto standard. (VIII,p164-165.)
# See TCP/IP docs for '127.0.0.1  localhost' entry in /etc/hosts.
# dmb:10/21/91:Added to set up work area on Sun
#    DISPLAY=${DISPLAY:-localhost:0}
# dmb:11/08/91:This doesn't work on Clipper but does work on Sun.
#    export DISPLAY=${DISPLAY:-localhost:0}
# dmb:11/08/91:This does work on Clipper and Sun.
# dmb:04/08/93:...but not always on SUNOS5...
DISPLAY=${DISPLAY:-unix:0.0}
export DISPLAY

# dmb:03/25/93:Added because SUNOS5 does not have . in PATH.
#dmb:08/17/94:Corrected
#PATH=$PATH:.:/opt/ingr/bin:/usr/local/bin:/var/opt/ingr
PATH=$PATH:.


# Inquire about the current Operating System.
# dmb:05/19/92:NOTE: We should shift this to a machine-type querry.
UNAME_KEY=`uname -s | tr '[a-z]' '[A-Z]'`

#dmb:04/08/93:Simplify by setting OS_KEY first
case $UNAME_KEY
in
#  "HYDRA" )
#dmb:04/26/93:We know this is wrong, but we'll just use it as is for now.
#    OS_KEY=SCO
#    ;;
  "HP-UX" )
    OS_KEY=HPUX
    ;;
  "CLIX" )
    OS_KEY=CLIX
    ;;
  "IRIX" )
    OS_KEY=IRIX
    ;;
  "SUNOS" )
    SUNOS_VERSION=`uname -r`
    case $SUNOS_VERSION
    in
      4.* )
        OS_KEY=SUNOS4
        SUNOS_VERSION=SUNOS4
        ;;
      5.* )
        OS_KEY=SUNOS5
        SUNOS_VERSION=SUNOS5
        ;;
      * )
        echo "Unknown SUNOS_VERSION $SUNOS_VERSION: Cannot set OS_KEY"
        ;;
    esac
    export SUNOS_VERSION 
    ;;
    * )
     # sml:08-04-93 add grab_bag case for SCO, since uname -s is unreliable
     #              on that box
     OS_SECONDARY_KEY=`uname -m`
     if [ $OS_SECONDARY_KEY = "i386" ]
     then
       OS_KEY=SCO
     elif [ $OS_SECONDARY_KEY = "i486" ]
     then
       OS_KEY=SCO
     fi
     ;;

esac
export OS_KEY


#BOX=`uname -s`
# Now, Set Default Platform Definitions for this login on this machine
#case $BOX
case $OS_KEY
in
  SCO )
#dmb:04/26/93:Extracted from SCO_UNIX's stdprofile they gave us. BEGIN
if [ -z "$LOGNAME" ]; then
        LOGNAME=`logname`               # name of user who logged in
        export LOGNAME
fi

MAIL=/usr/spool/mail/$LOGNAME           # mailbox location
export MAIL

if [ -z "$PWD" ]; then
        PWD=$HOME                       # assumes initial cwd is HOME
        export PWD
fi

#    stty intr "" erase "" echoe kill ""
stty intr "^C" erase "" echoe kill "^u"

#dmb:04/26/93:Extracted from SCO_UNIX's stdprofile they gave us. END


#dmb:04/26/93:I don't think this will be on servers any time soon.
#    PATH=$PATH:/usr/bin/X11

   # Default target archetecture (lower case)

#dmb:04/26/93:Setting PROC_TYPE_LIST to i486 for initial AST port

#   PROC_TYPE_LIST="i486"

#dmb:04/28/93:Try Adding i386 to PROC_TYPE_LIST for AST port

#   PROC_TYPE_LIST="i386 i486"

#dmb:04/28/93:Just use i386 for AST port for now since it's what
#    uname -m says.

   PROC_TYPE_LIST="i386"

echo "Set PROC_TYPE_LIST to $PROC_TYPE_LIST for $OS_KEY"

#dmb:09/24/92:Need to set automatically somehow.
#sml:07-14-93: Use i386
#   DEFAULT_PROC_TYPE=i486
   DEFAULT_PROC_TYPE=i386
#dmb:04/28/93:Try
#   DEFAULT_PROC_TYPE=`uname -m`


echo "Set DEFAULT_PROC_TYPE to $DEFAULT_PROC_TYPE"

#sml: SCO-UNIX does not use INGRHOME
#    INGRHOME=/opt/ingr
    INGRHOME=/usr/ip32:/usr2/ip32:/opt/ingr
#    INGRHOME=/usr:/usr2:/opt/ingr
    export INGRHOME

   OS_KEY=SCO
   CURRENT_OS_KEY=$OS_KEY
    ;;

  HPUX )

    PATH=$PATH:/usr/bin/X11
    echo "Set PROC_TYPE_LIST to hp9000 for HPUX"
    PROC_TYPE_LIST="hp9000"
    INGRHOME=/usr/ip32:/usr2/ip32:/opt/ingr
    export INGRHOME

    stty intr "^C" erase "^H" echoe kill "^U"
    DEFAULT_PROC_TYPE=hp9000


    OS_KEY=HPUX
    CURRENT_OS_KEY=$OS_KEY
    ;;
  CLIX )

    PATH=$PATH:/usr/bin/X11
   # Default target archetecture (lower case)
#dmb:05/01/92:Try turning this on.
#    DEFAULT_PROC_TYPE=`inqcpuid | tr '[A-Z]' '[a-z]'`

#dmb:09/24/92:Setting PROC_TYPE_LIST to c100 and c400 for ISS7.0
echo "Set PROC_TYPE_LIST to c100 and c400 for ISS7.0"

   PROC_TYPE_LIST="c100 c400"

# dmb:10/21/92:Cut down overhead for early development
#   PROC_TYPE_LIST="c100"

echo "Set DEFAULT_PROC_TYPE to c100"
#dmb:09/24/92:Need to set automatically somehow.
#  Try  inqcpuid | case (c100|c300);; (c400) ;;esac

    INGRHOME=/usr/ip32:/usr2/ip32:/opt/ingr
#    INGRHOME=/usr:/usr2:/opt/ingr
    export INGRHOME

   DEFAULT_PROC_TYPE=c100

   OS_KEY=CLIX
   CURRENT_OS_KEY=$OS_KEY
    ;;

  IRIX )
    stty intr "" erase "" echoe kill ""

    PATH=$PATH:/usr/bin/X11
   # Default target archetecture (lower case)
# dmb:08/13/92:Need to discover how to do this for SGI...
# dmb:08/13/92:NOTE:Fake value for now
# dmb:08/20/92:Use hinv -c processor | awk '/^CPU/ {print $2}' | tr '[A-Z]' '[a-z]'
#               -or - 
#                  hinv -t cpu | awk '{print $2}' |  tr '[A-Z]' '[a-z]'

    INGRHOME=/var/opt/ingr:/usr/ip32:/usr2/ip32:/usr3/ip32:/opt/ingr
#    INGRHOME=/usr:/usr2:/usr3:/opt/ingr
    export INGRHOME
#    INGRDELIVER=/usr1/ip32
#    export INGRDELIVER

    DEFAULT_PROC_TYPE=mips

   OS_KEY=IRIX
   CURRENT_OS_KEY=$OS_KEY
    ;;

  SUNOS4 )
    OPENWINHOME=/usr/openwin
    export OPENWINHOME

    INGRHOME=/usr/ip32:/usr2/ip32:/opt/ingr
#    INGRHOME=/usr:/usr2:/opt/ingr
    export INGRHOME

    INGRHOME=${INGRHOME:=/opt/ingr}

# These should be added to /etc/profile
#dmb:04/05/92:Put this first to get INGR libX11 stuff first!
    PATH=$PATH:/usr/bin/X11
    PATH=$PATH:$OPENWINHOME/bin

#dmb:Include this for the brain dead excuse for an editor they stuck
# us with on Solaris...
    GNU_PATH=`proddata '+%p' -x emacs`/gnu/bin
    PATH=$PATH:$GNU_PATH
    export PATH

    # dmb:04/05/93:Adding this for new makemake
    export CPATH=/usr/sunc/lang

# dmb:10/21/91:Added for SunCC
    PATH=/usr/sunc/lang:$PATH

    MANPATH=/usr/sunc/lang/man:/usr/man
# dmb:10/24/91: Added for openwin man pages
    MANPATH=$MANPATH:/usr/openwin/man
    export MANPATH

#dmb:03/21/92:Exp - move this up to here for all sun logins
    # dmb:05/09/91:These get done somehow if you log into the Sun directly,
    # but not if you rlogin.  
# LD_LIBRARY_PATH=/usr/lib/X11
#dmb:04/08/93:Try reversing these...
#    LD_LIBRARY_PATH=$OPENWINHOME/lib
#    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ingr/lib

    LD_LIBRARY_PATH=/opt/ingr/lib
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENWINHOME/lib

# dmb:03/31/93:Note what happens here! If LD_LIBRARY_PATH has more than one
# directory in it, then this will be wrong...
#   LD_LIBRARY_PATH=$INGRHOME/lib
    export LD_LIBRARY_PATH

#dmb:03/21/92:Exp - move this up to here for all sun logins
    TERM=vt100
    export TERM

    # dmb:04/05/93:Adding for new (SUNOS5) newprod.
    stty rows 24 columns 80

    alias pg='/usr/5bin/pg '

   # Default processor type: need to inquire
#    DEFAULT_PROC_TYPE=`/usr/ucb/arch | tr '[A-Z]' '[a-z]'`


#    SUNOS_PACKAGE_LIST="SUNOS4 SUNOS5"
    SUNOS_PACKAGE_LIST="SUNOS4"
    OS_KEY_INITIALIZATION_LIST="SUNOS4"

    export SUNOS_PACKAGE_LIST

    CURRENT_OS_KEY=$OS_KEY
    ;;

   SUNOS5 )
     OPENWINHOME=/usr/openwin
     export OPENWINHOME

     #dmb:03/17/93:Added for xterm
     PATH=$PATH:$OPENWINHOME/bin

     #dmb:08/02/94:Path form of INGRHOME is not supported.
     INGRHOME=${INGRHOME:=/opt/ingr}

#     INGRHOME=/opt/ingr:/usr1/ip32:/usr/ip32
#     INGRHOME=/opt/ingr:/usr1:/usr
     export INGRHOME

     INGRHOME=${INGRHOME:=/opt/ingr}

#dmb:08/17/94:These could be added to /etc/profile on a Build Machine
#             All production accounts will need these in their PATHs
    # dmb:03/24/93:Adding for SUNOS5
    PATH=$PATH:/usr/local/bin
    #dmb:03/17/93:Added for INGR stuff
    PATH=$PATH:$INGRHOME/bin
    #dmb:03/31/93:Added for mwm
    PATH=$PATH:$INGRHOME/bin/X11

    #dmb:08/17/94:Move these to system.env!!!
    #dmb:08/17/94:Added for compiler
    PATH=$PATH:/usr/ccs/bin
    #dmb:08/17/94:Added for cpp
    PATH=$PATH:/usr/ccs/lib

    #dmb:Include this for the brain dead excuse for an editor they
    # stuck us with on Solaris...
    GNU_PATH=`proddata '+%p' -x emacs`/gnu/bin
    PATH=$PATH:$GNU_PATH

    # dmb:04/05/93:Adding this for cpp in new makemake
    export CPATH=/usr/ccs/lib

    MANPATH=/usr/share/man

# dmb:10/24/91: Added for openwin man pages
    MANPATH=$MANPATH:/usr/openwin/man

    #dmb:03/22/93:Changed for SunCC
#    PATH=/opt/SUNWspro/SC2.0.1:/opt/SUNWspro/bin:/usr/ccs/bin:$PATH
    PATH=/opt/SUNWspro/SC2.0.1:/opt/SUNWspro/bin:$PATH
    MANPATH=$MANPATH:/opt/SUNWspro/man
    MANPATH=$MANPATH:/opt/SUNWspro/SC2.0.1/man
    MANPATH=$MANPATH:/opt/SUNWspro/SW2.0.1/man
    MANPATH=$MANPATH:/opt/SUNWspro/swmgr/man
    MANPATH=$MANPATH:/opt/SUNWspro/FileMerge/man
    MANPATH=$MANPATH:/opt/SUNWspro/SunTech_License/man

    export MANPATH

#dmb:03/21/92:Exp - move this up to here for all sun logins
    # dmb:05/09/91:These get done somehow if you log into the Sun directly,
    # but not if you rlogin.  
# LD_LIBRARY_PATH=/usr/lib/X11
#dmb:04/08/93:Try reversing these...
#    LD_LIBRARY_PATH=$OPENWINHOME/lib
#    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ingr/lib

    LD_LIBRARY_PATH=/opt/ingr/lib
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENWINHOME/lib

# dmb:03/31/93:Note what happens here! If LD_LIBRARY_PATH has more than one
# directory in it, then this will be wrong...
#    LD_LIBRARY_PATH=$INGRHOME/lib
    export LD_LIBRARY_PATH

#dmb:03/21/92:Exp - move this up to here for all sun logins
    TERM=vt100
    export TERM

    # dmb:04/05/93:Adding for new (SUNOS5) newprod.
    stty rows 24 columns 80

    alias pg='/usr/5bin/pg '

#        SUNOS_PACKAGE_LIST="SUNOS4 SUNOS5"
    SUNOS_PACKAGE_LIST="SUNOS5"
    OS_KEY_INITIALIZATION_LIST="SUNOS5"
    export SUNOS_PACKAGE_LIST

    CURRENT_OS_KEY=$OS_KEY

   # Default target archetecture: need to inquire
#    DEFAULT_PROC_TYPE=`/usr/ucb/arch | tr '[A-Z]' '[a-z]'`

    ;;

   * )
    echo "Unknown OS_KEY in .profile: Cannot set DEFAULT_PROC_TYPE"
    ;;
esac

CURRENT_PROC_TYPE=${DEFAULT_PROC_TYPE}
export  DEFAULT_PROC_TYPE CURRENT_PROC_TYPE

DEFAULT_PROC_TYPE_KEY=`echo $DEFAULT_PROC_TYPE | tr '[a-z]' '[A-Z]'`
CURRENT_PROC_TYPE_KEY=`echo $CURRENT_PROC_TYPE | tr '[a-z]' '[A-Z]'`
export  DEFAULT_PROC_TYPE_KEY CURRENT_PROC_TYPE_KEY

# Now we can set up system environment.
SYSTEM_ENV="$HOME/$System/source/sysinfo/system.env"
if [ -f "$SYSTEM_ENV" ]
then
  . ${SYSTEM_ENV}
fi

# To manage X
#PATH=$PATH:$HOME/bin

# BAG Production Tools
#BAGTOOLS=~bagtools/tools

#BAGTOOLS=/usr
# dmb:04/05/93:Added for packaged bagtools
# dmb:04/26/93:Changing back because DELTOOLS isn't available here yet.
#if [ $OS_KEY = "SCO" ]
#then
#BAGTOOLS=~bagtools
#else
BAGTOOLS=`proddata '+%p' -x bagtools`
#fi
export BAGTOOLS

PATH=$PATH:${BAGTOOLS}/bin

#  SPC Environment: Should be managed externally?
PROJECT_ENV="$HOME/$Project/source/projinfo/project.env"
if [ -f "$PROJECT_ENV" ]
then
  . ${PROJECT_ENV}
fi

# SPC Node Symbols
export MY_NODE=`uname -n`
export SPC_NODE=bagman

# SPC Library Symbols
SPCROOT=/usr/spcusr
#SPCVERS=${SYSTEM_VERSION_NUMBER}
#SPCPROD=${SYSTEM_NAME}

# SPC Project Locations
#XFLIB=$SPCROOT/xforms10
#XMFLIB=$SPCROOT/xmforms
UMSLIB=$SPCROOT/ums20
#HELPLIB=$SPCROOT/help80
#BACKLIB=$SPCROOT/backup
#TOOLSLIB=$SPCROOT/tools
#export XFLIB XMFLIB UMSLIB HELPLIB BACKLIB TOOLSLIB

# NOTE: Provide symbols for each project
#SPC_H=${SPCROOT}/help80
#SPC_XM=${SPCROOT}/xmforms
#SPC_X=${SPCROOT}/xforms
#SPC_I=${SPCROOT}/iforms
#export SPC_H SPC_XM SPC_X SPC_I



ENV=$HOME/.env
export ENV

TMPDIR=/usr/tmp
export TMPDIR

USR_PATH=$PATH
export USR_PATH

# Finish by announcing successful login
echo ""
echo "  Logged in as: $LOGNAME on $MY_NODE"
echo "   `date`"
echo ""
echo "          Software System: $SYSTEM_NAME"
echo "          Version: $SYSTEM_VERSION_STRING"
echo ""

#######################################

#dmb:04/08/93:If we're on SUN, this has to be the last thing our .profile
case $OS_KEY
in
  SUNOS|SUNOS4|SUNOS5 )
    if [ $TERM = 'sun' -a `tty` = '/dev/console' ]
    then
      echo "Invoking OpenWindows ... Enter Cntl-C within 5 seconds to abort"
      sleep 6

      $OPENWINHOME/bin/openwin -noauth

      clear           # get rid of annoying cursor rectangle
      exit            # logout after leaving windows system
    fi
    ;;
esac


#echo "Setting up PURIFY Environment"
#echo ""
#. ~/purify.env
