Author:   Jenny Parris
Title:    Delete Part PPL Macro
Revision: 3

Abstract:
The delete part occurrence macro deletes a graphic part, non-graphic part, and
any parametric part. This macro does not delete the part definition from the 
database.

Macro Definition:

pdm$delete_occurrence(
               lw_status,
               spr_mod_env, 
               spr_part
              )     
Argument       Data Type      I/O  Description
lw_status      *long          O    Return status
spr_mod_env    *struct GRmd_env I   Module environment to delete part occurrence
spr_part       *struct GRid   I    Object ID of part to be deleted

Error Handling:


PDM_E_BAD_OBJID
PDM_E_NULL_OBJID
PDM_E_DELETE_PARAMETRIC_PART
PDM_E_DETACH_MACRO_LIB
PDM_E_INVALID_PART_POINTER

External Functions:

  pdmoDeletePartOccurrence()

Assumptions:

  The user must be logged into PDM.

  EMS must be running.

Impacts:

  None.

Future:

  A way of allowing the user to delete a part occurrence outside of EMS.

Input Requirements:

  Input spr_part is required for all delete part placements.

Input Validation:

  If spr_mod_env is NULL, get current module information.

  If spr_part is NULL, set lw_status to PDM_E_NULL_OBJID and exit.

  Verify spr_part is valid if given. If spr_part's objid does not exist in the 
    object space, set lw_status to PDM_E_BAD_OBJID and exit.

Algorithm:

  *lw_status = pdmoDeletePartOccurrence(spr_mod_env, spr_part) 

  Exit.

Sample Invocation:
 
 struct GRid *part;

 pdm$delete_occurrence(lw_status = &status, spr_mod_env = NULL,
                       spr_part = part);


Test Cases:

GRParts:

Test Case
-----------------------------
User Not Logged In
Delete Part Attached
Delete Part Not Attached
Delete Part Not Positioned

Parametric Parts:

Test Case
-----------------------------
User Not Logged In
Delete Part
Delete Part Not Positioned

