 Name
  pdmoLoadChildStructure
  
  Abstract:
   Loads the linked list passed to APIs pdmoDefineAssembly, pdmoModifyAssembly,
  pdmoDeleteAssembly, pdmoAddPartToAssembly.

  Description

  This API loads attribute values into a structure and adds the structure as
  an entry in a link list of structures.  The link list is then passed to the
  pdmoAddPartToAssembly, pdmoDefineAssembly, pdmoModifyAssembly function.
  Memory is allocated in this function for each node added to the linked list.
  This linked list is a NULL terminated linked list.

 
  Function Protocol:

  pdmoLoadChildStructure(
                        char  *cpr_catalog,
                        char *cpr_partnum,
                        char *cpr_revision, 
                        char *cpr_description,
                        int ir_childno,
                        double dr_quantity, 
                        char *car_usageid,
                        char car_localfilename,
                        int ir_tagno,
                        char car_p_alttagno, 
                        PDMchildren *spr_PDMstructure
                        )

  Input:

   char *cpr_catalog - Catalog of the part to be added/deleted to the struc-
ture.
   char *cpr_partnum - Partnum of the part to be added/deleted to the struc-
ture.
   char *cpr_revision-Revision of the part to be dded/deleted to the structure.
   char *cpr_descrption - Description of the added/deleted to the structure
   int   ir_childno  - Child no of the like parts in the same level, if
                       multiple parts are defined without this input
                       system will assign it
   double  dr_quantity - Quantity of the child
   char  car_p_usgaeid[25]- Usage ID of the part
   char  car_n_cofilename[14] - Filename of the part
   int   ir_p_tagno - Tagno of the part
   char  car_p_alttagno - ALttagno of the part

  Input/Output:
   PDMchildren  *spr_PDMstructure - Linked list containing the children info
                                    which makeup the assembly. The list is a
                                    NULL terminated list.

  Input Constraints:
  cpr_catalogname:      required
                        16 characters or less
                        must already exist

  cpr_partnum:          required
                        ! * ? , : invalid characters
                        must not exceed the number of characters specified
                        at catalog creation time

  cpr_revision:         required
                        ! * ? , : invalid characters
                        must not exceed the number of characters specified
                        at catalog creation time
  cpr_descrption        optional
  ir_childno            optional
  dr_quantity           optional
                        Cannot be zero or negative
  car_p_usgaeid         optional
                        Cannot exceed 25 characters
  car_n_cofilename      optional
                        Cannot exceed 14 characters
  ir_p_tagno            optional
                        Cannot be  negative
  car_p_alttagno        optional


  Structures:

 PDMchildren *spr_PDMstructure - children info which make up the
                                     assembly.

        {
        int     im_n_citno;      /* System defined - Leave it  - N */
        int     im_n_pcatalogno; /* System defined - Leave it  - N */
        int     im_n_pitemno;    /* System defined - Leave it  - N*/
        int     im_n_ccatalogno; /* System defined - Leave it  - N*/
        int     im_n_citemno;    /* System defined - Leave it  - N*/
        int     ir_p_level;/* Level no of the assembly-Default 1 - OPTIONAL*/
        cha     caw_n_setindicator[2]; /* System defined -Leave it -N*/
        cha     caw_n_status[3];  /* System defined - Leave it  - N*/
        int     im_p_pchildno;    /* System defined - Leave it  - N*/
        int     ir_p_childno;    /* Child no of the like parts in the
                                    same level, if multiple parts
                                    are defined without this input
                                   system will assign it - OPTIONAL*/
        char    car_n_catalogname[21]; /*Catalogname of the child - INPUT */
        char    *cpr_n_itemname;      /*Partnumber of the child   - INPUT */
        char    *cpr_n_itemrev;       /*Revision   of the child   - INPUT */
        char    *cpr_n_itemdesc;      /*Description of the child  - INPUT */
        char    car_p_attached[2];/*Display flag of the child - Leave it -N */
        double  dr_p_quantity;   /* Quantity of the child - Default 1
OPTIONAL*/
        char    car_p_usgaeid[25]; /* Usage ID - OPTIONAL */
        char    car_n_cofilename[14]; /*Filename of the part - OPTIONAL */
        int     ir_p_tagno;  /* Tagno - OPTIONAL - Default system generates */
        char    car_p_alttagno;/* ALttagno -OPTIONAL-Default system generates
*/
        spr_children      *next;/* NEXT child pointer of linked list or NULL
*/
        }* spr_PDMchildren;


 Return Status:
	PDM_S_SUCCESS           - Successful Completion
	PDM_E_INVALID_DATA      - Invalid data
	PDM_E_NO_DATA           - No data for required attribute

External Functions:
None

Assumptions:
None

Impacts:
   1. pdmoDefineAssembly
   2. pdmoAddPartToAssembly
   3. pdmoModifyAssembly
   4. pdmoFreeChildStructure

Future:
To read this information from a ASCII file or from a spread sheet.

Algorithm:
- if spr_PDMstructure is not NULL
	- create the first node in the link list
- else
	- add a node to the end of the list
- set status
- return

 Keywords:
 ASSEMBLY,STRUCTURE,LOAD


