/****************************************************************************

Name
   pdmoDebugOn

Abstract
   Turns the debug option of PDU,PDM,and NFM subsystems to "ON".

Description
   The global variables are PDM_debug_on, and PDMdebug_on to 1.
   The path variables are PDU_DEBUG_FILE, and PDM_DEBUG_FILE are loaded.
   NFM variables toggles and files are set.


Function Protocol
  int pdmoDebugOn (
                   int iar_toggles[8],
                   char *car_paths[8]
                   )

Input:

    If both the inputs are null, then turn the debug flags
    as it is done in the user interface.

        toggles [0] =   1 or 0;    /*PDU deb on or debug off*/
        toggles [1] =   1 or 0;    /*PDM deb on or debug off*/
        toggles [2] =   1 or 0;    /*NFM deb on or debug off*/
        toggles [3] =   1 or 0;    /*SQL deb on or debug off*/
        toggles [4] =  1  or 0;     /*MEMS deb on or debug off*/
        toggles [5] =  1  or 0;     /*ERRS deb on or debug off*/
        toggles [6] =   1 or 0;    /*NET-CLIENT deb on or debug off*/
        toggles [7] =   1 or 0;    /*NET-SERVER deb on or debug off*/

   The path variables for NFM are

        files [0] =   "/usr2/tmp/pdu.dbg"; /*PDU debug file*/
        files [1] =   "/usr2/tmp/pdm.dbg";  /*PDM debug file*/
        files [2] =   "/usr2/tmp/nfm.dbg"; /*NFM debug file*/
        files [3] =   "/usr2/tmp/sql.dbg";  /*SQL debug file*/
        files [4] =   "/usr2/tmp/mem.dbg";  /*MEM debug file*/
        files [5] =   "/usr2/tmp/err.dbg";  /*ERRS debug file*/
        files [6] =   "/usr2/tmp/netc.dbg";  /*NETC debug file*/
        files [7] =   "/usr2/tmp/nets.dbg";  /*NETS debug file*/

   Input/Output:

   Output:
    Nothing.



   Algorithm:

   1. If     toggles [0] =   1;    /*PDU deb on */
       Sets the global variables PDM_debug_on for PDU debug
        Checks the entry in files[0]
        if valid, copies the path to PDU_DEBUG_FILE variable, proceeds further
           else defaults to /usr/tmp/pdu.dbg
       else
        proceed further
   2. If     toggles [1] =   1;    /*PDM deb on */
       Sets the global variables PDMdebug_on for PDM sub sytem debug
         Checks the entry in files[1]
        if valid, copies the path to PDM_DEBUG_FILE variable, proceeds further
           else defaults to /usr/tmp/pdm.dbg
       else
        proceed further
   3. If     toggles [2] =   1;    /*NFM deb on */
       Sets the variable NFMtoggle[8] =1 for NFM subsystem debug
         Checks the entry in files[2]
        if valid, copies the path to NFMfiles[8] variable, proceeds further
           else defaults to /usr/tmp/nfm.dbg
       else
        proceed further
   4. If     toggles [3] =   1;    /*SQL deb on */
       Sets the variable NFMtoggle[9] =1 for SQL sub system debug
         Checks the entry in files[3]
        if valid, copies the path to NFMfiles[9] variable, proceeds further
           else defaults to /usr/tmp/sql.dbg
       else
        proceed further
   5. If     toggles [4] =   1;    /*MEMS deb on */
       Sets the variable NFMtoggle[11] =1 for MEM subsytem debug
         Checks the entry in files[4]
        if valid, copies the path to NFMfiles[11] variable, proceeds further
           else defaults to /usr/tmp/mems.dbg
       else
        proceed further
   8. If     toggles [5] =   1;    /*ERRS deb on */
       Sets the variable NFMtoggle[14] =1 for Error sub sytem debug
         Checks the entry in files[5]
        if valid, copies the path to NFMfiles[14] variable, proceeds further
           else defaults to /usr/tmp/errs.dbg
       else
        proceed further
   9. If     toggles [6] =   1;    /*NETclient deb on */
       Sets the variable NFMtoggle[6] =1 for Error sub sytem debug
         Checks the entry in files[6]
        if valid, copies the path to NFMfiles[6] variable, proceeds further
           else defaults to /usr/tmp/netc.dbg
       else
        proceed further
   9. If     toggles [7] =   1;    /*NETserver deb on */
       Sets the variable NFMtoggle[3] =1 for Error sub sytem debug
         Checks the entry in files[7]
        if valid, copies the path to NFMfiles[3] variable, proceeds further
           else defaults to /usr/tmp/nets.dbg
       else
        proceed further

then call NFMall_debug() function ;
return success;

DEPENDENCIES

Assumptions
None
Globals Used
PDMdebug_on, PDM_debug_on, PDU_DEBUG_FILE, PDM_DEBUG_FILE

Database schema impact
None

Functions called

1. NFMdebug_all

Feature Level Impact

It affects everywhere in the product.


MODULARITY


EXTENSIBILITY

Return Values

PDM_S_SUCCESS      - Successful Completion
PDM_E_OPEN_FILE    - Couldn't open the debug files
PDM_E_FAILURE      - Couldn't generate the debugs

Notes

Index
DEBUG

Keywords
DEBUG

History
   Kumar Narayanan Fri Jul 16 13:43:00 CDT 1993: Initial Creation
****************************************************************************/


/****************************************************************************
Example
****************************************************************************/


 status = pdmoDebugOn (NULL, NULL ); /* Turn debugs on as the interface does */



/****************************************************************************

Name
   pdmoDebugOff

Abstract
   Turns the debug option "OFF" of PDU,PDM,and NFM subsystems.

Synopsis
  int pdmoDebugOff ()


Description
   The global variables are PDM_debug_on, and PDMdebug_on to "OFF".
   The path variables are PDU_DEBUG_FILE, and PDM_DEBUG_FILE to "OFF".
    NFM variables of toggle and files for set.

   Algorithm:
       1. Sets the global variables PDM_debug_on for PDU debug to zero.
          Nullifies the path of PDU_DEBUG_FILE variable, proceeds further
       2. Sets the global variables PDMdebug_on for PDM debug to zero.
          Nullifies the path of PDM_DEBUG_FILE variable, proceeds further
       3. Sets the variable NFMtoggle[8] =0 for NFM subsystem debug.
          Nullifies the path to NFMfiles[8] variable, proceeds further
       4. Sets the variable NFMtoggle[9] =0 for SQL sub system debug
          Nullifies the path to NFMfiles[9] variable, proceeds further
       5. Sets the variable NFMtoggle[11] =0 for MEM subsytem debug
          Nullifies  the path to NFMfiles[11] variable, proceeds further
       6. Sets the variable NFMtoggle[14] =0 for Error sub sytem debug
          Nullifies the path to NFMfiles[14] variable, proceeds further
       7. Sets the variable NFMtoggle[6] =0 for Error sub sytem debug
          Nullifies the path to NFMfiles[6] variable, proceeds further
       8. Sets the variable NFMtoggle[3] =0 for Error sub sytem debug
          Nullifies the path to NFMfiles[3] variable, proceeds further

then call NFMall_debug() function ;
return success;

Input:

Nothing

   Input/Output:
    Nothing

   Output:
    Nothing.

DEPENDENCIES

Assumptions
1. The user has logged into the database.

Globals Used
PDMdebug_on, PDM_debug_on, PDU_DEBUG_FILE, PDM_DEBUG_FILE

Database schema impact
None

Functions called

1. NFMdebug_all

Feature Level Impact

It affects everywhere in the product.


MODULARITY


EXTENSIBILITY

Return Values

PDM_S_SUCCESS    - Successful COmpletion
PDM_E_FAILURE    - Couldn't turn the debug off.

Notes

Index
DEBUG

Keywords
DEBUG

History
   Kumar Narayanan Fri Jul 16 13:43:00 CDT 1993: Initial Creation
****************************************************************************/


/****************************************************************************
Include Files
#include <DEBUG.h>
****************************************************************************/

/****************************************************************************
Main Function
****************************************************************************/


int pdmoDebugOff ( )

{
}
