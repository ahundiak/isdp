API for Cancel Part Checkout 

Abstract:
This describes interface protocol for Cancel Part Checkout


Keywords:
Cancel Part Checkout, Rollback, File transfer

Function Protocol:

int pdmoCancelPartCheckOut ( char *cpr_Catalog,
                             char *cpr_Partnum,
                             char *cpr_Revision)

Input: 

 cpr_Catalog    : catalog name
   	          Required
   	          char
 cpr_Partnum    : Item name 
   	          Required
   	          char
 cpr_Revision   : Item revision
   	          Required
   	          char

 
Dependencies:
 - Assumption
     The catalog and part exists and the part is an assy. 
     The PDMexec structure contains info as shown below:
	 catalog    : catalog name
		      Required
		      char
	 part_num   : Item name 
		      Required
		      char
	 revision   : Item revision
		      Required
		      char
		       
     The storage structure should have the current working
     area information.
     Global structure information required for validate access.
       

  -Impacts:
     Updates the catalog record for this part.
     Brings the specified files local.
     Updates/inserts LFM entries for the parts brought local.
     Global structures modified during validate access.
     Brings the specified files local.


Algorithm:
 

1. Validate the required inputs
     All the required inputs are checked for NULL values
     if (NULL) return error

2. Verify whether user is logged in

3. Verify the inputs
     Catalog exists?
        No: return error
     Partnum and revision exists?
        No: return error

4. Load the inputs into PDMexec struct

5. Call PDMvalidate_user_access

6. Load catalog, partnum, revision into PDMexec structure

7. Check to see whether this part is assy

8. If an assy: Call a ppl which does the following (same as during checkin):
    - Opens up the OS
    - Gets the list of partfiles which have been brought local.
    - writes this list into shared memory

9. If an assy: Read the list from the shared memory and load it into a buffer
   else: set the buffer to NULL

10. Pass this buffer into PDMcancel_part_checkout.

11. If successful: return (PDM_S_SUCCESS)
    else: return status


Return Status:
 
PDM_S_SUCCESS
PDM_E_APPEND_BUFFER
PDM_E_BUFFER_FORMAT
PDM_E_BUILD_ARRAY
PDM_E_COULD_NOT_LOAD_PART_INFO
PDM_E_COULD_NOT_MALLOC
PDM_E_CO_SAME_USER_DIFF_SA
PDM_E_ITEM_LOCKED
PDM_E_NOTCHECK_IN
PDM_E_NOTCHECK_OUT
PDM_E_NOT_CO_USER
PDM_E_PART_CHECKED_OUT
PDM_E_PART_FLAGGED_FOR_ARCHIVE
PDM_E_PART_FLAGGED_FOR_BACKUP
PDM_E_PART_FLAGGED_FOR_DELETE
PDM_E_PART_FLAGGED_FOR_RESTORE
PDM_E_PART_NONGRAPHIC
PDM_E_TEMP_IN
PDM_E_TEMP_OUT
PDM_E_WRITE_ROW
PDM_I_CHECKED_OUT_BY_ANOTHER_USER
PDM_E_ASSY_NOT_CHECKEDIN
PDM_E_ITEM_FLAG_ARCHIVE
PDM_E_ITEM_FLAG_BACKUP
PDM_E_ITEM_FLAG_DELETE
PDM_E_NO_PART_FILE
PDM_E_SET_FLAG_ARCHIVE
PDM_E_SET_FLAG_BACKUP
PDM_I_TABLE_LOCKED



Author : Arun Madhwesh
Date   : 080493
Vers   : 1.00

