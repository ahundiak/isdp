/* $Revision: 1.1 $ */
#ifndef DBA_DEF
#define DBA_DEF

#define dba_dmalloc(a,b) dba_dmalloc_ex((a),(b),__FILE__,__LINE__)
#define dba_dcalloc(a,b,c) dba_dcalloc_ex((a),(b),(c),__FILE__,__LINE__)
#define dba_dstrdup(a,b) dba_dstrdup_ex((a),(b),__FILE__,__LINE__)

#if 0
exec sql define RISMAX 33;
#endif
#define DBA_MENU_INPUT 8192
#define RISMAX 33
#define MAX_FILESPEC 260

#if !defined (__WIN16__) && !defined (__WIN32__)
#define WINAPI
#endif

#if !defined (__APOGEE__) && !defined (__WIN16__) && !defined (__WIN32__) \
	&& !defined (_MAC_)
#include <sys/fcntl.h>
#endif

#ifdef _MAC_
#include <fcntl.h>
#include <ctype.h>
#include <time.h>
#include <signal.h>
#include <string.h>
#include <memory.h>
#endif

#ifdef __WIN16__
#include <ctype.h>
#include <time.h>
#include <signal.h>
#include <string.h>
#include <memory.h>
#include <malloc.h>
#endif

#include <stdio.h>

#if !defined (__SUN__) && !defined (__WIN32__) && !defined (__WIN16__) \
 && !defined (sco) && !defined sol && !defined (__hpux) && !defined (_MAC_)
#include <tools.h>
#else
#define CENTER	1
#define RIGHT	2
#define LEFT	3
#endif

#ifdef _MAC_
#include "FI.h"
#include "FIdyn.h"
#else
#include <FI.h>
#include <FIdyn.h>
#endif

/*
#if !defined (__WIN16__)
#include <MI.h>
#endif
*/

#ifdef _MAC_
#include "UMS.h"
#else
#include <UMS.h>
#endif
#include "dba_err.h"
#include "att.def"
#include "linfld.def"
#include "trm.def"
#include "reserve.def"
#include "operator.def"
#include "operand.def"
#include "format.def"
#include "temptyp.def"
#include "options.def"
#include "sort.def"
#include "dba_msg.h"
#include "script.def"

#ifndef SRC_RISDVW
#include "forms.def"
#include "gadgets.def"
#endif

#define EVENTS KEYBOARD_EVENT | BUTTON_EVENT | REFRESH_EVENT \
  | WINDOW_USER_ICON_EVENT | USER_EVENT | COLLAPSE_EVENT
#define RIS 0
#define DMRS 1
#define SEMKEY 121365
#define NP (void *)0

union dba_mixed {
  char c[2001];
  double d[250]; 
  float f[500];
  long i[500];
  short s[1000]; };

union dba_mixed_ptr {
  char *c;
  double *d;
  float *f;
  long *i;
  short *s; };

struct dba_key {
  char page;
  long sign, type, length, offset, before, after;
  struct dba_key *nkey; };

struct dba_line { 
  char *text, *cond, entnam[RISMAX], *script0, *script1;
  int schema, type, entnum, lines_before, lines_after, number;
  long special;
  unsigned long text_lng, cond_lng, scr0_lng, scr1_lng;  
  struct dba_line *pline, *nline;
  struct dba_field *ffield, *lfield, *fafield, *lafield;
  struct dba_group *fgroup[2];
  struct dba_formula *form; };

struct dba_att {
  char entnam[RISMAX], attnam[RISMAX], *join_from, 
    *join_to, *attval, *defval, *format, *alias;
  int schema, active, entnum, attnum, atyp, alen, abyt, aoff, subtyp, bitoff,
    write, decimal, exclude, key, outer, label, row, column, size, sql_driven;
  long ind;
  unsigned long from_lng, to_lng;
  struct dba_att *patt, *natt; };

struct dba_repatt {
  char *join_from, *join_to;
  double total;
  int sort, order, codval, total_flag, abyt, offset, outer;
  long ind;
  union dba_mixed_ptr retval;
  unsigned long from_lng, to_lng;
  struct dba_att *att;
  struct dba_repatt *nrepatt; };

struct dba_outjoin {
  int outer, status;
  long last_row;
  struct dba_repatt *frepatt, *lrepatt, *from_repatt, *to_repatt;
  struct dba_outjoin *noutjoin; };

struct dba_sch {
  char name[RISMAX], password[19];
  int schema, enumtot, built, code_built, open;
  struct dba_ent *fent, *lent;
  struct dba_coded_column *fcc, *lcc;
  struct dba_code_list *fcl, *lcl;
  struct dba_sch *psch, *nsch; };

struct dba_ent {
  char entnam[RISMAX], *cond, *key, *where, *order, *display_id, relations[21],
    *menu_script, *notify_script, *alias, *curkey, *pd_menu, *pd_script;
  int schema, entnum, select, built, dis_built, temp_include, rec_length, 
    active, cr_mode, anumtot, attlin, not_listed, key_rec, num_keys, query,
    color, cursor;
  long mslink, currow, totrow, options;
  unsigned long where_lng, order_lng, cond_lng, key_lng, menu_lng, notify_lng, 
    curkey_lng;
  struct dba_att *fatt, *latt, *catt;
  struct dba_gadget *fgadget, *lgadget;
  struct dba_ent *pent, *nent;
  struct dba_outjoin *foutjoin, *loutjoin;
  struct dba_repatt *frepatt, *lrepatt;
  struct dba_find *ffind, *lfind;
  struct dba_formula *form; };

struct dba_find { 
  char *text;
  unsigned long text_lng;  
  struct dba_find *nfind; };

struct dba_field { 
  char *text, *formula, *update, *reset, *cond, *wtext,
    *vstart, *join_from, *join_to, entnam[RISMAX], attnam[RISMAX];
  double dtot, *total;
  int schema, type, order, page, entnum, attnum, atyp, alen, abyt, number,
    offset, begin, length, decimal, codval, suppress, fraction, justify, outer,
    wrap, column;
  long special, itot;
  unsigned long text_lng, formula_lng, update_lng, reset_lng, cond_lng, 
    wtext_lng, vstart_lng, option, from_lng, to_lng;
  struct dba_field *pfield, *nfield;
  struct dba_formula *uform, *rform, *pform, *vform; };

struct dba_user { 
  char name[21], *memory;
  int type, x, y;
  union dba_mixed_ptr value;
  struct dba_user *puser, *nuser; };

struct dba_usact {
  char text[71];
  struct dba_usact *pusact, *nusact; };

struct dba_sql {
  char text[71];
  struct dba_sql *psql, *nsql; };

struct dba_defatt { 
  double dtot;
  int pad, column;
  long itot, ind;
  struct dba_att *att;
  struct dba_defatt *pdefatt, *ndefatt;
  union dba_mixed_ptr retval; };

struct dba_file { 
  char id[21], filespec[101];
  struct dba_file *nfile; 
  FILE *filnam_ptr; };

struct dba_group { 
  char *text;
  int operand;
  struct dba_formula *form;
  struct dba_group *fgroup, *ngroup; 
  union dba_mixed_ptr ptr; };

struct dba_formula { int mode;
  struct dba_op *fop, *lop; };

struct dba_op {
  int mode, operator, operand;
  struct dba_op *nop;
  struct dba_formula *form; 
  union dba_mixed_ptr ptr; };

struct dba_temp {
  char name[21], description[51];
  int type;
  struct dba_temp *ptemp, *ntemp; };

struct dba_wind {
  char *display_id;
  struct dba_wind *nwind; };

struct dba_library {
  char *name;
  long ld_bl, nd_bl, num_mod, top_i_bl, timestamp, rev1, rev2, mtime, top_s_bl,
    nd_s_bl;
  short ld_by, rebuild, listed, open_num, open_size, nd_s_by;
  struct dba_library *nlib;
  struct dba_lib_index *temps;
  unsigned long size;
  FILE *ptr, **ptr_a; };

struct dba_lib_index {
  char key[23];
  int key_byte, data_byte;
  long key_block, data_block; };

struct dba_coded_column {
  char column[65], join_table[RISMAX], code_column[RISMAX], text_column[RISMAX],
    index_column[RISMAX];  
  int index_value;
  struct dba_code_list *cl;
  struct dba_coded_column *ncc; };

struct dba_code_list {
  char table[RISMAX], code_column[RISMAX], text_column[RISMAX],
    index_column[RISMAX], **ptrs, used;  
  int length, index, built;
  long codetot;
  unsigned long count;
  struct dba_code_list *ncl; };

struct dba_gadget {
  char *rtbnam, *query, *entnam, *attnam, *join_from, *join_to, *fontname, 
    *help_topic, *off_text, *on_text, *filename, *before_script, *after_script,
    *field_script, *command;
  unsigned long rtbnam_lng, ent_lng, att_lng, font_lng, help_lng, file_lng;
  int label, option, xlo, ylo, xhi, yhi, on_color, off_color, outer, 
    symbol_index, next_in_seq, vis_rows, vis_chars, columns, line_weight, 
    line_style, line_depth, text_style, text_just, attr, header,
    list_attr, list_mode, list_x, list_y, list_rows, list_chars, group_label,
    display_group, schema, type, decimal, write, cr_mode, data_type, orient, 
    vis_cols, fld_mode, selected, data_link;
  long fld_attr, mcf_attr, font_mask;
  double minval, maxval, viewed, increment;
  float bodysize;
  unsigned long query_lng, on_text_lng, off_text_lng, before_lng, after_lng,
    field_lng, from_lng, to_lng, command_lng;
  struct dba_gadget *fgadget, *lgadget, *pgadget, *ngadget; };

struct dba_menu_hdr {
  char name[21], description[51], table[50], rel_temp[21]; };

struct dba_rpt_hdr {
  char name[21], description[51], structure[21], output[64], table[50], 
    rel_temp[21];
  int type, user_action, columns, lines; };

struct dba_script_line { 
  char text[1000];
  struct dba_script_line *pscript, *nscript; 
};
struct dba_entnam { 
  char from_entnam[RISMAX], to_entnam[RISMAX], *join_from, *join_to;
  int from_include, where_include;
  unsigned long from_lng, to_lng;
  struct dba_entnam *nentnam; 
};
struct dba_reltemp {
  char name[21];
  struct dba_reltemp *n_reltemp;
  struct dba_reltab *f_reltab, *l_reltab;
  struct dba_reljoin *f_reljoin, *l_reljoin;
};
struct dba_reltab {
  int schema, x, y, group;
  char table[RISMAX];
  struct dba_reltab *n_reltab;
};
struct dba_reljoin {
  int f_schema, t_schema, f_label, t_label, outer, line;
  char f_table[RISMAX], t_table[RISMAX], f_column[RISMAX], t_column[RISMAX];
  struct dba_reljoin *n_reljoin;
};

#if !defined(__SUN__) && !defined(sol) && !defined(__hpux) \
	&& !defined(_MAC_)
#define dba_short_swap_bytes(x)
#define dba_int_swap_bytes(x)
#define dba_double_swap_bytes(x)
#define dba_short_swap_copy(x,y) (memcpy((char *)(x),(char *)(y),2))
#define dba_int_swap_copy(x,y) (memcpy((char *)(x),(char *)(y),4))
#endif

#if defined(__WIN16__) || defined(__WIN32__) || defined(_MAC_)
struct VIapp {
    HMENU menu;
    int last_index;
    short last_menuid;
    int next_palette;
    HANDLE window;    
    HANDLE mdi_client;
    HANDLE client;
    double x, y, width, height;
    double ppmmx, ppmmy;
    int x_mm, y_mm, x_pix, y_pix;    
    char *template_name, *description;
    int desc_lng, tn_lng;
    char *notify_script, *appl_script, *icon, *cursor, *title, *close_script;
    int notify_lng, appl_lng, icon_lng, cur_lng, tit_lng, close_lng;
    short sysmenu, maxbox, minbox, hsb, vsb, mdi, imax, imin;
    int (*callback)();
    int (*pd_callback)();
    HPEN shadowpen, graypen;    
    HBRUSH appbrush;
    int builder_flag, builder_process;
    int num_accs;
    int max_accs;
    int *acc_index;
    int *acc_key;
    struct VIpalette *palette;
    struct VItoolbar *toolbar;
    struct VIstatusbar *statusbar;
    struct VIapp *next;
};

struct VIstrings
{
    char *string;
    int length;
};

struct VIstatusbar
{
    HANDLE window;
    char *font_name;
    int fn_lng;
    int font_size;
    int weight;
    int italic;
    HFONT hfnt;
    char *template_name;
    char *description;
    int desc_lng;
    double height;
    int num_fields;
    int percentage[20];
    struct VIstrings *strings;
};

struct VItoolbar
{
    HANDLE window;
    char *template_name;
    char *description;
    int desc_lng;
    double height;
    char *script;
    int scr_lng;
    int (*tb_callback)();    
    struct VItoolbar_item *items;
};

struct VItoolbar_item
{
    HANDLE window;
    double x, y, width, height;    
    char *off_bitmap, *on_bitmap, *disabled_bitmap;
    int off_lng, on_lng, disabled_lng;
    HBITMAP hoff_bitmap, hon_bitmap, hdisabled_bitmap;
    char *script;
    int scr_lng;
    char *pre_script;
    int pre_scr_lng;
    int label;
    int active;
    int state;
    int mode;
#ifdef _MAC_
    Rect rc;
#endif
    struct VItoolbar_item *next;
};

struct VIpalette {
    HMENU menu;
    char *template_name;
    char *description;
    int desc_lng;
    char *title;
    int tit_lng;
    char *script;
    int scr_lng;
    char *i_script;
    int i_scr_lng;
    int index;
    int label;
    int level;
    struct VIcommand *commands;
    struct VIpalette *next;
};

struct VIcommand {
    char *text;
    int text_lng;
    int label;
    char *script;
    int scr_lng;
    char *palette;
    int pal_lng;
    int index;
    char *acc_text;
    int acc_text_lng;
    int acc_key;
    struct VIcommand *next;
};

struct VIbitmap
{
    char *name;
    PBITMAPINFO pbmi;
#ifdef _MAC_
	PixMapHandle pmh;
#endif
    char *data;
};

struct Dmrs_link { 
  unsigned long type:8, class:4, user:1, modified:1, remote:1, info:1;
  short entity;
  unsigned long mslink; };

#endif
#endif
