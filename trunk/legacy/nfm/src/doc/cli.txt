Changes to the command line interface (CLI) for I/NFM 3.2
 
I/NFM 3.2 includes several enhancements to the Command Line Interface.
These changes include:
 
    The ability to list items to a specified file
    
    The ability to save defaults to a file and use a default
      file other than cli_defaults
 
    The ability to add items
 
    The ability to abbreviate commands and variable names
 
    Working area creation/selection
 
New commands:
 
  List_Items
 
    Creates a list of items from the active catalog 
 
  Add_Item
 
    This command allows a user to create a new item in the active 
    catalog.
 
  Save
 
    This command saves the current active settings to a file where
    it can be used as defaults in a future session.
 
New command settings:
 
  List_Item_File
 
    Name of file that will be created for List_Item information
 
  Add_Item_File
 
    Name of the file with attribute information used by the 
    Add_Item command.
 
  Defaults_File
 
    Name of the defaults file that has information that can be 
    used by the CLI. 
 
List Item 
 
  The List_Items command creates a list of items from the active catalog 
  and puts it into the file indicated by List_Item_File. The list is not 
  formatted, and it is left to the user to extract the needed information 
  and format as desired.

Save Defaults/Use Defaults
 
  A "Save" option has been added. This does the following:
 
  - if Save is done and there is a defaults_file defined, the settings
    will go to the defaults_file
  - if Save is done and there is no defaults_file defined, the settings
    will go to the cli_defaults file (overwriting if necessary)
 
  A new command line option (-b) has been added that allows the user
  to specify which file should be used as the defaults file. The 
  cli_defaults file will be used if present in the current directory
  and if there is no command line option (-b) to indicate another 
  defaults file.
  
Add Item Command
 
o The following variables are definable in Add_Item
 
    itemname 
    revision 
    description 
    versionlimit 
    acl
    localfile 
    filetype 
    storagearea 
    internalfile
 
o The ability to have some values that are specified globally has been 
  added. If there is a file named "ai_defaults" in the current directory,
  the software will use these values when adding items.  (Note:  This file
  must be created by the user--it is not created automatically.)
 
o Variable values are determined by the following (in order of precedence):
 
  - defaults defined in the active catalog 
  - variables declared in the cli (itemname, revision)
  - variables declared in an ai_defaults file
  - variables declared in the Add_Item_File
 
  When the Add_Item command is issued, the software: 
 
  - uses the active catalog to retrieve default values (which do NOT 
    overwrite the itemname or revision if defined) 
  - reads the ai_defaults file (if present in the current directory) and
    uses any variables found there (overwrites existing values)
  - uses the Add_Item_File to obtain any additional values needed 
    (overwritting any existing values)
  - executes the Add Item command using the defined attribute values
 
o The Add_Item command may be run in three ways
 
  - batch mode 
    
    Where the cli session is executed from the operating system 
    environment with no interaction while within the session. To 
    execute in batch mode:
 
    From the operating system environment execute the CLI with the
    appropriate parameters either on the command line or in the 
    defaults file. From within the command file specify the 
    Add_Item_File that contains the information needed and specify
    the Add_Item command.
 
    Ex. $ /usr/ip32/nfm/bin/Nfmcli -e env1 -s serv1 -u user -p pw -f cf
 
    contents of cf
       Catalog: cat1
       Add_Item_File: add_file
       Add_Item:
 
    contents of add_file
    (***NOTE:  Can only specify information for ONE item to be added per
     file.  Cannot specify information for multiple items in the same file.
     Can do several files and call them all in the command file to
     add more than one item at a time.)
 
       Itemname: item1
       Version: a
       Description: This is item1
       Localfile: file1
       Acl: NFM_ITEM_ACL       (***NOTE: Must be ACL NAME, not ACL number)
       Storagearea: NFM_FILES  (***NOTE: Must be NAME, not storagearea 
                                number, & name must be keyed in exactly 
                                as it appears in the database, all capitals,
                                all lowercase, or mixed.)

  - batch within an interactive session
 
    Where the Add Item command is executed from within the interactive
    CLI session and the Add_Item_File is defined. When the 
    Add_Item_File is defined, the software uses the information in 
    the Add_Item_File (and the ai_defaults file if available) to 
    execute the command. The item is added to the active catalog.
 
    For example, from within the interactive mode of the CLI, a 
    user might give the following:
 
       Catalog: cat1
       Add_Item_File: add_file
       Add_Item:
 
    The software would use add_file to get the information needed
    to add the item to cat1.
 
  - interactively
 
    If there is no Add_Item_File defined when the user specifies
    Add_Item while in interactive mode, a special Add Item mode
    is entered. From within the Add Item mode, variables may be
    declared and four commands are available; Show, Quit, Exit and
    Process.
 
    Show - Show returns the current values for the attributes
    Quit - Quit returns the user to the CLI interactive mode
      without attempting to Add the item
    Exit - Exit executes the Add Item command based on the
      values currently defined and returns the user to the 
      CLI interactive mode
      (***NOTE: If the Add Item fails, 'Exit' will error and does NOT
       exit the interactive mode.  Must use 'Quit' to get out after error.) 
    Process - Process executes the Add Item command based on the 
      values currently defined and leaves the user in 
      Add Item mode with the variables unchanged
    
o Miscellaneous
 
  - After an Add_Item command is executed, if the command is successful, 
    the new item will be active.
  - Add_Item does not allow the definition of user-defined attributes. If
    the catalog has default values for the user-defined attributes,
    however, the values will be added when the item is added. If a
    user-defined attribute does not allow nulls (is mandatory) and 
    default values are not supplied, add item will fail.
  - If Add_Item fails in interactive mode, the user will be left in 
    Add_Item mode even if an Exit was issued. Attribute values will
    still be available.
 
Command and Attribute Abbreviations
 
  The user can key in enough of a string to identify the data/command 
  uniquely or use abbreviated strings for active data/commands. The 
  following lists all commands and attributes along with abbreviations
  (in parantheses).
 
  Data
    server 
    environment 
    username 
    password 
    itemname 
    revision 
    search_name 
    sort_name 
    workingarea 
    catalog 
    list_item_file (lif)
    add_item_file (aif)
    defaults_file (df)
 
  Commands
    connect 
    disconnect 
    login
    logout 
    add_item 
    list_items
    checkin_item (cii)
    checkin_set (cis)
    checkout_item (coi)
    checkout_set (cos)
    copy_item_files (cif) 
    copy_set_files (csf) 
    cancel_item_checkout (cico)
    cancel_set_checkout (csco)
    flag_item_archive (fia)
    flag_item_backup (fib)
    flag_item_restore (fir)
    flag_set_archive (fsa)
    flag_set_backup (fsb)
    flag_set_restore (fsr)
    cancel_item_archive (cia)
    cancel_item_backup (cib)
    cancel_item_restore (cir)
    cancel_set_archive (csa)
    cancel_set_backup (csb)
    cancel_set_restore (csr)
 
  Misc
    show
    save
    help
    stop
 
  Add Item Mode attributes
    catalog 
    itemname 
    revision 
    description 
    versionlimit 
    acl
    localfile (lfile)
    filetype (type)
    storagearea (sa)
    internalfile (ifile)
        
  Add Item Mode commands
    show
    process
    exit
    quit
 
Working Area Creation/Selection
 
  The current directory will automatically be the active working area
  after a command is executed if no working area is defined. If the 
  current directory is not already a valid I/NFM working area, the 
  software will create the working area in I/NFM (consistent with other
  I/NFM interfaces).
 
Changes to Existing Commands (note: old commands will still work - see
information on command abbreviations):
 
  Copy_Item has become Copy_Item_Files
  Copy_Set has become Copy_Set_Files
 
 
 
