/* Do not alter this SPC information: $Revision: 1.1.53.1 $ */
/*
**	NAME:							uldgtspc.rc
**	AUTHORS:						Jennifer Xia
**	CREATION DATE:					7/90
**	ABSTRACT:
**		It contains a function which fetches a token from either
**		a command line or specification file. Tokens are
**		processed and identified by another function in this file.
**	
**	REVISION HISTORY:
**		August 6th, 1991 Hitesh Patel
*/
 
/*
**	DEFINES
*/

/*
**	INCLUDES
*/
#ifdef MM
#include "unlod.h"
#endif

exec sql include "unlod.h";

/*
**	VARIABLES
*/

/*
**	FUNCTIONS
*/

/*
**      FUNCTION PROTOTYPES
*/
#define uldgtspc_rc
#include "sys.prt"
#include "comdebug.prt"
#include "comjmp.prt"
#include "comumsg.prt"
#include "uldermsg.prt"
#include "uldgtspc.prt"
#include "uldmisc.prt"
#include "uldtime.prt"


extern int RISuld_fetch_token(
	int		argc,
	char	*argv[],
	FILE	*spec_fp,
	char	*token_buf)
{
	static  int	argi = 1;
	char where_buffer[SQL_MAX_STMT_LEN];

	ULD_DBG(("RISuld_fetch_token: argc %d argv 0x%x spec_fp 0x%x token_buf 0x%x\n", 
						argc, argv, spec_fp, token_buf));

	if (spec_fp == NULL)
	{
		if (argi >= argc)
		{
			ULD_DBG(("1. RISuld_fetch_token: NO_MORE_SPEC found\n"));
			return(NO_MORE_SPEC);
		}	

		if (strlen(argv[argi]) > (RIS_MAX_PATH_SIZE + 1))
		{
			RISuld_unload_err_handler(RISUTL_E_INVALID_PATH_SIZE);
			TERMINATE_RISUNLOAD
		}

		strcpy(token_buf, argv[argi]);
		argi++;
	}
	else
	{
		if (fscanf(spec_fp, "%259s", token_buf) == EOF)
		{
			ULD_DBG(("2. RISuld_fetch_token: END_OF_SPEC_FILE found\n"));
			return(END_OF_SPEC_FILE);
		}
		else
		{
			if( token_buf[0] == '"' )
			{
				if( fscanf(spec_fp,"%[^\"]",where_buffer) == EOF )
				{
					RISuld_unload_err_handler(RISUTL_E_UNTERMINATED_WHERE_CLAUSE);
					TERMINATE_RISUNLOAD
				}
				else
				{
					strcat(token_buf,where_buffer);
					fscanf(spec_fp,"%s",where_buffer); /* to get ride of closing '"' */
				}
			}
		}
	}
		
	ULD_DBG(("3. RISuld_fetch_token: returning token: %s\n",token_buf));
	return(SUCCESS);
}


extern int RISuld_fetch_analyze_spec(
	int			argc,
	char		*argv[],
	FILE		*spec_fp,
	char		*token_buf)
{

	static  int			num_token_from_spec = 0;
	static  short int	expect_sch_token = FALSE;
	int					token_type;
	int					retn;
	unsigned int		char_indx;

	ULD_DBG(("RISuld_fetch_analyze_spec: argc %d argv 0x%x spec_fp 0x%x token_buf 0x%x\n", 
						argc, argv, spec_fp, token_buf));

	if (spec_fp != 0)
		num_token_from_spec++;

	token_type = RISuld_fetch_token(argc, argv, spec_fp, token_buf);

	if ((token_type == NO_MORE_SPEC) || (token_type == END_OF_SPEC_FILE))
	{
		ULD_DBG(("1. RISuld_fetch_analyze_spec: end\n"));
		return(token_type);
	}

	if ((spec_fp != NULL) && expect_sch_token)
	{
		expect_sch_token = FALSE;

		ULD_DBG(("2. RISuld_fetch_analyze_spec: end\n"));
		return(SCHEMA);
	}

	/* Are we reading from a spec file? */
	if (spec_fp != NULL)
	{
		if (token_buf[0] == ';')
		{
			if (token_buf[1] == '\0')
			{
				if (RISuld_fetch_token(argc, argv, spec_fp, token_buf) == NO_MORE_SPEC)
				{
					ULD_DBG(("3. RISuld_fetch_analyze_spec: end\n"));
					return(NO_MORE_SPEC);
				}
				else
				{
					ULD_DBG(("4. RISuld_fetch_analyze_spec: end\n"));
					return(SCHEMA);
				}
			}
			else
			{
				for(char_indx = 0; char_indx < strlen(token_buf); char_indx++)
					token_buf[char_indx] = token_buf[char_indx + 1];

				ULD_DBG(("5. RISuld_fetch_analyze_spec: end\n"));
				return(SCHEMA);
			}
		}
		else if (token_buf[strlen(token_buf) - 1] == ';')
		{	
			token_buf[strlen(token_buf) - 1] = '\0';

			expect_sch_token = TRUE;
		}
	}

	if (RISuld_strcmp(token_buf, "osuser") == 0)
	{
		ULD_DBG(("5.5a. RISuld_fetch_analyze_spec: end\n"));
		return(OSUSER);
	}
	if (RISuld_strcmp(token_buf, "user") == 0)
	{
		ULD_DBG(("5.5b. RISuld_fetch_analyze_spec: end\n"));
		return(USER);
	}
	if (RISuld_strcmp(token_buf, "table") == 0)
	{
		ULD_DBG(("6. RISuld_fetch_analyze_spec: end\n"));
		return(TABLE);
	}
	if (RISuld_strcmp(token_buf, "index") == 0)
	{
		ULD_DBG(("7. RISuld_fetch_analyze_spec: end\n"));
		return(INDEX);
	}
	else if (RISuld_strcmp(token_buf, "view") == 0)
	{
		ULD_DBG(("8. RISuld_fetch_analyze_spec: end\n"));
		return(VIEW);
	}
	else if (RISuld_strcmp(token_buf, "grant") == 0)
	{
		ULD_DBG(("9. RISuld_fetch_analyze_spec: end\n"));
		return(GRANT);
	}
	else if (RISuld_strcmp(token_buf, "all") == 0)
	{
		ULD_DBG(("10. RISuld_fetch_analyze_spec: end\n"));
		return(EVERY_THING);
	}
	else if (RISuld_strcmp(token_buf, "with") == 0)
	{
		ULD_DBG(("11. RISuld_fetch_analyze_spec: end\n"));
		return(WITH);
	}
	else if (RISuld_strcmp(token_buf, "dfile") == 0) 
	{
		ULD_DBG(("12. RISuld_fetch_analyze_spec: end\n"));
		return(DFILE);
	}
	else if (RISuld_strcmp(token_buf, "var") == 0) 
	{
		ULD_DBG(("12. RISuld_fetch_analyze_spec: end\n"));
		return(VAR);
	}
	else if (RISuld_strcmp(token_buf, "data") == 0) 
	{
		ULD_DBG(("13. RISuld_fetch_analyze_spec: end\n"));
		return(DATA);
	}
	else if (RISuld_strcmp(token_buf, "join") == 0) 
	{
		ULD_DBG(("13. RISuld_fetch_analyze_spec: end\n"));
		return(JOIN);
	}
	else if (RISuld_strcmp(token_buf, "where") == 0) 
	{
		ULD_DBG(("13. RISuld_fetch_analyze_spec: end\n"));
		return(WHERE);
	}
	else if ((spec_fp != NULL) && (token_buf[0] == '"'))
	{
		ULD_DBG(("13(new). RISuld_fetch_analyze_spec: end\n"));
		return(WHERE_OPTION);
	}

#if defined(DOS)
#pragma offwarn(257)
#endif
	if(	((strcmp(token_buf, "-g") == 0) && (retn = DEBUG_FLAG))  ||
		((strcmp(token_buf, "-p") == 0) && (retn = PRESERVE_BLANKS)) )
#if defined(DOS)
#pragma popwarn
#endif
	{
		if (spec_fp != NULL)
		{
			RISuld_unload_err_handler(RISUTL_E_ARGU_NOT_ALLOWED);
			TERMINATE_RISUNLOAD
		}
		/* 
		**	no additional arguments
		*/
		
		ULD_DBG(("16. RISuld_fetch_analyze_spec: end\n"));
		return(retn);
	}
		

#if defined(DOS)
#pragma offwarn(257)
#endif
	if(	
		((strcmp(token_buf, "-f") == 0) && (retn = SPEC_FILE))		||
		((strcmp(token_buf, "-m") == 0) && (retn = FILE_MODE))		|| 
		((strcmp(token_buf, "-o") == 0) && (retn = MAIN_FILE))		|| 
		((strcmp(token_buf, "-s") == 0) && (retn = SCHEMA)) 
	  )
#if defined(DOS)
#pragma popwarn
#endif
	{
		if (spec_fp != NULL)
		{
			RISuld_unload_err_handler(RISUTL_E_ARGU_NOT_ALLOWED);
			TERMINATE_RISUNLOAD
		}
		
		if (RISuld_fetch_token(argc, argv, spec_fp, token_buf) == NO_MORE_SPEC)
		{
			ULD_DBG(("14. RISuld_fetch_analyze_spec: end\n"));
			return(NO_MORE_SPEC);
		}

		if(	(strcmp(token_buf, "-f") == 0)	||
			(strcmp(token_buf, "-g") == 0)	||
			(strcmp(token_buf, "-m") == 0)	||
			(strcmp(token_buf, "-o") == 0)	||
			(strcmp(token_buf, "-s") == 0)	||
			(strcmp(token_buf, "-p") == 0)	)
		{
			RISuld_parse_err_handler(RISUTL_E_INVALID_IDENTIFIER);
			TERMINATE_RISUNLOAD
		}

		ULD_DBG(("15. RISuld_fetch_analyze_spec: end\n"));
		return(retn);
	}


#if defined(DOS)
#pragma offwarn(257)
#endif
	if(	
		((strncmp(token_buf, "-f", 2) == 0) && (retn = SPEC_FILE))		||
		((strncmp(token_buf, "-m", 2) == 0) && (retn = FILE_MODE)) 		||
		((strncmp(token_buf, "-o", 2) == 0) && (retn = MAIN_FILE)) 		||
		((strncmp(token_buf, "-s", 2) == 0) && (retn = SCHEMA))
	  )
#if defined(DOS)
#pragma popwarn
#endif
	{
		if (spec_fp != NULL)
		{
			RISuld_unload_err_handler(RISUTL_E_ARGU_NOT_ALLOWED);
			TERMINATE_RISUNLOAD
		}
		
		for (char_indx = 0; char_indx < strlen(token_buf) - 1; char_indx++)
			token_buf[char_indx] = token_buf[char_indx + 2];

		if(	(strcmp(token_buf, "-f") == 0)	||
			(strcmp(token_buf, "-g") == 0)	||
			(strcmp(token_buf, "-m") == 0)	||
			(strcmp(token_buf, "-o") == 0)	||
			(strcmp(token_buf, "-s") == 0)	||
			(strcmp(token_buf, "-p") == 0)	)
		{
			RISuld_parse_err_handler(RISUTL_E_INVALID_IDENTIFIER);
			TERMINATE_RISUNLOAD
		}

		ULD_DBG(("17. RISuld_fetch_analyze_spec: end\n"));
		return(retn);
	}


	if (num_token_from_spec == 1)
	{
		ULD_DBG(("18. RISuld_fetch_analyze_spec: end\n"));
		return(SCHEMA);
	}
	else if (token_buf[0] == '.')
	{
		ULD_DBG(("19. RISuld_fetch_analyze_spec: end\n"));
		return(PASSWORD);
	}
	else
	{
		ULD_DBG(("20. RISuld_fetch_analyze_spec: end\n"));
		return(RELATION_NAME);
	}
}
