/* Do not alter this SPC information: $Revision: 1.7.8.1 $ */
/*
** WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
**
**     This structure is used for searching.  
**     The keywords must be in ascii order!!!!!!!
**
**
** WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
*/

/*******************************************************************************/
/*  Keywords unique to ADABAS were commented out.  ADABAS is not yet supported */
/*  TR# 439502878                         GBF 8/7/95                           */
/*  TR# 439503899 - all references to Adabas and SQL/DS have taken out - mms 11/7/95 */
/*******************************************************************************/

#define MAX_MSG_SIZE	512

#define X	RIS_ENABLE_INFORMIX
#define O	RIS_ENABLE_ORACLE
#define I	RIS_ENABLE_INGRES
#define D	RIS_ENABLE_DB2
#define R	RIS_ENABLE_RDB
#define Y	RIS_ENABLE_SYBASE
#define M	RIS_ENABLE_MSSQL
#define S	RIS_ENABLE_SQLDS
#define A	RIS_ENABLE_ADABAS
#define _4	RIS_ENABLE_OS400
#define Z	RIS_ENABLE_RIS

struct Keyword
{
	char *keyword;
	unsigned int dbms;
};

struct Key_Error
{
	struct Key_Error *left;
	struct Key_Error *right;
	unsigned int dbms;
	char keywords[MAX_MSG_SIZE];
};

static struct Keyword keywords[] =
{
{"$channel",					M },
{"$curfield",					M },
{"$curform",					M },
{"$curgroup",					M },
{"$curpick",					M },
{"$date",						M },
{"$index",						M },
{"$status",						M },
{"abm",							R },
{"abort",						I|M },
/* {"absolute",					A },  */
{"access",						O|R },
{"acl",							R },
/* {"acquire",						S }, */
{"activate",					I },
{"add",				 			D|I|O|Z|M|Y },
{"addform",						I },
{"adjustable",					R },
{"admin",						O },
{"after",						R|O },
{"aip_entries",					R },
{"alength",						R },
{"all",				 			D|I|O|R|_4|Z|M|Y },
{"allocate",					O },
{"allocation",					R },
{"allowed",						R },
{"alter",						D|I|O|Z|M|Y },
{"alter group",					I },
{"alter role",					I },
{"analyze",						R|O },
{"aname",						R },
{"and",				 			D|I|O|R|_4|Z|M|Y },
{"ansi",						Z },
{"any",				 			D|I|O|R|_4|Z|M|Y },
{"append",			 			I|M },
{"apt",				 			M },
{"arith_overflow",				Y },
{"arch",					 	Z },
{"archive",				 		O },
{"archivelog",				 	O },
{"area",						R },
{"areas",						R },
{"as",							D|I|O|_4|Z|M|Y },
{"asc",				 			I|O|R|Z|M|Y },
{"ascending",					R },
{"ascii",						R },
{"async",						Z},
{"at",							I|R|M|Y },
{"attach",						R },
{"audit",						D|O|R },
{"authorization",				I|O|Z|Y },
{"auto",						Z },
{"auto_locking",				R },
{"autocommit",					Z },
{"automatic",					R },
{"autorename",					Z },
{"average",				 		R },
{"avg",				 			I|Z|M|O|Y },
{"avgu",			 			I },
{"backtab",						M },
{"backup",						O },
{"based",						R },
{"batch_update",				R },
{"become",						O },
{"before",						R|O },
{"begin",						O|I|Z|M|Y },
{"begin declare",				I },
{"begin transaction",			I },
{"between",				 		D|I|O|R|_4|Z|M|Y },
{"binary",						M },
{"bit",							M },
{"blank",						Z },
{"blr",							R },
{"body",						O },
/* {"both",						A }, */
{"break",						M|Y },
{"breakdisplay",				I },
{"browse",						M|Y },
{"buffer",						Z|R },
{"bufferpool",					D },
{"buffers",						R },
{"bulk",						M|Y },
{"by",							D|I|O|R|_4|Z|M|Y },
{"byte",						R },
{"cache",						O },
{"call",						I|M },
{"callextern",					M },
{"callform",					M },
{"callreport",					M },
{"cancel",						O },
{"cancelform",					M },
{"cardinality",					R },
{"cascade",						O|Y },
{"case",						M },
{"cdd_links",					R },
{"change",						R|O },
{"channel",						M },
{"char",						O|Z|M },
{"char_convert",				Y },
{"character",					O|Z },
{"charindex",					M },
{"check",						O|I|R|Y },
{"checkpoint",					M|O|Y },
{"checksum",					R },
{"clear",						I|Z },
{"clearrow",					I },
{"close",						I|O|R|Z|Y },
{"close cursor",				I },
{"closesql",					M },
{"cluster",				 		D|O|R },
{"clustered",			 		M|Y },
{"cobol",						O },
/* {"code",						A }, */
{"collating_sequence",			R },
{"collection",					_4 },
{"column",						D|O|I|_4 },
{"command",			 			R|I },
{"comment",			 			O },
{"commit",						I|O|R|Z|M|Y },
{"commit_time",					R },
{"compile",						O },
{"compiletime",					R },
{"completion",					Z },
{"compress",					O },
{"compression",					R },
{"compute",						M|Y },
{"computed",					R },
{"concurrency",					R },
/* {"cond_name",					A }, */
{"confirm",			 			M|Y },
{"connect",			 			Z|I|M|O },
{"consistency",					R },
{"consistent",					R },
{"const",						Z },
{"constraint",					O|R|Y },
{"constraints",					R|O },
{"cont",						R },
{"containing",					R },
{"contents",					O },
{"continue",					O|I|Z|M|Y },
{"controlfile",				 	O },
{"controlrow",			 		M|Y },
{"convert",			 			R|M|Y },
{"copy",						I|R },
{"copy_database",				R },
{"corrupt",						R },
{"count",						D|O|I|R|_4|Z|M|Y },
{"countu",						I },
{"crash",						O },
{"create",						I|O|Z|M|Y },
{"create dbevent",				I },
{"create group",				I },
{"create link",					I },
{"create role",					I },
{"create rule",					I },
{"create_segmented_string",		R },
/* {"createtab",					A }, */
{"cross",						R },
{"curindex",			 		M },
{"cursqlindex",			 		M },
{"current",			 			D|I|O|_4|Y },
{"current_timestamp",	 		Z },
{"cursor",						D|I|O|_4|Z|Y },
{"cycle",						O },
/* {"cypher",						A }, */
{"data",						R },
{"data_pgs",					Y },
{"database",					D|O|R|_4|Z|M|Y },
{"databases",					R },
{"datafile",					O },
{"datalength",					M },
{"datatype",					R },
{"date",						O|R },
{"date_format",					R },
{"datename",					M },
{"datepart",					M },
{"datetime",					Z|M },
{"day",			 				R },
{"db2",							Z },
{"db_handle",					R },
{"dba",			 				O },
/* {"dbaspace",					S }, */
{"dbcc",						M|Y },
{"dbkey",						R },
{"dbname",						Z },
{"deallocate",					Y },
{"dec",			 				O|Z },
{"decimal",			 			O|R|Z },
{"declare",			 			I|O|Z|M|Y },
{"declare cursor",				I },
{"declare_stream",				R },
{"default",			 			O|R|Z|M|Y },
{"default_value",				R },
{"defaults",					R },
{"deferred",					R },
{"define",						I|R|Z|M },
{"define cursor",				I },
{"define integrity",			I },
{"define link",					I },
{"define location",				I },
{"define permit",				I },
{"define qry",					I },
{"define query",				I },
{"define view",					I },
{"definition",					R },
{"delete",						D|I|O|R|_4|Z|M|Y },
{"delete cursor",				I },
{"deleterow",					I },
{"deletion",					R },
{"deposit",						R },
{"desc",					I|O|R|Z|M|Y },
{"descending",					R|X },
{"describe",					I },
{"describe form",				I },
{"describe",					I|Z },
{"description",					R },
{"descriptor",					D|I|_4|Z },
{"destroy",						I },
{"destroy integrity",			I },
{"destroy link",				I },
{"destroy permit",				I },
{"destroy table",				I },
{"detach",						R },
{"dictionary",					R },
{"dir",							Z },
{"direct",						I },
{"direct connect",				I },
{"direct disconnect",			I },
{"direct execute",				I },
{"disable",						R|O },
{"disabled",					R },
{"disconnect",					I|M },
{"disk",						M|Y },
{"dismount",					O },
{"display",			 			I|R },
{"distinct",					D|I|O|_4|Z|M|Y },
{"dnp",							Z },
{"do",							I },
{"double",						O|Z|Y },
{"down",						I },
{"drop",						D|I|O|Z|M|Y },
{"drop dbevent",				I },
{"drop group",					I },
{"drop link",					I },
{"drop role",					I },
{"drop rule",					I },
{"dummy",						M|Y },
{"dump",						M|O|Y },
{"duplicates",					R },
{"each",						R|O },
{"edit_string",					R },
{"editproc",					D },
{"else",						I|Z|M|O|Y },
{"elseif",						I },
{"enable",						R|Z|O },
{"enabled",						R },
{"end",			 				I|O|R|Z|M|Y },
{"end transaction",			 	I },
{"end_error",					R },
{"end_fetch",					R },
{"end_for",						R },
{"end_get",						R },
{"end_modify",					R },
{"end_place",					R },
{"end_segmented_string",		R },
{"end_store",					R },
{"end_stream",					R },
{"enddata",						I },
{"enddisplay",					I },
{"endforms",					I },
{"endif",						I|Z },
{"endloop",			 			I },
{"endselect",					I },
{"endtran",						Y },
{"endwhile",					I },
{"enter",						M },
{"entry",						R|M },
{"env",							Z },
/* {"eof",							A }, */
{"epilogue",					R },
{"eq",							R },
{"erase",						D|R },
{"errlvl",						M|Y },
{"error",						R|Z },
{"errorexit",					M|Y },
{"escape",						I|O|Y },
{"evaluating",					R },
{"events",						O },
{"every",						R },
{"except",						M|O|Y },
{"exceptions",					O },
{"exclude",						Z },
{"exclusive",					O|R|Z },
{"exec",						O|Z|M|Y },
{"execute",				 		D|I|O|R|_4|Z|M|Y },
{"exists",						D|I|O|_4|Z|M|Y },
{"exit",						I|R|M|Y },
{"exitform",					M },
{"exp",			 				M },
{"explain",				 		O },
{"export",						R },
{"extensions",					R },
{"extent",						R|O },
{"extern",						Z },
{"external",					R },
{"externally",					O },
{"extraction",					R },
{"f_floating",					R },
{"false",						M },
{"fetch",						O|I|R|Z|Y },
{"fetchsql",					M },
{"field",						I|R|M },
{"fieldproc",					D },
{"fields",						R },
{"file",						O|R },
{"filename",					R },
{"fill",						R },
{"fillfactor",					M|Y },
{"finalize",					I },
{"finish",						R },
{"first",						R },
/*{"fixed",						A }, */
{"float",						O|Z|M },
{"flush",						O },
{"for",				 			D|I|O|R|_4|Z|M|Y },
{"for deferred",				I },
{"for direct",				 	I },
{"for readonly",				I },
{"for update",				 	I },
{"force",			 			Z|O },
{"foreach",				 		M },
{"foreign",				 		O|R|Y },
{"form",						M },
{"format",						R },
{"formdata",					I },
{"forminit",					I },
{"forms",						I },
{"fortran",				 		O },
{"found",						O|Z },
{"free_space",					R },
{"freelist",					O },
{"freelists",					O },
{"friday",						R },
{"from",						D|I|O|R|_4|Z|M|Y },
{"from group",					I },
{"from role",					I },
{"from user",					I },
{"full",						Z },
{"function",					O },
{"g_floating",					R },
{"gateway",						Z },
{"ge",							R },
{"get",							R },
{"getform",						I },
{"getoper",						I },
{"getrow",						I },
{"global",			 			R },
{"global_transaction",			R },
{"go",							D|O|_4|Z },
{"goto",						D|O|I|_4|Z|M|Y },
{"grant",						D|I|O|Z|M|Y },
{"granularity",					R },
{"graphic",			 			O },
{"group",						D|I|O|_4|Z|M|Y },
{"groups",						O },
{"growth",						R },
{"gt",							R },
{"hashed",						R },
{"having",						D|I|O|_4|Z|M|Y },
{"header",						R },
{"help",						I|R },
{"help integrity",				I },
{"help permit",					I },
{"help view",					I },
{"help_frs",					I },
{"helpfile",					I },
{"hexadecimal",					R },
{"hidden",						M },
{"holdlock",					M|Y },
{"host_lu",						Z },
{"host_program",				Z },
{"identified",					O|I },
{"identifier",					R },
{"identity",					Y },
{"identity_insert",				Y },
{"if",							I|O|R|M|Y },
{"ifdef",						Z },
{"ifndef",						Z },
{"image",						M },
{"immediate",					D|I|O|R|_4|Z },
{"import",						R },
{"in",							D|I|O|R|_4|Z|M|Y },
{"include",			 			I|Z },
{"including",					O },
{"inconsistent",				R },
{"increment",					O },
{"index",						D|I|O|R|_4|Z|M|Y },
/*{"indexed",			 			A }, */
{"indexes",						R },
{"indicator",					O|I|Z },
{"indices",						R },
{"informix",					Z },
{"ingres",			 			I|Z },
{"initial",			 			Z|O },
{"initialize",					I },
{"initrans",					O },
{"inittable",					I },
{"input",						Z },
{"inquire_equel",				I },
{"inquire_frs",					I },
{"inquire_ingres",				I },
{"insert",						D|I|O|_4|Z|M|Y },
{"insertrow",					I },
{"instance",					O },
{"int",			 				O|Z|M },
{"integer",			 			O|Z },
{"integrate",					R },
{"integrity",					I },
{"interruptsql",				M },
{"intersect",					O|M|Y },
{"interval",					Z|R },
{"into",						D|I|O|R|_4|Z|M|Y },
{"inuse",						R },
{"invoke",						R },
{"is",							D|I|O|R|_4|Z|M|Y },
{"is null",						I },
{"isolation",					Y },
{"journal",						R },
{"keep",						R },
/*{"keeping",						A },*/
{"key",			 				D|O|R|Y },
{"kill",			 			M|Y },
/*{"labels",						A },*/
{"lable",						R },
{"language",					O|R },
/*{"last",						A },*/
{"layer",						O },
{"le",							R },
{"length",						R },
{"level",						O|Y },
{"like",						D|I|O|_4|Z|M|Y },
{"limit",						R },
{"line",						R },
{"lineno",						M|Y },
{"link",						O },
{"list",						M },
{"lists",						O },
{"load",						M|Y },
{"loadtable",					I },
{"local",						R },
{"lock",						O|R|Z },
{"locked_free_space",			R },
{"locks",						R },
{"locksize",					D },
{"log",							R|M },
{"logfile",			 			O },
{"logical_area",				R },
{"long",						O|Z },
{"longword",					R },
{"lower",						M },
{"lt",							R },
{"make_consistent",				R },
{"manage",						O },
{"manual",						R|O },
{"map",							R },
{"matching",					R },
{"max",			 				I|R|Z|M|O|Y },
{"maxdatafiles",				O },
{"maxextents",					O },
{"maximum",						R },
{"maxinstances",				O },
{"maxlogfiles",				 	O },
{"maxloghistory",			 	O },
{"maxlogmembers",			 	O },
{"maxtrans",					O },
{"maxvalue",					O },
{"mchoice",			 			M },
{"menu",						M },
{"menubar",						M },
{"menuitem",					I },
{"message",				 		I },
{"min",			 				I|R|Z|M|O|Y },
{"minextents",					O },
{"minimum",						R },
{"minus",						O },
{"minvalue",					O },
{"mirror",						Y },
{"mirrorexit",					M|Y },
{"missing",						R },
{"missing_value",				R },
{"mixed",						R },
{"mode",						O|Z },
{"modify",						I|O|R|Z },
{"module",						O },
{"monday",						R },
{"money",						M },
{"monitor",						R },
{"month",						R },
{"mount",						O },
{"move",						R },
{"move_area",					R },
/* {"named",						S }, */ 
/*{"names",						A },*/
{"national",					Y },
{"ne",							R },
{"net_protocol",			 	Z },
{"network",					 	Z },
{"new",				 			R|O },
{"next",						O|I },
{"next_aip",					R },
{"nextquery",					M },
/* {"nheader",						S }, */
{"no",							R },
{"noacl",						R },
{"noarchivelog",				O },
{"noaudit",				 		O },
{"noauto_locking",				R },
{"nocache",				 		O },
{"nocdd_links",					R },
{"nocompress",					O },
{"nocycle",				 		O },
{"node",						R|Z },
{"nodes",						R },
{"noepilogue",					R },
{"noexecute",					R },
{"noextensions",				R },
{"noholdlock",					Y },
{"nojournal",					R },
{"nokeep",						R },
{"nolog",						R },
{"nomaxvalue",					O },
{"nominvalue",					O },
{"nomsg",						M },
{"nonclustered",				M|Y },
{"none",						O },
{"noopen",						R },
{"noorder",				 		O },
{"nooutput",					R },
{"noprologue",					R },
{"noresetlogs",					O },
{"normal",						O },
{"nosort",						O },
{"not",			 				D|I|O|R|_4|Z|M|Y },
{"notrace",						R },
{"notrim",						I },
{"noverify",					R },
{"now",			 				R },
{"nowait",						O|R },
{"nt",			 				Z },
{"null",						D|I|O|_4|Z|M|Y },
{"number",						O|R },
{"numeric",				 		O },
{"numeric_transaction",			Y },
{"numparts",					D },
{"of",							D|I|O|R|_4|Y },
{"off",			 				Z|M|O|Y },
{"offline",				 		O },
{"offset",						R|M },
{"offsets",						Y },
{"old",			 				R|O },
{"on",							D|I|O|R|_4|Z|M|Y },
{"on database",					I },
{"on dbevent",					I },
{"once",						M|Y },
{"online",						O },
{"only",						O|Z|Y },
{"only where",					I },
{"open",						I|O|R|Z|Y },
{"open cursor",					I },
{"opensql",						M },
{"optimal",						O },
{"option",						I|O|Z|Y },
{"or",							D|I|O|R|_4|Z|M|Y },
{"oracle",						Z },
{"order",						D|I|O|_4|Z|M|Y },
{"order by",					I },
{"os",							Z },
{"os400",						Z },
{"ostype",						Z },
{"osuser",						Z },
{"out",			 				I },
{"output",						R|Z },
{"over",						R|M|Y },
{"own",							O },
{"package",						O },
/*{"packed",						A },*/
{"page",						R },
{"pages",						R },
{"parallel",					O },
{"param",						I },
{"parentname",					M },
{"part",						D },
{"partial",						Z },
{"pascal",						O },
{"password",					Z },
{"pathname",					R },
{"pctfree",				 		O },
{"pctincrease",				 	O },
/* {"pctindex",					S }, */
{"pctused",				 		O },
{"percent",				 		R },
{"perform",						M },
{"perm",						M|Y },
{"permanent",					M|Y },
{"permit",						I },
{"physical_area",				R },
{"pl1",			 				O },
{"pli",			 				O },
{"place",						R },
{"placement",					R },
{"plan",						D|M|O|Y },
{"port",						Z },
{"position",					R },
{"positionform",				M },
{"post",						M },
{"precision",					O|Z|Y },
/*
{"predict",						A },
{"prefix",						A },
*/
{"prepare",			 			I|R|Z|M|Y },
{"primary",			 			O|R|Z|Y },
{"print",						I|M|Y },
{"printform",			 		M },
{"printscreen",					I },
{"prior",						O },
{"priqty",						D },
{"private",						O },
{"privilege",					Z },
{"privileges",					Z|D|I|O|R|_4|Y },
{"proc",						M|Y },
{"procedure",					I|O|M|Y },
{"processexit",					M|Y },
{"profile",						O },
/* {"program",			 			S }, */
{"prologue",					R },
{"prompt",						I },
{"protected",					R },
{"protection",					R },
{"psect",						R },
{"public",						I|O|Z|M|Y },
{"purge",						R },
{"putform",						I },
{"putoper",						I },
{"putrow",						I },
{"quadword",					R },
{"query_header",				R },
{"query_name",					R },
{"radix",						R },
{"radix_point",					R },
{"raise dbevent",				I },
{"raise error",					I },
{"raiserror",					M|Y },
{"range",						I },
{"raw",			 				O },
{"rchoice",			 			M },
{"rdb",			 				Z },
{"read",						O|R|Y },
{"read_only",					R },
{"read_write",					R },
{"readtext",					M|Y },
{"ready",						R },
{"real",						O|R|Z },
{"reconfigure",					M|Y },
{"record",						R },
{"record_length",				R },
{"record_type",					R },
{"recover",			 			R|O },
{"recovery",					R },
{"redeclare",			 		Z },
{"redisplay",					I },
{"reduced",						R },
{"references",					O|R|Y },
{"referencing",					I|O },
{"refresh",						R },
{"register",					I|Z },
{"register dbevent",			I },
{"reinitialize",				R },
{"relation",					R },
{"relations",					R },
/*{"relative",					A },*/
{"release",			 			O },
{"relocate",					I },
{"remote",						Z },
{"remove",						I },
{"remove dbevent",				I },
{"rename",						O },
{"reorganize",					R },
{"repeat",						I },
{"repeated",					I },
{"replace",						Z|Y },
{"replace cursor",				I },
{"replication",					R },
{"report",						Z },
{"request_handle",				R },
{"require",						R },
{"required",					R },
{"reserved_pgs",				Y },
{"reserving",					R },
{"reset",						M },
{"resetlogs",					O },
{"resolve",						R },
{"resource",					Z|O },
{"response",					Z },
/*{"restrict",					A },*/
{"restricted",					O },
{"resume",						I },
{"retrieve",					I },
{"retrieve cursor",				I },
{"retry",						R },
{"return",						I|M|Y },
{"reuse",						O },
{"revoke",						I|O|Z|M|Y },
{"ris_blob",					Z },
{"ris_lu",						Z },
{"ris_text",					Z },
{"role",						O|Y },
{"roles",						O },
{"rollback",					I|O|R|Z|M|Y },
{"rollup",						R },
{"root",						R },
{"row",			 				O },
{"rows",			 			Y },
{"rowcount",			 		M|Y },
{"rowcnt",			 			Y },
{"rowid",						O },
{"rowlabel",					O },
{"rownum",						O },
{"rows",						O },
{"rule",			 			M|Y },
/* {"run",			 				S },*/
{"runtime",						R },
{"saturday",					R },
{"save",						I|M|Y },
{"savepoint",					I|O },
{"scale",						R },
{"schedule",					R },
{"schema",						O|Z|Y },
{"schoice",						M },
{"scn",							O },
{"scope",						R },
{"screen",						I },
{"scroll",						I|M },
{"scrolldown",					I },
{"scrollup",					I },
{"secondary",					Z },
{"secqty",						D },
{"section",			 			O|I|Z },
{"secure",			 			Z },
{"segment",			 			O },
{"segment_length",				R },
{"segmented",					R },
{"segments",					R },
{"select",						D|I|O|R|_4|Z|M|Y },
{"sequence",					O },
{"server",						Z },
{"session",			 			O },
{"set",			 				D|I|O|R|_4|Z|M|Y },
{"set_equel",					I },
{"set_frs",						I },
{"set_ingres",					I },
{"setuser",						M|Y },
{"share",						O|Z },
{"shared",						O|R|M|Y },
{"short",						Z },
/*{"short_name",					A },*/
{"show",						R },
{"shutdown",					M|Y },
{"signed",						R|Z },
{"size",						Z|O|R },
{"sleep",						I },
{"smallint",					O|Z|M },
{"snapshot",					R|O },
{"snapshot_filename",		 	R },
{"some",						D|I|O|_4|Z|Y },
{"sort",						I|O },
{"sorted",						R },
{"space",						R },
{"specification",				R },
{"specified",					O },
{"sql",			 				I|O|Z },
{"sqlbegin",			 		M },
{"sqlcode",			 			O|Z },
{"sqlda",						Z },
{"sqlds",					  	Z },
{"sqlend",						M },
{"sqlerror",					O|Z },
{"sqlexpr",						M },
{"sqlrow",						M },
{"start",						O|R },
{"start_segmented_string",		R },
{"start_stream",				R },
{"start_transaction",			R },
{"starting",					R },
{"statement",					O },
{"statement_id",				O },
{"static",						Z },
{"statistics",					R|M|O|Y },
{"status",						R },
{"stogroup",					D },
{"stop",						I|O },
{"storage",			 			O|R },
{"storage_area",				R },
{"store",						R },
/* {"storpool",			 		S },*/
{"streams",						R },
{"string",						R },
{"strip",						Z },
{"stripe",						Y },
{"struct",						Z },
{"sub_type",					R },
{"submenu",						I },
{"submit",						M },
{"substring",					M },
{"successful",					O },
/*{"suffix",						A },*/
{"sum",			 				I|Z|M|O|Y },
{"sumu",			 			I },
{"sunday",						R },
{"superschema",					Z },
/*{"suppression",					A },*/
{"swap",						Z },
{"switch",						O|M },
{"switchend",					M },
{"syb_identity",		 		Y },
{"syb_restree",		 			Y },
{"syb_terminate",		 		M },
{"sybase",			 			Z },
{"synonym",			 			D|O },
{"sysdate",			 			O },
{"system",						O|R|M },
{"tab",							M },
{"table",						D|I|O|_4|Z|M|Y },
{"tablea",						I },
{"tabledata",					I },
{"tables",						O|Z },
{"tablespace",					D|O },
{"tape",						M },
{"tcp",							Z },
{"temp",						M|Y },
{"temporary",					O|M|Y },
{"test",						Z },
{"text",						R|M },
{"textport",					M },
{"textsize",					M|Y },
{"then",						I|O },
{"thread",						O },
{"thresholds",					R },
{"thursday",					R },
{"time",						O },
{"time_stamp",					R },
{"timeout",						Z },
{"timestamp",					Z },
{"tinyint",						M },
{"to",							D|I|O|R|_4|Z|M|Y },
{"to group",					I },
{"to role",						I },
{"to user",						I },
{"today",						R },
{"tolerance",					Z },
{"tomorrow",					R },
{"total",						R },
{"trace",						R|M },
{"tracing",						O },
{"tran",			 			M|Y },
{"transaction",			 		O|R|Z|M|Y },
{"transaction_handle",			R },
{"transactions",				R },
{"transfer",					R|M },
{"trigger",			 			O|R|M|Y },
{"triggers",					R|O },
{"trim",						M },
{"true",						M },
{"truncate",					M|O|Y },
{"tsequal",						M|Y },
{"tuesday",						R },
{"type",						R },
{"uid",			 				O },
{"uncorrupt",					R },
{"undeclare",					Z },
{"undef",						Z },
{"under",						O },
{"unlimited",					O },
{"uniform",						R },
{"union",						Z|D|I|O|_4|M|Y },
{"unique",						I|O|R|Z|M|Y },
{"unloadtable",					I },
/*{"unpacked",					A },*/
{"unsigned",					Z },
{"unsupported",					Z },
{"until",						I|R|O },
{"up",							I },
{"update",						D|I|O|R|_4|Z|M|Y },
{"upper",						M },
{"use",							M|O },
{"used",						R },
{"used_pgs",					Y },
{"useform",						M },
{"user",						D|I|O|R|_4|Z|Y },
{"user_option",					Y },
/*{"userdata",					A },*/
{"users",						R },
{"using",						D|I|O|R|_4|Z|Y },
{"valid",						R },
{"validate",					O|I },
{"validproc",					D },
{"validrow",					I },
{"values",						D|I|O|_4|Z|M|Y },
{"varchar",			 			O },
{"varchar2",		 			O },
{"vargraphic",					O },
{"variable",					M },
{"varying",						R|Y },
{"vaxcluster",					R },
{"vcat",						D },
{"verb_time",					R },
{"verify",						R|Z },
{"version",						R|Z },
{"versions",					R },
{"via",							R },
{"view",						D|I|O|R|_4|Z|M|Y },
{"views",						R },
{"virtual",						Z },
{"volatile",			 		Z },
{"volumes",			 			D },
{"wait",						R|Z },
{"waitfor",						M|Y },
{"wednesday",					R },
{"week",						R },
{"when",						O },
{"whenever",					O|I|Z },
{"where",						D|I|O|_4|Z|M|Y },
{"while",						I|M|Y },
{"with",						D|I|O|R|_4|Z|M|Y },
{"with null",					I },
{"within",						R },
{"word",						R },
{"work",						I|O|Z|Y },
{"write",						O },
{"writetext",					M|Y },
{"xns",							Z },
/*{"yes",							A },*/
{"yesterday",					R },
};

static key_count = sizeof(keywords)/sizeof(struct Keyword);
