/***************************************************************************
* I/AIM
*
* File:     src/ppl/showAimAssem.u
*
* Description: Invoke the AIMShowAssembly command in VDS.  This command 
*              will retrieve a list of ARs for the reference files.
*
* Revison History:
*	$Log: showAimAssem.u,v $
*	Revision 1.1  2002/05/10 21:54:42  tlstalli
*	PPL to show contained ARs within an AMDC file
*	
*	
*
* History:
	MM/DD/YY	AUTHOR		DESCRIPTION
*  	05/10/02	TLS		File Creation
*               
************************************************************************/

#include "VDppl.h"
#include "VDobj.h"
#include "msmacros.h"
#include "msdef.h"
#include "execmsg.h"
#include "cimacros.h"
#include "ciminimum.h"
#include "vadbgmacros.h"
#include "PDUstr.h"

/****************** Externs ****************/
extern  struct PDUrefresh        *refresh;
extern	int AIMshow_contained_ars_form();	


/************************************************************
  Global variables.
 ************************************************************/

FILE *ptr;

/************************************************************
* FUNCTION: get_contained_ars_from_aim()
*
************************************************************/
get_contained_ars_from_aim( retCode )
int *retCode;
{   
    int     	chkcode;
    int     	status ;
    
    *retCode 	= OM_S_SUCCESS;
    status 	= OM_S_SUCCESS;

    fprintf(ptr,"\nget_contained_ars_from_aim: START\n");
    __DBGpr_com("get_contained_ars_from_aim: START");
    
    fprintf(ptr,"\tcalling AIMshow_contained_ars_form()\n");
    __DBGpr_com("calling AIMshow_contained_ars_form()");

    status = AIMshow_contained_ars_form(); 

    if (status != 0)
    {
      __DBGpr_int("status is bad.  status =  ", status);
      fprintf(ptr,"\tstatus is bad: %d\n", status);
    }

quit:
    
    fprintf(ptr, "\nget_contained_ars_from_aim: END");
    __DBGpr_com("get_contained_ars_from_aim: END");
    return status;
}

/**************************************************************/
main()
{

  int response;       

  int status;
  int retCode;
  char log[30], State[20];
  int DCType, resp;
  
  ptr = NULL;
  DCType = 0;

  /* open the log file to print out posting information */
  sprintf(log, "%s","showaimassem.log");
  ptr = fopen(log, "w+");
  if(ptr == NULL)
  {
    UI_status("Can not open log file for writing...");
    __DBGpr_com("Can not open log file for writing...");
  }

   fprintf(ptr, "\nShow AIM Assembly PPL START");
   __DBGpr_com("Show AIM Assembly PPL START");

  
   fprintf(ptr, "\nCalling get_contained_ars_from_aim.\n");
    __DBGpr_com("Calling get_contained_ars_from_aim.");

    status = get_contained_ars_from_aim( &retCode );
    __CheckRC( retCode, status, "get_contained_ars_from_aim", quit );
 
quit:
	if(status != OM_S_SUCCESS)
        {
          fprintf(ptr, "Process Terminated.....\n");
        }
        else
        {
	  fprintf( "" );
        }

        fclose(ptr);
        ptr = NULL;
}


