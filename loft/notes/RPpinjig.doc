

		INTERGRAPH	INTERGRAPH	INTERGRAPH	INTERGRAPH






		LLL            OO        FFFFFFFFF   TTTTTTTTTTTTT
		LLL          OO  OO      FFFFFFFFF   TTTTTTTTTTTTT
		LLL         OOO  OOO     FFF              TTT
		LLL        OOOO  OOOO    FFFFFF           TTT
		LLL        OOOO  OOOO    FFFFFF           TTT
		LLL         OOO  OOO     FFF              TTT
		LLLLLLLL     OO  OO      FFF              TTT
		LLLLLLLL       OO        FFF              TTT

		__________________________________________________
		__________________________________________________






			#################################
			#                               #
			# PIN-JIG POSITION REPORT (PP)  #
			#                               #
			#	 DOCUMENTATION          #
			#                               #
			#################################





                Summary
                =======

                I   - Pin-jig Position Report Over View

		II  - State Keywords
			vl-rp-pp-Start
			vl-rp-pp-pin-Title
			vl-rp-pp-pin-Report
			vl-rp-pp-crn-Title
			vl-rp-pp-crn-Report
			vl-rp-pp-End

		III - Function Keywords
			vl-rp-pp-Name()
			vl-rp-pp-PinNumber()
			vl-rp-pp-CornerNumber()
			vl-rp-pp-pin-Index()
			vl-rp-pp-pin-Name()
			vl-rp-pp-pin-Column()
			vl-rp-pp-pin-Line()
			vl-rp-pp-pin-Xposition()
			vl-rp-pp-pin-Yposition()
			vl-rp-pp-pin-Zposition()
			vl-rp-pp-pin-Height()
			vl-rp-pp-pin-Angle()
			vl-rp-pp-crn-Name()
			vl-rp-pp-crn-Xposition()
			vl-rp-pp-crn-Yposition()
			vl-rp-pp-crn-PinName()




I - PIN-JIG POSITION REPORT OVER VIEW
=====================================

	After locating one or several "PinJig_##" occurences of
	I_LOFT "VLpinjig" object and determining the output ASCII
	file name, the report runs.

	Reading "RPsetup" file (locally or in $LOFT/config/drawing)
	the I_STRUCT Apfel-Strudel executes orders given in it.




II - STATE KEYWORDS
===================

	The general states are prefixed by "vl-rp-pp".
	The pins related states are prefixed by "vl-rp-pp-pin".
	The corners related states are prefixed by "vl-rp-pp-crn".

o vl-rp-pp-Start :
	This is the first block processed.
	The header is printed.

o vl-rp-pp-pin-Title :
	This block is processed for each "PinJig_##" located.
	The title for pins is printed.

o vl-rp-pp-pin-Report :
	This block is processed for each pin of each "PinJig_##" located.
	The pins output values are printed.

o vl-rp-pp-crn-Title :
	This block is processed for each "PinJig_##" located.
	The title for corners is printed.

o vl-rp-pp-crn-Report :
	This block is processed for each plates' corner of each
	"PinJig_##" located.
	The corners output values are printed.

o vl-rp-pp-End :
	This is the last block processed.
	The trailer is printed.




III - FUNCTION KEYWORDS
=======================

	All these functions return values that will be printed out by
	the function vl-print().

	The general functions are prefixed by "vl-rp-pp".
	The pins related functions are prefixed by "vl-rp-pp-pin".
	The corners related functions are prefixed by "vl-rp-pp-crn".

o vl-rp-pp-Name() :
	Returns the name of the "PinJig_##" processed.

	synopsis :
	$nam := vl-rp-pp-Name();
		$nam is a string.

o vl-rp-pp-PinNumber() :
	Returns the pins' number in the "PinJig_##" occurence.

	synopsis :
	$num := vl-rp-pp-PinNumber();
		$num is a positive integer.

o vl-rp-pp-CornerNumber() :
	Returns the corners' number in the "PinJig_##" occurence.

	synopsis :
	$num := vl-rp-pp-CornerNumber();
		$num is a positive integer.

o vl-rp-pp-pin-Index() :
	Returns the index of the pin processed.

	synopsis :
	$idx := vl-rp-pp-pin-Index();
		$idx is a positive integer.

o vl-rp-pp-pin-Name() :
	Returns the name of the pin processed.

	synopsis :
	$nam := vl-rp-pp-pin-Name();
		$nam is a string.

o vl-rp-pp-pin-Column() :
	Returns the column number of the pin processed.

	synopsis :
	$idx := vl-rp-pp-pin-Column();
		$idx is a positive integer.

o vl-rp-pp-pin-Line() :
	Returns the line number of the pin processed.

	synopsis :
	$idx := vl-rp-pp-pin-Line();
		$idx is a positive integer.

o vl-rp-pp-pin-Xposition() :
	Returns the X position of the pin processed.

	synopsis :
	$pos := vl-rp-pp-pin-Xposition();
		$pos is a double.

o vl-rp-pp-pin-Yposition() :
	Returns the Y position of the pin processed.

	synopsis :
	$pos := vl-rp-pp-pin-Yposition();
		$pos is a double.

o vl-rp-pp-pin-Zposition() :
	Returns the Z position of the pin processed.

	synopsis :
	$pos := vl-rp-pp-pin-Zposition();
		$pos is a double.

o vl-rp-pp-pin-Height() :
	Returns the height (along Z axis) of the pin processed.

	synopsis :
	$hei := vl-rp-pp-pin-Height();
		$hei is a double.

o vl-rp-pp-pin-Angle() :
	Returns the extremity complementary angle, between the
	extremity support and the Z axis, for the pin processed.

	synopsis :
	$ang := vl-rp-pp-pin-Angle();
		$ang is a double.

o vl-rp-pp-crn-Name() :
	Returns the name of the corner processed.

	synopsis :
	$nam := vl-rp-pp-crn-Name();
		$nam is a string.

o vl-rp-pp-crn-Xposition() :
	Returns the X position of the corner processed.

	synopsis :
	$pos := vl-rp-pp-crn-Xposition();
		$pos is a double.

o vl-rp-pp-crn-Yposition() :
	Returns the Y position of the corner processed.

	synopsis :
	$pos := vl-rp-pp-crn-Yposition();
		$pos is a double.

o vl-rp-pp-crn-PinName() :
	Returns the name of refence pin for the corner processed.

	synopsis :
	$nam := vl-rp-pp-crn-PinName();
		$nam is a string.
