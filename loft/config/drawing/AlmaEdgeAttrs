#/* $Id: AlmaEdgeAttrs,v 1.1.1.1 2001/01/04 21:11:05 cvs Exp $  */

#/* --------------------------------------------------------------------
# * I/LOFT
# *
# * File: 	config/drawing/AlmaEdgeAttrs
# *
# * Description:
# *
# * Dependencies:
# *
# * Revision History:

# Revision 1.1  1994/11/14  22:42:32  pinnacle
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
#
# *
# * History:
# *      MM/DD/YY        AUTHOR          DESCRIPTION
	
#	12/04/95	Ch. Rama Rao

#*************************************************************************/


const ( definition = "edge_att" ,
	view-criterion = "" ) : {

   any-view : {

	$EdgeAtts:= " " ;	# var to store the edge attributes as string

     	$RC:= vl-Print( $EdgeAtts ) ;		# just prints single space

	$Box := get-input( "box" ) ;	# get the input collection for the macro

	$Type := attribute( "TYPE_ANGLE", $Box )  ;  # get the type attribute	

	$EdgeValC   := attribute( "C", $Box )  ;	#get the heel attribute
	$EdgeValA   := attribute( "A", $Box )  ;	#get the upper angle


	select				#select attributes according to the type
				        	
	   when $Type = "V" and $EdgeValC = 0    :
					# V and no heel is an Alma type 2 
		$EdgeAtts:= catenate-strings (  " ",$EdgeValC," ",$EdgeValA);

	   when $Type = "V" :
					# V and with heel is an Alma type 3
		$EdgeAtts:= catenate-strings (  " ",$EdgeValC," ",$EdgeValA);

	   when $Type = "X" and $EdgeValC = 0    :
					# X and no heel is an Alma type 5
		$EdgeValB   := attribute( "B", $Box )  ;	
		$EdgeValX   := attribute( "X", $Box )  ;	
		$EdgeAtts:= catenate-strings (  " ",$EdgeValC," ",$EdgeValA," ",$EdgeValB,$EdgeValX);

	   when $Type = "X" :
					# X and with heel is an Alma type 6
		$EdgeValB   := attribute( "B", $Box )  ;	
		$EdgeValN   := attribute( "N", $Box )  ;	
		$EdgeAtts:= catenate-strings (  " ",$EdgeValC," ",$EdgeValA," ",$EdgeValB,$EdgeValN);

	   otherwise :
					# it is a straight cut no chamfer
		$EdgeAtts:= catenate-strings (  " ",$EdgeValC," ",$EdgeValA );

     	   end ;	#end of select statement

     	$RC:= vl-Print( $EdgeAtts ) ;	# write into file the edge attributes
     	$RC:= vl-Skip() ;


    }	#any view

}	#edge attribute header
