#
# July-12-2000 Cameron Handyside - Added Penetration Control name
#				   and modified delete-cut
# May-24-2000 Rama Rao - Added Penetration Control Group macros.
# May-14-2000 Rama Rao - Added INNER_CUTOUT_EXPANSION_DIAMETER
#		       - Added proper name for Water Lines.
# May-04-2000 Rama Rao - Added Bevel Macros
# April-19-2000 10:50 AM (Ad Zuurhout - Mike Robin)
#

# These lines allow locating text label macros and many other macros
#SPECIALMACRO datum_mark
#SPECIALMACRO label_loft:Plate
#SPECIALMACRO label_loft1:Plate
#SPECIALMACRO label_loft2:Plate/Beam
#SPECIALMACRO PartMark
#SPECIALMACRO Bevel
#SPECIALMACRO EJ_Bevel
#SPECIALMACRO VA_Bevel
#SPECIALMACRO Fab_Stock
#SPECIALMACRO FCtest2
#SPECIALMACRO hull_pene

#INNER_CUTOUT_EXPANSION_DIAMETER 3.0

# This is the translation table to allow the nesting extractor to identify
# types of graphics attached as components to the unwrap object.  Each type must
# have a unique combination of level,color,style,weight.  The user must ensure
# that the rest of the setup file matches this table.
#
# Note that features do not have to be listed here.  A feature already knows
# what type it is
#
#EXt TYPE       LEVEL COLOR WEIGHT STYLE
#EXT CONTOUR    400   21    0      0 
#EXT MIN_REC    401   21    0      0
#EXT STOCK_LINE 400   21    0      1
#EXT STOCK_TEXT 400   21    1      0

#verbose;

unwrap: {
	any-view : {
		unwrap-contour[ color  = 21  ,
				level  = 400 ,
				weight = 0 ,
				style  = 0	] ;

		 symbol [format = (attribute("memb_name")),
                                position        = (innermost,center,above(250)),
                                color           = 1,
                                style           = 0,
                                level           = 400,
				weight		= 0,
                                size            = 100 mm] ;
                                
		 symbol [format =("PCMK=", attribute("SA_AST:StagingTree:PM:pcmk")),
                                position        = (innermost,center),
                                color           = 1,
                                style           = 0,
                                level           = 400,
				weight		= 0,
                                size            = 100 mm];
	}
}

marking-line : {
	any-view : {
	  map[ 	color  = 20  ,
		level  = 400 ,
		weight = 0 ,
		style  = 1	] ;
	 
	  select  when is-ns-fs-mark():
		$side := "FS/NS";
		$clr  := 2;
		$stl  := 1;
	  otherwise:
	        select  when is-marking-hidden():
		    $side := "FS";
		    $clr  := 2;
		    $stl  := 1;
		otherwise:
		    $side :="NS";
                    $clr  := 1;
                    $stl  := 0;
		end;
          end;
		
	  $stiff := get-input( "StiffenOrPlate" );

	  $stfname := attribute("SA_AST:StagingTree:PM:pcmk", $stiff);

          symbol  [
                        format          = ( $stfname ),
                        position        = ( at-first-end, above (50),offset(left,50),parallel,right-to-left ),
			color		= 1,
                        weight          = 1,
			level		= 400,
                        style           = 0,
                        size            = 30 mm ] ;

          symbol [
                       format		= ( $side ),
		       position		= ( at-second-end, above (50), offset( left , 150), parallel ),
		       color		= $clr ,
		       weight		= 1,
		       level		= 400,
		       style		= $stl,
		       size		= 30 mm ] ;
	}
}

roll-line: {
	any-view : {
		map[  	color  = 15  ,
			level  = 400 ,
			weight = 0 ,
			style  = 2	] ;

		$attr	:= "ROLL LINE" ;

		symbol	[
			format		= ($attr),
			position	=(middle),
			color		=15,
			weight		=0,
			level		=400,
			style		=0,
			size		=50mm];	
	}
}

butt-line: {
	any-view : {
		map[  	color  = 15  ,
			level  = 400 ,
			weight = 0 ,
			style  = 0	] ;
	}
}

seam-line: {
	any-view : {
		map[  	color  = 20  ,
			level  = 400 ,
			weight = 0 ,
			style  = 0	] ;
	}
}

control-line: {
	any-view : {
		map[  	color  = 19  ,
			level  = 400 ,
			weight = 0 ,
			style  = 0] ;
	}
}

water-line: {
	any-view : {
		map[  	color  = 19  ,
			level  = 400 ,
			weight = 0 ,
			style  = 3	] ;

		$attr   := exec-ppl-func( "AvdWatName", "main" );

		symbol[
			format		= ($attr),
			position	= (middle,parallel),
			color		= 1,
			level		= 400,
			weight		= 0,
			size		= 50,
			style		= 0];
	}
}

trace-line: {
	any-view : {
		map[  	color  = 15  ,
			level  = 400 ,
			weight = 1 ,
			style  = 2	] ;

		$attr	:=	"BTK"; 

		symbol[
			format		= ($attr),
			position	= (middle, orthogonal),
			color		= 1,
			level		= 400,
			weight		= 0,
			size		= 50,
			style		= 0];
	}
}

stock-line: {
	any-view : {

		stocklines[ 	color  = 21 ,
				level  = 400 ,
				weight = 0 ,
				style  = 1	] ;

		$attr := "STOCK" ;

                symbol  [
                        format          = ( $attr ),
                        position        = ( middle, parallel ),
			color		= 21,
                        weight          = 1,
			level		= 400,
                        style           = 0,
                        size            = 25 mm ] ;

	}
}

min-rec: {
	any-view : {
		stocklines[  	color  = 21 ,
				level  = 401 ,
				weight = 0 ,
				style  = 0	] ;
	}
}


macro ( "*col*" ) : {
	any-view : {
		map[  	color  = 16  ,
			level  = 400 ,
			weight = 0 ,
			style  = 4	] ;
	}
}

macro ( "*flush*" ) : {
        any-view : {
                map[    color  = 16  ,
                        level  = 400 ,
                        weight = 0 ,
                        style  = 4      ] ;
        }
}

macro("PartMark"):{
      any-view :{
                map[            color           = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

		$angle := get-knuckle-angle();

                symbol  [
                        format          = ( $angle ),
                        position        = ( middle, parallel, below(30) ),
                        color           = 16,
                        weight          = 0,
                        level           = 400,
                        style           = 0,
                        size            = 50 mm ] ;

                $text := text-member();

                symbol  [
                        format          = ( $text ),
                        font            = "ansi3",
                        position        = ( middle, parallel, above(30) ),
                        color           = 16,
                        weight          = 0,
                        level           = 400,
                        style           = 0,
			size            = 50 mm ] ;
        }
}

macro("label_loft"):{

	any-view :{
				
		map("text")
				[color 		= 16,
				level 		= 400,
				weight		= 1,
				style 		= 0];

                $text := text-member();

                $height := get-text-height();
                $width  := get-text-width();
                $font := get-text-font();

                symbol  [
                        format          = ( $text ),
                        font            = $font,
                        position        = ( middle, parallel ),
			color		= 16,
                        weight          = 0,
                        level           = 400,
                        style           = 0,
                        height          = $height,
                        width           = $width   ] ;

	}
}

macro("label_loft1"):{

	any-view :{
			
                map("OUTPUT00")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member();

                $height := get-text-height();
                $width  := get-text-width();

                $font := get-text-font();

                symbol  [
                        format          = ( $text ),
                        font            = $font,
                        position        = ( middle, parallel ),
			color		= 16,
                        weight          = 0,
                        level           = 400,
                        style           = 0,
                        height          = $height,
                        width           = $width   ] ;
	}
}

macro("label_loft2"):{

	any-view :{
			
                map("text")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member();

		$height := get-text-height();
		$width  := get-text-width();

		$font := get-text-font();

                symbol  [
			format          = ( $text ),
			font		= $font,
                        position        = ( middle, parallel ),
			color		= 16,
                        weight          = 0,
                        level           = 400,
                        style           = 0,
			height		= $height,
			width           = $width   ] ;
	
	}
}

macro("datum_mark"):{

	any-view :{
				
		map("mark00") [	color 		= 16,
				level 		= 400,
				weight		= 1,
				style 		= 1];
	}
}

	
macro("FCtest2"):{

	any-view :{

		mapsource("output1") [	color           = 16,
					level           = 400,
					weight          = 1,
					style           = 1];

                map("output2") [	color		= 16,
					level           = 400,
					weight          = 1,
					style           = 1];

                $text := text-member("output2");
                $size := get-text-height("output2");

                symbol  [	format          = ( $text ),
                        	position        = ( middle, parallel ),
                        	weight          = 1,
                        	level           = 400,
                        	style           = 0,
                        	size            = $size ] ;
	}
}	

macro("Bevel"):{

        any-view :{
                map("curve")
                                [color          = 21,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                map("stock_symb1")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                map("stock_symb2")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                map("label1")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("label1");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                	        $height := get-text-height();
                		$width  := get-text-width();

                		$font := get-text-font();

                		symbol  [
                        	      	format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
                end ;

                map("label2")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("label2");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                                $height := get-text-height();
                                $width  := get-text-width();

                                $font := get-text-font();
                		symbol  [
                        		format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
                end ;

                map("stock1")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("stock1");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                                $height := get-text-height();
                                $width  := get-text-width();

                                $font := get-text-font();
                		symbol  [
                        		format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
		end ;

                map("stock2")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("stock2");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                                $height := get-text-height();
                                $width  := get-text-width();

                                $font := get-text-font();
                		symbol  [
                        		format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
		end ;

        }
}

macro("EJ_Bevel"):{

        any-view :{

	$text := text-member("label");

        select
            when match-regexp( "0 No", $text ) :
		$doNothing := 1;
	    otherwise :

                map("curve")
                                [color          = 21,
                                level           = 400,
                                weight          = 1,
                                style           = 1];

                map("stock_symb")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                map("label")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("label");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                		$height := get-text-height();
                		$width  := get-text-width();
		
                		$font := get-text-font();
		
                		symbol  [
                        		format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
		end ;

                map("stock")
                                [color          = 16,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                $text := text-member("stock");
                select
                        when $text = "":
                                $text := " ";
			otherwise:
                                $height := get-text-height();
                                $width  := get-text-width();

                                $font := get-text-font();

                		symbol  [
                        		format          = ( $text ),
                        		font            = $font,
                        		position        = ( middle, parallel ),
                        		color           = 16,
                        		weight          = 0,
                        		level           = 400,
                        		style           = 0,
                        		height          = $height,
                        		width           = $width   ] ;
		end ;
	   end;
	}
}

macro("VA_Bevel"):{

        any-view :{
                map("base_curve")
                                [color          = 21,
                                level           = 400,
                                weight          = 1,
                                style           = 0];

                map("offset_curve")
                                [color          = 21,
                                level           = 400,
                                weight          = 1,
                                style           = 0];
        }
}

macro("hull_pene"):{

        any-view :{

                $pcgMacro := get-member( "PCGmacro" );

                $text := attribute( "CutType", $pcgMacro );
		$name := attribute( "PenetrationName", $pcgMacro );

                select
                   when match-regexp( "FC*", $text ) :

                        mapsource("cutter") [   color           = 2,
                                                level           = 405,
                                                weight          = 1,
                                                style           = 2];

			symbol		    [ 	format		= ( "FC" ),
						level		= 405,
						weight		= 0,
					  	color		= 2,
						size		= 10mm,
						style		= 0];		
			delete-cut();

                   when match-regexp( "NC*", $text ) :

                        mapsource("cutter")  [  color		= 4,
						level		= 405,		 	
						weight		= 2,
						style		= 2];

				symbol		[format		= ( $name ),	
 					        position	= (middle,parallel),	
						color           = 2,
                                                level           = 400,
                                                weight          = 1,
                                                style           = 1,
						size		= 10mm];
                end ;


        }
}
