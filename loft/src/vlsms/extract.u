#include "VDppl.h"
#include "VDfrmMacros.h"
#include "VLsms.h"
#include "VLsmsCmd.h"

#define thePrompt "Extract To Spades"
#define theForm   VLEXT_FORM_NAME

Form form;
struct CIform_st form_st;

// Unit, Test Unit, Tree, Plates
main()
{
  IGRint sts,response;
  
  TGRobj_env objOE;
  
  // Make sure initied ok
  if (form == NULL) goto wrapup;
  
  // Wait
  while(1) {
    response = 0;

    UI_message(thePrompt);

    sts = ci$locate(prompt  = "Select Unwrap",
                    classes = "VLunwrap",
		    owner_action = LC_RIGID_OWNER | 
                                   LC_RIGID_COMP  |
                                   LC_FLEX_COMP   | 
                                   LC_FLEX_OWNER  |
                                   LC_REF_OBJECTS,

                    stackable    = 1,
		    response     = &response,
		    md_env       = &objOE.mod_env,
		    obj          = &objOE.obj_id.objid,
		    osnum	 = &objOE.obj_id.osnum);

    // Allow extracting single unwrap

  }
    
 wrapup:
  return 1;
  
}
extern VLsmsCmdWriteTreeRev();
extern VLsmsCmdWriteSet2();

/* -----------------------------------------
 * Form stuff
 */
form_notification()
{
  int retFlag;
  int gadget;

  char unit[64];
  int  pre_translate;
  
  // Init
  retFlag = 1;
  gadget = form_st.gadget_label;
 
  // A few always get's handled
  switch (gadget) {

    case VLEXT_FORM_B_QUICK_SCAN:
      VLsmsCmdWriteSetUsingForm(form,0);
      break;
 
    case VLEXT_FORM_B_TREE_REV:
      VLsmsCmdWriteTreeRev(form);
      break;
 
    case FI_CANCEL:
      ci$put(response = TERMINATE);
      break;
      
    case VLEXT_FORM_B_EXTRACT:
    case FI_ACCEPT:
      vdfrm$EraseForm(form = form);
      VLsmsCmdWriteSet2(form);
      ci$put(response = TERMINATE);

      break;
  }

  
  retFlag = 1;
  
wrapup:
  return retFlag;

}

/* --------------------------------------------------------
 * Get the form started
 */
int init_form()
{
  int retFlag;
  int sts;
  Form existingForm;
  
  IGRchar hull[64];
  IGRchar unit[64];
  
  vdfrm$GetFormByName(name = theForm, form = &existingForm);
  if (existingForm) {
    UI_status("Extract To Spades Already Rinning");
    goto wrapup;
  }
  
  vdfrm$CreateForm(label  = 101,
                   name   = theForm,
                   notify = ci_notification,
                   objid  = MY_ID,
                   form   = &form);

  if (form == 0) {
    UI_status("Could not init form");
    goto wrapup;
  }
  vdfrm$DisplayForm(form = form);

  VLsmsCmdInitForm(form);

  // Done
  retFlag = 1;

wrapup:
  return retFlag;
}

/* ------------------------------------------
 * Usual command object messages
 */
init()
{
  form = NULL;
  init_form();
}
sleep() 
{
}
wakeup()
{
  UI_message(thePrompt);
}
delete()
{
  vdfrm$DeleteForm(form = form);
  form = NULL;
}
