
#include <stdio.h>
#include "cieveryone.h"
#include "cimacros.h"
#include "AS_status.h"
#include "asmacros.h"
#include "macro.h"

#include "growner.h"
#include "nddef.h"

#include "vlpcmacros.h"

extern struct GRid NULL_GRID;

extern	long	ACget_model_base_ref(); 
extern	long	VLplDrwBorder();
extern	long	VLplPcView();
extern	long	VLplCsFit();
extern	long	VLplImage();
extern	long	VLplPcText();

main ()
{
long			sts, msg;
struct	GRobj_env	Cs;
struct	GRobj_env	MCs;
struct	GRid		gMCs;
struct	GRobj_env	Stiff;
struct	GRmd_env	MOD_ENV;
struct	GRobj_env	drwBr;
struct	GRid		foot;
char			ViewName[1024];
char			ViewRgPt[1024];
char			borderName[1024];
struct	GRobj_env	pcView[10];
struct	GRobj_env	fitCs[10];
struct	GRobj_env	Img[10];
int			maxView, curView;
struct	GRobj_env	pcText;
char			*usedView[10];
int			k;
struct	GRobj_env	csView, rngPt;
int			suc;


	message(" Place Profile Card ");
	ci$get_module_info( md_env	= &MOD_ENV );

	usedView[0]	= "side";
	usedView[1]	= "top";
	usedView[2]	= "bottom";
	usedView[3]	= "end_on";
	maxView		= 4;
	curView		= 0;

step0 :
	// Identify stiffener 
	Stiff.obj_id.objid 	= NULL_OBJID;
	sts = ci$locate(	properties   = 	LC_LC_ONLY | LC_DP_ONLY | LC_RW,
				owner_action = 	LC_RIGID_OWNER | LC_FLEX_COMP |
						LC_FLEX_OWNER  | LC_REF_OBJECTS,
				classes	     =  "VSbeam",
				prompt	     =  "Identify beam/stiffener",
				obj          = 	&Stiff.obj_id.objid,
				osnum        = 	&Stiff.obj_id.osnum,
				md_env       = 	&Stiff.mod_env );
	if( ! (sts&1))	goto	step0;

step1 :

	// Identify CS
	Cs.obj_id.objid 	= NULL_OBJID;
	sts = ci$locate(	properties   = 	LC_LC_ONLY | LC_DP_ONLY | LC_RW,
				owner_action = 	LC_RIGID_OWNER | LC_FLEX_COMP |
						LC_RIGID_COMP  |
						LC_FLEX_OWNER  | LC_REF_OBJECTS,
				classes	     =  "GRgencs",
				prompt	     =  "Identify a Coordinate System",
				obj          = 	&Cs.obj_id.objid,
				osnum        = 	&Cs.obj_id.osnum,
				md_env       = 	&Cs.mod_env );
	if( ! (sts&1))	goto	step0;

step2 :
  	// border name
	borderName[0] = '\0';
	ci$get( string	= borderName,
		rc	= sts,
		prompt	= "Enter Border Name [RDSprofcard]");
//	printf(" sts = %d , %x \n", sts, sts );
//	if( ! (sts&1))	goto step1;

	if( borderName[0] == '\0' )	strcpy( borderName, "RDSprofcard" );


	// ************************** place profile card

	drwBr.mod_env	= MOD_ENV;
	sts = vl$pldrwborder(	csId	= &Cs,
				name	= borderName,
				env	= &drwBr.mod_env,
				border	= &drwBr.obj_id );
	as$status( sts = sts );

	// scan profile card to get view
	curView	= 0;
	for( k=0; k<maxView; k = k + 1 ){

		strcpy( ViewName, usedView[k] );
//		printf(" ViewName[%d] : %s\n", k, ViewName );
		sts = ci$send(	msg	 = message NDmacro.ACreturn_foot(
						&msg,
						ViewName,
						&foot,
						NULL, NULL ),
				targetid = drwBr.obj_id.objid,
				targetos = drwBr.obj_id.osnum );
		if( ! (sts&msg&1))	continue;

		// generate pretend on border for viewCs
		csView.obj_id.objid	= NULL_OBJID;
		sts = ci$send(	msg	 = message ASnode.ACconnect_pretend
					( &suc, ViewName, &csView.obj_id ),
				targetid = drwBr.obj_id.objid,
				targetos = drwBr.obj_id.osnum );
		as$status( sts = sts );
		as$status( sts = suc );
		if( ! (suc&sts&1) || csView.obj_id.objid == NULL_OBJID ){
			printf(" Error in connect_pretend \n");
			continue;
		}
		csView.mod_env = MOD_ENV;

		sprintf( ViewRgPt, "maxrg%s", ViewName );
		// generate pretend on border for rngPt
		rngPt.obj_id.objid	= NULL_OBJID;
		sts = ci$send(	msg	 = message ASnode.ACconnect_pretend
					( &suc, ViewRgPt, &rngPt.obj_id ),
				targetid = drwBr.obj_id.objid,
				targetos = drwBr.obj_id.osnum );
		as$status( sts = sts );
		as$status( sts = suc );
		if( ! (suc&sts&1) || rngPt.obj_id.objid == NULL_OBJID ){
			printf(" Error in connect_pretend \n");
			continue;
		}
		rngPt.mod_env = MOD_ENV;

		pcView[curView].mod_env	= MOD_ENV;
		sts = vl$plpcview(
				supportId	= &Stiff,
				csId		= &csView,
				viewType	= ViewName,
				rngPtId		= &rngPt,
				asState		= ND_DONT_MVRT,
				env		= &pcView[curView].mod_env,
				pcViewId	= &pcView[curView].obj_id );
		as$status( sts = sts );
//		printf(" pcView : %d/%d\n", pcView[curView].obj_id.objid,
//						pcView[curView].obj_id.osnum );
		curView = curView + 1;
	}

	// place profile card text
	pcText.mod_env	= MOD_ENV;
	sts = vl$plpctext(	drwBdr	= &drwBr,
				support	= &Stiff,
				env	= &pcText.mod_env,
				pcText	= &pcText.obj_id );
	as$status( sts = sts );

	goto	step0;

return	1;
}

