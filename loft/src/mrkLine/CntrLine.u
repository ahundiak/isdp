#include	"stdio.h"
#include	"ciminimum.h"
#include	"cimacros.h"
#include	"ci_mac_def.h"
#include	"macro.h"
#include	"AS_status.h"
#include	"parametric.h"

#include	"vlglinedef.h"		// gen line definitions
#include	"vlcntrline.h"		// control line internal defintions

extern		sprintf();
extern		ASsuper_construct();

/* ========================================================================= */
/* the main function is the one implementing the definition creation	     */
/* ========================================================================= */

main ()
{
	IGRlong		sts;
	IGRchar		*temp_names[MACRO_CL_FTEMP + MACRO_CL_VTEMP];
	IGRchar		*feet_names[MACRO_CL_FFEET];
	IGRint		 temp_types[MACRO_CL_FTEMP + MACRO_CL_VTEMP];
	IGRint		i,j;
	IGRchar	        temp_buff[MACRO_CL_VTEMP * MAX_CHA_TEMP];
	GRobj 	 	ci_mac_def1;
	IGRint		temp_number,feet_number;

	temp_number =  MACRO_CL_FTEMP + MACRO_CL_VTEMP;
	feet_number = MACRO_CL_FFEET;

  	temp_names[IDX_CL_BOX]  = NAM_CL_BOX;

	temp_types[IDX_CL_BOX]  = macro_generic | plug_generic | text_type;;

	for ( i=MACRO_CL_FTEMP; i<MACRO_CL_FTEMP + MACRO_CL_VTEMP; i=i+1) {
		sprintf ( &temp_buff[(i - MACRO_CL_FTEMP)*MAX_CHA_TEMP],
			  "%s%d", NAM_CL_VART, i - MACRO_CL_FTEMP);
		temp_names[i] = &temp_buff[(i - MACRO_CL_FTEMP)*MAX_CHA_TEMP];
		temp_types[i] = macro_generic | other_generic | curve_generic;
	}

	feet_names[IDX_CL_CV] = NAM_CL_CV;
	feet_names[IDX_CL_VECT] = NAM_CL_VECT;
	feet_names[IDX_CL_CONT] = N_MF_CONTENTS ; 

  	ci_mac_def1 = NULL_OBJID;
  	ac$cimacdef( 	cimacdef          = ci_mac_def1,
                        prop                    = ACvariable_template,
			status 	          = &sts,
			name              = MACRO_CL_LINE,
              		temp_num          = temp_number,
			temp_names        = temp_names,
			temp_types        = temp_types,
	      		extern_feet_num   = feet_number,
	 		extern_feet_names = feet_names );
return 1;
}
