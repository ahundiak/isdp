#include	"ciminimum.h"
#include	"cimacros.h"
#include	"ci_mac_def.h"
#include	"macro.h"
#include	"parametric.h"

#include	"vlstifftpl.h"

extern		sprintf();
extern		ASsuper_construct();

/* ========================================================================= */
/* the main function is the one implementing the definition creation	     */
/* ========================================================================= */

main ()
{
	IGRlong		sts;
	IGRchar		*temp_names[MACRO_S_FTEMP + MACRO_S_VTEMP];
	IGRint		 temp_types[MACRO_S_FTEMP + MACRO_S_VTEMP];
	IGRchar		*feet_names[MACRO_S_FFEET + 2 * MACRO_S_VFEET];
	IGRint		i, idx;
	IGRchar		  feet_buff[2 * MACRO_S_VFEET * MAX_CHA_TEMP];
	GRobj 	 	ci_mac_def1;
	IGRint		temp_number, feet_number;

	temp_number = MACRO_S_FTEMP + MACRO_S_VTEMP;
	feet_number = MACRO_S_FFEET + MACRO_S_VFEET;

  	temp_names[IDX_ST_STIF] = NAM_ST_STIF;
  	temp_names[IDX_ST_WLEF] = NAM_ST_WLEF;
  	temp_names[IDX_ST_THEI] = NAM_ST_THEI;
  	temp_names[IDX_ST_TTHI] = NAM_ST_TTHI;
  	temp_names[IDX_ST_EXT1] = NAM_ST_EXT1;
  	temp_names[IDX_ST_EXT2] = NAM_ST_EXT2;
  	temp_names[IDX_ST_CODE] = NAM_ST_CODE;

	temp_types[IDX_ST_STIF] = macro_generic;
	temp_types[IDX_ST_WLEF] = double_type;
	temp_types[IDX_ST_THEI] = double_type;
	temp_types[IDX_ST_TTHI] = double_type;
	temp_types[IDX_ST_EXT1] = double_type;
	temp_types[IDX_ST_EXT2] = double_type;
	temp_types[IDX_ST_CODE] = double_type;

	feet_names[IDX_SF_CONT]  = NAM_SF_CONT;
	feet_names[IDX_SF_TTHI]  = NAM_SF_TTHI;
	feet_names[IDX_SF_SMRK]  = NAM_SF_SMRK;
	feet_names[IDX_SF_SLIN]  = NAM_SF_SLIN;
	feet_names[IDX_SF_EMRK]  = NAM_SF_EMRK;
	feet_names[IDX_SF_ELIN]  = NAM_SF_ELIN;
	feet_names[IDX_SF_AMRK]  = NAM_SF_AMRK;
	feet_names[IDX_SF_ALIN]  = NAM_SF_ALIN;
	feet_names[IDX_SF_ATTR]  = NAM_SF_ATTR;

	for ( i=MACRO_S_FFEET; i<feet_number; i=i+1) {

		idx = 2 * (i - MACRO_S_FFEET);
                sprintf ( &feet_buff[idx * MAX_CHA_TEMP],
                          "%s%d", NAM_SF_VARF_M, i - MACRO_S_FFEET);
                feet_names[MACRO_S_FFEET+idx] = &feet_buff[idx * MAX_CHA_TEMP];

		idx = idx + 1;
                sprintf ( &feet_buff[idx * MAX_CHA_TEMP],
                          "%s%d", NAM_SF_VARF_T, i - MACRO_S_FFEET);
                feet_names[MACRO_S_FFEET+idx] = &feet_buff[idx * MAX_CHA_TEMP];
        }

  	ci_mac_def1 = NULL_OBJID;

  	ac$cimacdef( 	cimacdef          = ci_mac_def1,
			prop		  = ACvariable_template,
			status 	          = &sts,
			name              = MACRO_STFTPL,
              		temp_num          = temp_number,
			temp_names        = temp_names,
			temp_types        = temp_types,
	      		extern_feet_num   = MACRO_S_FFEET + 2 * MACRO_S_VFEET,
	 		extern_feet_names = feet_names );
return 1;
}
/* ========================================================================= */
