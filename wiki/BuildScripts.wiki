=== Summary ===
{{{
grmakemake
makemake
mkmk
grmake
}}}

=== grmake ===
Usual method for kicking off generated makefiles.

{{{
make CC="${COMPILER}" COPT="${COMPOPT}" DOPT="${MKDOPT}" DEBUG="no" $*
OR
make CC="${COMPILER} ${COMPOPT}" COPT="-g" DOPT="${MKDOPT}" OPPOPT="-l" OMCPPOPT="-l" DEBUG="yes" $*

The -l for OMCPPOPT and OPP suppresses line directives
}}}

=== Generated makefiles ===
{{{
$(opp)     $(OPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2) $<;
$(omcpp) $(OMCPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2)
$(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $*.c

Generated in makefile
OPPFLAGS = generated list include files
IPATH    = generated list include files
MOPT     = -Dsun=1 -D__sun__=1 -Di386=1 -D__i386=1 -D__i386__=1
DOPT     = -DCLIX -D1 -DBSD -DENV5 -D1 (from struct mkfile)
}}}

=== make options ===
{{{
make -k => Continue after errors
make -r => Ignore /usr/share/lib/make/make.rules.
make -s => Silent
}}}

=== Raw grmake Script ===
{{{
#!/bin/ksh
if [ "$1" = "-?" ]
 then
   echo "grmake : grmake is a utility to execute make with the proper variables"
   echo "         defined on the command line.  grmake also will create DEBUG"
   echo "         .o files in a consistent manner"
   echo
   echo "usage : grmake [-DEBUG] [makeargs]"
   echo
   echo "example : grmake -rk -f makeimp"
   echo
   exit
fi

if [ "$1" = "-DEBUG" ]
 then
  shift
  export DECOMPOPT=`echo $COMPOPT | sed "s/-O[1-9] //g"`
  /usr/ccs/bin/make CC="${COMPILER} ${DECOMPOPT}" COPT="-g" DOPT="${MKDOPT}" OPPOPT="-l" OMCPPOPT="-l" DEBUG="yes" $*
else
  /usr/ccs/bin/make CC="${COMPILER}" COPT="${COMPOPT}" DOPT="${MKDOPT}" DEBUG="no" $*
fi
}}}

=== grmakemake ===
{{{
$ cat /opt/ingr/grnucdp/bin/grmakemake
if [ "$1" = "-?" ]
 then
   echo "grmakemake : grmakemake is a utility to execute makemake with the"
   echo "             proper variables defined on the command line."
   echo
   echo "usage : grmakemake <dotmfile> <makefile>"
   echo
   echo "example : grmakemake imp.m makeimp"
   echo
   exit
fi
echo "${EXTARG}/bin/makemake ${MKMKOPT} $*"
${EXTARG}/bin/makemake ${MKMKOPT} $*
}}}
{{{
MKMKOPT =
-DRUN_X -DX11 -DLITTLE_ENDIAN -DSYSV -DSYS5 -DSVR4 -DSUNOS -DSUNOS5 -DSUNOS58
-Di386 -D__i386 -D__i386__ -DINTEL -DUNIX
-D__BUILTIN_VA_ARG_INCR
-D__EXTENSIONS__=1
-i /opt/ingr/grnucdp/Isl.mkmk
}}}

=== makemake ===

==== makemake summary ====
{{{
MKMK=$MAKEMAKEPATH/mkmk
pulls out DOPT(-D) ,IGNORE(-i),VERBOSE(-v),NOWHY(-v)
cpp -P $DOPT $DESCRIPT $DESCRIP1 (-P no line control)
$MKMK $IGNORE $VERBOSE $NOWHY -o $MAKEFILE $DESCRIP1
}}}

==== makemake raw ====
{{{
$ cat /opt/ingr/exnucdp/bin/makemake
#
#       shell front end for mkmk
#
TMPDIR=${TMPDIR:-/usr/tmp}
trap "rm -f $TMPDIR/DES$$ $MAKEFILE" 1 2 3 15

USAGE="Usage: $0 [-D var] [-i ignorefile] [-v] [-w] specfile [makefile]\n"

MAKEMAKEPATH=`dirname $0`
if test "$MAKEMAKEPATH" = "."
then
        MKMK=mkmk
else
        MKMK=$MAKEMAKEPATH/mkmk
fi

set -- `getopt vwD:i: $* `
if [ $# -lt 1 ]
then
   echo "$USAGE" >&2
   exit 2
fi

DOPT=
IGNORE=
VERBOSE=
NOWHY=
for i in $*
do
   case $i in
    -D) DOPT="$DOPT -D$2";      shift 2;;
    -i) IGNORE=-i$2;            shift 2;;
    -v) VERBOSE="-v";           shift;;
    -w) NOWHY="-w";             shift;;
    --) shift;                  break;;
   esac
done

case $# in
  0) echo "$USAGE" >&2; exit 2;;
  1) DESCRIPT=$1;
     MAKEFILE="makefile";
     if test -r makefile
     then
            echo "Overwrite makefile ? \c";
            read ans;
            if [ "$ans" = y ]
            then
               cp makefile makefile~;
            else
               echo "Enter name of makefile to be created:  \\c";
               # if user keys in "makefile" he overwrites makefileanyway
               read MAKEFILE;
            fi;
      fi;
      if test ! -r $DESCRIPT
      then
         echo "$0: $DESCRIPT not found" >&2;
         exit 2;
      fi;;

   2) DESCRIPT=$1;
      MAKEFILE=$2;

      if test ! -r $DESCRIPT
      then
         echo "$0: $DESCRIPT not found" >&2;
         exit 2;
      fi;;
esac

DESCRIP1=$TMPDIR/DES$$

# Modify the path so that /usr/lib/cpp will be run instead of /usr/bin/cpp
# on Clix (doesn't matter which is used on other systems)

PATH=/usr/lib:$PATH

set -e
if test -z "$DOPT"
then
cpp -P $DESCRIPT $DESCRIP1
else
cpp -P $DOPT $DESCRIPT $DESCRIP1
fi
set +e

if $MKMK $IGNORE $VERBOSE $NOWHY -o $MAKEFILE $DESCRIP1
then
        true
else
        rm -f $MAKEFILE
        rm -f $TMPDIR/DES$$
        exit 2
fi

rm -f $TMPDIR/DES$$
(dla3pce00212100:impd) /home/impd/isdp/struct/vsris
$

}}}