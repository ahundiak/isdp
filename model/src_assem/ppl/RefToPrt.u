#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "cievent.h"
#include "OMprimitives.h"
#include "msdef.h"
#include "dpdef.h"
#include "dp.h"
#include "dpmacros.h"
#include "growner.h"
#include "grownmacros.h"
#include "grgsdef.h"
#include "grgs.h"
#include "grgsmacros.h"
#include "grdpbdef.h"
#include "grdpb.h"
#include "grdpbmacros.h"
#include "detaildef.h"
#include "godef.h"
#include "gr.h"
#include "igr.h"
#include "igrdp.h"
#include "go.h"
#include "ex.h"
#include "grio.h"

#include <assemdef.h>
#include <assem.h>
#include <assemmacros.h>

extern int      GRdpb_get();
extern int      GRgsmgr_fun();
extern int      Wait_timer();
extern int      ci_notification();
extern char *   strcpy();
extern char *   strcat();
extern int      sprintf();
extern int      printf();
extern int      GRget_to_owner_info();
extern int      MAptsxform();
extern int      MAplpromx();
extern int      MAmulmx();
extern int      MAarextents();
extern int      MAidmx();
extern int      MAinvmx();
extern int      MAtypemx();
extern int      MAdotvc();
extern int      MAlncbclip();
extern int      GRget_window_matrix();
extern int      DPsetinqgragad();

#define FINISHED       -1
#define START           0
#define GET_REFFILE     1

IGRint              om_msg, msg, ok;
struct GRmd_env     mod_env, loc_env;
IGRint              state, response, i, j, k, l, count;
IGRdouble           accept_point[3];
struct GRid         ref_id, instance_id;
char                classname[90];
char                buffer[256];
struct GRevent      my_event;

main()
{
    message("Convert Reference File to Part Occurrence");

    /*
     * Get the current module enviroment.
     */	
    ci$get_module_info( md_env = &mod_env );


    while (state != FINISHED)
    {
        om_msg = OM_S_SUCCESS;
        msg = MSSUCC;
                
        switch (state)
        {
        case START:
            state = GET_REFFILE;
            
            break;
        case GET_REFFILE:
            
            /*
             * Locate the reference file to convert.
             */
            om_msg =
              ci$locate ( obj = &ref_id.objid,
                         osnum = &ref_id.osnum,
                         prompt = "Identify reference file",
                         acc_prompt = "Accept (identify next reference file) or Reject",
                         relocate_prompt = "Reference file not found",
                         classes = "GRreffile",
                         owner_action = LC_GEOM_MOD | LC_REF_HEADER | 
                                        LC_NO_REF_OBJECTS,
                         md_env = &loc_env,
                         stackable = 1,
                         accept_point = accept_point,
                         response = &response );
            
            status ("");
            
            if ( response == EX_DATA )
            {
                om_msg = asm$create_instance (msg = &msg,
                                              mod_env = &mod_env,
                                              type = EM_REFERENCE_PART,
                                              display = EM_DEFAULT_DISPLAY & ~EM_HANDLE_DISPLAYED,
                                              num_graphics = 1,
                                              graphic_ids = &ref_id,
                                              instance_id = &instance_id);

                if (!(om_msg & msg & 1))
                {
                    status ("Reference file not defined as a part.");
                }
                
                ci$put (point = accept_point);
            }
            
            break;
        }   
    }
}


