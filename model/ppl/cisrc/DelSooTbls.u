#include <stdio.h>
#include "ciminimum.h"
#include "cimacros.h"
#include "OMminimum.h"
#include "OMprimitives.h"
#include "OMmacros.h"

#define DEBUG	0

main()
   {
   int			n, i;
   int			sts;
   uword		classid;
   uword		filedid;
   uword		obj_count;
   int			max_entry;    /* Last object space map entry */
   OM_p_OSD		p_OSD;        /* Ptr to object space descriptor */
   OM_p_SPAMAPENT	spmap;
   OMuint		flags;


   message( "Deleting the Soo Tables" );
   sts = om$get_classid( classname = "DEso",
                         p_classid = &classid );

   filedid = OM_GA_OSDs[2]->ActToFil[classid];

   obj_count = 0;

   /* Ptr to our obj space entry in obj space descr table */

   p_OSD = OM_GA_OSDs[2]; 

   if (p_OSD->CurSpaceMapSize)
      {
#     if DEBUG
      printf( "CurSpaceMapSize: %d\n", p_OSD->CurSpaceMapSize );
#     endif

      for( n=p_OSD->CurSpaceMapSize-1; n>=0; n=n-1 )
         {
         spmap = &p_OSD->Spacemap[n];
         if( !OM_OBJ_INVALID(spmap->flags) )

            {
            break;
            }
         }

      spmap = p_OSD->Spacemap;
      for( i=0; i<=n; i=i+1 )
         {
         if( spmap->flags != 0 || spmap->p_acld != NULL )
            {
            flags = spmap->flags;
            if( !(spmap->flags & OM_SM_unknown_obj) )
               {
               if( classid == spmap->p_acld->w_classid )
                  {
#                 if DEBUG
                  printf( "objid = %d\n", i );
#                 endif

                  ci$send( msg      = message Root.delete(0),
                           targetid = i,
                           targetos = 2 );
                  }
               }
            }

         spmap = spmap + 1;
         }
      }
   }
