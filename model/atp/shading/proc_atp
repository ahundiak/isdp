#  NAME
#        proc_atp
#
#  DESCRIPTION
#        Processes atp's for the command specified in the parameter 
#
#  PARAMETERS
#        Abbreviated name of command as specified in atp.list
#          e.g. swdm for "Set Window Display Mode"
#
#  GLOBALS USED
#        ATP_RUN  - flag to run atp's
#        ATP_SI   - flag to snapshot display using "save image"
#        ATP_DIFF - flag to difference snapshot data with control data
#
#  HISTORY
#        7/1/92        Yvonne Chu
#        Created

#  Go to the directory for the command

cd $1

#
#  Run all atp's for that command 
#

if [ "${ATP_RUN}" = "1" ]
then
   if [ "$USER_DEFINED" = "1" ]
   then
         echo
         atp=`echo $ATP_PATH | cut -d. -f1`
         echo "Processing $atp"
         drive $MODEL/bin/Model -p Ems -f "$DESIGN_FILE" -C '"ci='$atp'" exit=n"'      
   else
      for file in $1*.u
      do
         echo
         atp=`echo $file | cut -d. -f1`
         echo "Processing $atp"
         drive $MODEL/bin/Model -p Ems -f "$DESIGN_FILE" -C '"ci='$atp'" exit=n"'
      done
   fi
fi

#
#  Remove EMS version stamp from log file  
#

cat tmp/$1.log | sed '/EMS/d' > tmp/atp.log
rm tmp/$1.log

#
#  Compare rgb files generated by "save image" using rle_view if on 
#  the Clipper, otherwise using sum. Also compares the log file which 
#  contains snapshots of data structures. Control files are stored in 
#  the <command>/data directory. Differences, if any, are stored in 
#  <command>/tmp/log.dif.
#

cd tmp

if [ "${ATP_DIFF}" = "1" ]
then

   diff atp.log ../data/atp.log > log.dif

#
# If this is the first run of the ATP, then we need to transfer all the files 
# created to the data directory of the ATP for later analysis and comparison.
#

   export NOT_FIRST_RUN=1

   for file in *
   do
      if [ -f ../data/$file ]
      then
         if [ "${NOT_FIRST_RUN}" = "1" ]
         then
            NOT_FIRST_RUN=1
         fi   
      else
         echo
         echo "First iteration of automatic testing procedures, no differencing performed."
         echo "Creating file ../data/$file..."
         export NOT_FIRST_RUN=0
         mv $file ../data/$file
      fi
   done


#
# Compare the *.rgb, *.ige, and *.pfl files with the control files
#

   if [ "${NOT_FIRST_RUN}" = "1" ]
   then
      ls *.rgb > /dev/null 2>&1
      if [ $? = 0 ]
      then
         for file in *.rgb
         do
            echo
            echo "Diffing $file..."

# rle_view doesn't work on the Sun because of BIG_ENDIAN issues 

            HOST=`uname`  
            if [ "$HOST" = "CLIX" ]
            then 
               ../../rle_view/rle_view -f $file -f ../data/$file -b 1 2>/usr/tmp/atp.dif

               set `cat /usr/tmp/atp.dif`

               if [ $1 = "No" -a $2 = "differences" ]
               then
                  echo $1 $2 
                  echo "Removing tmp/$file"
                  rm $file
               else
                  echo "$file: \c" >> log.dif
                  if [ $1 = "Maximum" -a $2 = "VLT" ]
                  then
                     echo $1 $2 $3 $4 $5
                     echo $1 $2 $3 $4 $5 >> log.dif
                  else
                     cat /usr/tmp/atp.dif 
                     cat /usr/tmp/atp.dif >> log.dif
                  fi
               fi
            else
               set `sum $file`
               sum1=$1
               sum2=$2
               set `sum ../data/$file`
               if [ $1 = $sum1 -a $2 = $sum2 ]
               then
                  echo "No difference"
                  rm $file
               else
                  echo "tmp/$file and data/$file are different" 
                  echo "tmp/$file and data/$file are different" >> log.dif
                  mv $file ../data/$file.2
                  echo "tmp/$file moved to data/$file.2"
               fi
            fi
         done
      fi

#
# Compare the ige files that were created.  If different, move the tmp/*.ige
# file to data/*.ige.2 for later comparison.
#
      ls *.ige > /dev/null 2>&1
      if [ $? = 0 ]
      then
         for file in *.ige
         do
            echo
            echo "Diffing $file..."

            set `sum $file`
            sum1=$1
            sum2=$2
            set `sum ../data/$file`
            if [ $1 = $sum1 -a $2 = $sum2 ]
            then
               echo "No difference"
               rm $file
            else
               echo "tmp/$file and data/$file are different" 
               echo "tmp/$file and data/$file are different" >> log.dif
               mv $file ../data/$file.2
               echo "tmp/$file moved to data/$file.2"
            fi
         done
      fi

#
# Compare the .pfl files.  If different: print message, put differences in 
# log.dif, and move tmp/*.pfl to data/*.pfl.2.
#

      ls *.pfl > /dev/null 2>&1
      if [ $? = 0 ]
      then
         for file in *.pfl
         do
            echo
            echo "Diffing $file..."

            set `sum $file`
            sum1=$1
            sum2=$2
            set `sum ../data/$file`
            if [ $1 = $sum1 -a $2 = $sum2 ]
            then
               echo "No difference"
               rm $file
            else
               echo "tmp/$file and data/$file are different" 
               echo "tmp/$file and data/$file are different" >> log.dif
               mv $file ../data/$file.2
               echo "tmp/$file moved to data/$file.2"
            fi
         done
      fi

#
# For *.tbl and *.igds files, move them to ../data directory.
# 

     ls *.tbl > /dev/null 2>&1
      if [ $? = 0 ]
      then
         for file in *.tbl
         do
            mv $file ../data/$file
         done
      fi

      ls *.igds > /dev/null 2>&1
      if [ $? = 0 ]
      then
         for file in *.igds
         do
            mv $file ../data/$file
         done
      fi
   fi
fi


if [ "${ATP_SI}" = "1" ]
then
   export NOT_FIRST_RUN=1

   for file in *
   do
      if [ -f ../data/$file ]
      then
         if [ "${NOT_FIRST_RUN}" = "1" ]
         then
            NOT_FIRST_RUN=1
         fi   
      else
         echo
         echo "Control data files do not exist, storing files in $1/data."
         echo "Creating file $1/data/$file..."
         export NOT_FIRST_RUN=0
         mv $file ../data/$file
      fi
   done
fi
