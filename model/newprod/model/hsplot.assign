function echopath {
    noerror=$1
    if [ $noerror = noerror ]
    then
        shift
    fi
    item=$1
    pdata=$2
    me=$3

    path=`awk '/ '$item' / {print $5}' $pdata | sort -u`

    if [ -d "$path" ]
    then
        echo $path
        exit 0
    else
        set blap $path
        if [ $# -gt 2 ]
        then
            echo $me:  found more than one path for $item: 1>&2
            for p in $path
            do
                echo \\t$p 1>&2
            done
        else
            if [ $noerror != noerror ]
            then
                echo $me: \"$path\" no path for $item 1>&2
            fi
        fi
        exit 1
    fi
}

if [ $# = 2 ]
then
    product_data=$2
else
    if [ $# = 1 ]
    then
        product_data=${INGRHOME}/product_data
    else
        echo Usage: $0 "<image> <product data file>"
        exit 9
    fi
fi

image=$1

if [ ! -f ${image} ]
then
    echo $0: Cannot find ${image}
    exit 10
else
    if [ ! -r ${image} ]
    then
        echo $0: Cannot read ${image}
        exit 11
    else
        if [ ! -w ${image} ]
        then
            echo $0: Cannot write ${image}
            exit 12
        fi
    fi
fi

if [ ! -r ${product_data} ]
then
    if [ -f ${product_data} ]
    then
        echo $0: ${product_data} not readable. 1>&2
        exit 1
    else
        echo $0: ${product_data} not found. 1>&2
        exit 2
    fi
fi

#if BSPMATH_path=`echopath I\\\/BSPMATH ${product_data} $0`
#then
#    true
#else
#    exit 4
#fi
#
#
#for lib_s in ${BSPMATH_path}/shlib/bsma_s \
#             ${BSPMATH_path}/shlib/bsut_s \
#             ${BSPMATH_path}/shlib/bscv_s \
#             ${BSPMATH_path}/shlib/bssf_s
#do
#    if [ -f ${lib_s} ]
#    then
#        /usr/tmp/hsplot.mls -q -l`basename ${lib_s}`:${lib_s} ${image}
#    else
#        echo $0: WARNING Cannot find ${lib_s}
#    fi
#done

exit 0
