################################################################################
#
#	Environment variables for making EXNUC.  This file is set up for use
#	by integration.  Developers should uncomment the appropriate lines,
#	set the appropriate variables, then "dot" this file into the
#	environment from the top-level directory:
#
#			. ./build/exnuc.env
#
################################################################################
#
#	The following must be set in this file:
#
#	EXNUC	Location of source files.
#	TARGET	Destination for .o files and executables.
#	BASE	Location of executables for build (opp, omcpp, makemake, etc.).
#	BUILD	(See below)

# build/install/isdp.env must be sourced first

export EXNUC=$ISDP_SOURCE/exnuc
export TARGET=
export BASE=
export BUILD=i5EXNUC

#	The following macros are for paths pointing to the set of libraries
#	or include files for the appropriate product.  For example,
#	LIBXC_LIB_PATH should be the complete path name of the directory
#	where the LIBXC library resides.  These macros must be used
#	because it can no longer be assumed product libraries and include
#	files will reside in /usr/lib and /usr/include.
#
#       Where appropriate we will use the deltools utility "proddata" to
#       automatically set these path environment variables
#

#--------------------------------------------------------------------------
#  Set up the generic product oriented paths
#  Note that some of these will not be defined on all machines (like FORMS
#  and XFORMSDP) but they should not both be needed, so no big whoop
#--------------------------------------------------------------------------

LIBXC_PTH=`proddata +%p -x LIBXC`
export LIBXC_PATH=$(echo $LIBXC_PTH | cut -f1 -d" ")
export FORMS_PATH=`proddata +%p -x FORMS`
export XFORMSDP_PATH=`proddata +%p -x XFORMSDP`
export HELPDP_PATH=`proddata +%p -x HELPDP`
export UMS_PATH=`proddata +%p -x UMS`

#--------------------------------------------------------------------------
#  Set up the common include paths
#  The specific include paths and library paths will be set up per build
#--------------------------------------------------------------------------

export LIBXC_INC_PATH=$LIBXC_PATH/include
export UMS_INC_PATH=$UMS_PATH/include

export UNAME="$(uname -s)"
export UNAMESR="$(uname -sr)"
export UNAMESR2=`uname -sr | cut -c1-6`

export BLDNUMB=${BLDNUMB:-00}
export PRODUCT_VERSION=03.04.00.$BLDNUMB
export PRODUCT_DATE="`date '+%d-%b-%Y'`"

#export PRODUCT_DATE="`date '+%d-%b-%Y' | tr [a-z] [A-Z]`"

# Set base targets for the integration system.
export BASETAR=${ISDP_TARGET}/exnuc34
export BASETAR_INTEL5=${BASETAR}

################################################################################
################################################################################
# 25 Mar 2010 - ah - Deleted the rest of the case statements for unsupported platforms
case $BUILD
in

i5EXNUC|i5EXNUCDP)
#   For debugging, activate next line...
	export COPT=-g
	export TMPDIR=${TMPDIR:-$ISDP_TARGET/tmp}
	export DOPT1="-DRUN_X -DX11 -DLITTLE_ENDIAN -DSYSV -DSYS5 -DSVR4 -DSUNOS -DSUNOS5 -DSUNOS58 -Di386 -D__i386 -DINTEL -DUNIX -D__BUILTIN_VA_ARG_INCR"
	export TARGET=${TARGET:-$BASETAR_INTEL5/intel5}
	export BASE=${BASE:-$BASETAR_INTEL5/intel5}
	export MAKEMAKE="$BASE/bin/makemake -i$EXNUC/build/i5Ignore $DOPT1"
#	export FONTSERVE_LIB_PATH=`proddata +%p RESOURCES`/fontserver
	export FONTSERVE_LIB_PATH=$INGRHOME/resrc/fontserver
	export FONTSERVE_INC_PATH=$FONTSERVE_LIB_PATH/include
	export HELPDP_INC_PATH=$HELPDP_PATH/include
	export HELPDP_LIB_PATH=$HELPDP_PATH/lib/i86pc
	export LIBXC_LIB_PATH=$LIBXC_PATH/lib
	export UMS_LIB_PATH=$UMS_PATH/lib/i86pc
#	export LD_LIBRARY_PATH="$INGRHOME/lib:/opt/SUNWspro/lib:/usr/openwin/lib:$FONTSERVE_LIB_PATH"
	export XFORMSDP_INC_PATH=$XFORMSDP_PATH/xfi/include
	export XFORMSDP_LIB_PATH=$XFORMSDP_PATH/xfi/lib/i86pc
	export X11_INC_PATH=/usr/openwin/share/include
	export X11_LIB_PATH=/usr/openwin/lib
#   Make sure to enable for ProWorks compiler ("cc -xO1...") OR Forte 6 compiler ("cc -xCC...")
#	export CC="cc -xO1 -Xc -xCC -W0,-xd -KPIC"
	export CC="cc -xCC -Xa -m32 -Kpic -features=no%conststrings"
	export PRODUCT_NAME=${BUILD#i5}

#	export SYSXLIB="$XFORMSDP_LIB_PATH/libXFI.a $FONTSERVE_LIB_PATH/libXFS.so.1.1"
	export SYSXLIB="-L $ISDP_TARGET/xforms/xfi/lib -lXFI -L $ISDP_TARGET/fontserver/src/lib -lXFS -R $ISDP_TARGET/xforms/xfi/lib:$ISDP_TARGET/fontserver/src/lib:$ISDP_TARGET/exnuc34/intel5/lib:$ISDP_INSTALL/lib"
#	export SYSXLIB="-lXFI -lXFS -R $ISDP_INSTALL/lib"

	export LINKLIB1="$HELPDP_LIB_PATH/libhlib.a"

# Enable the use of libumem for debugging with dbx to look for leaks, etc. by uncommenting the next line.
	export LINKLIB2="-lm -lumem -lxc"
#	export LINKLIB2="-lm -lxc"
# The following line uses the old libxcmalloc, which we can replace with either libc or libumem on Solaris.
#	export LINKLIB2="-lm -lxcmalloc -lxc"
# The following 3 lines are indentical to the LINKLIB2 lines above, except they use statically linked versions of our libraries.
#	export LINKLIB2="-lm -lumem $LIBXC_LIB_PATH/libxc.a"
#	export LINKLIB2="-lm $LIBXC_LIB_PATH/libxc.a"
#	export LINKLIB2="-lm $LIBXC_LIB_PATH/libxcmalloc.a $LIBXC_LIB_PATH/libxc.a"
	export XLIB="-lXext -lXt -lX11"
#	export XLIB="$X11_LIB_PATH/libXext.so $X11_LIB_PATH/libXt.a $X11_LIB_PATH/libX11.a"
#	export LDFLAGS="-L$MGUI_LIB_PATH"
	export LDFLAGS=""
	export ARCHIVE=libXexnuc.a
        export ARCHIVE_SO=libXexnuc.so
	export EXOBJECTS="$TARGET/lib/igefei.o $TARGET/lib/libXexnuc.a"
#	export EXOBJECTS="$TARGET/lib/igefei.o -L $TARGET/lib -lXexnuc"
	export XSTUB=$TARGET/lib/exnucXstub.o
	export LIBLOC=lib
	;;

*)
	echo "ERROR: BUILD env variable not set" >&2
	;;
esac
export EXTARG=$TARGET
