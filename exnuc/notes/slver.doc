




     slver                                                        slver 
      
     NAME
            slver - enable shared library version checking 
      
     SYNOPSIS
            slver [ -? ] [ -v ] [ -V ] [ -h host.shlib ] [ -t target.shlib
            ] [-i init.object ] 
      
     DESCRIPTION
            "slver" enables shared library version checking by modifying
            the host shared library file.  It requires the specification of
            the the target (-t) and host (-h) shared library files and the
            name of the initialization object (-i) as input (if not given
            they will be prompted for).  The initialization object is the
            object that was identified through the "#init" directive within
            the shared library specification file.  The object need not
            exist and only its filename (without a path specification) is
            required. 
      
            If the "-?" option is given, the syntax of slver is displayed.
      
            The verbose option "-v" identifies what processing is to occur
            through the currently active "slver" command. 
      
            "-V" acts the same as the "-v" option except the user will be
            prompted for confirmation before proceeding.  A negative
            response will abort the command. 
      
            The first global variable defined within the shared library
            must be the version number, this is the first global
            encountered in the list of object files specified by the
            #object directive in the shared library specification file.  It
            must be an 16 character string and is broken down as follows: 
       
                    characters 0-1   Major version number
                    characters 2-3   Minor version number
                    characters 4-7   Bugfix number
                    characters 8-11  Build number
                    characters 12-15 Shared library compatability number

                    Each of the five fields of the version stamp has to be
                    zero filled.
      
                    ex.   char libOM_s_VS[]="0403000200000001";
      
     NOTES
            A warning message will be displayed for each version mismatched
            shared library through a separate vterm window.  It is for the
            user to decide whether or not to abort the corresponding
            executable.  A mismatch occurs between the library the
            application linked with (linked) and the one that currently
            exists on the system (target) when: 
      
                    The major version numbers are not equal. 
      
                    The minor version numbers are not equal.

                    The bugfix numbers are not equal.

		    The build number that is contained within the image that
		    identifies the shared library that was linked with is
		    greater than the build number found within the target of
		    the corresponding shared library.
      
                    The compatability number are not equal.
      
     SEE ALSO
            mkshlib(1)
