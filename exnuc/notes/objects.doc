
December 12, 1986

		Scheme for objects used in symbol table package

1.0	Include Files

	Each class has two include files.

1.1	Class Header File (classname.h)

	The ".h" file is to be included by the users of the class.
	This file will describe the messages supported by the class
	but will not contain the structure of the object itself.

	If the class is a subclass, this file will include the
	".h" file for its parent class.

	For classes which declare new messages, a class function structure
	will be declared.  This structure will be named "classname"_class
	and will contain pointers to functions for the messages defined on
	the class.  For each field in this structure, a macro will be declared
  	of the form "classname"_"messagename".  The first parameter of each
	macro will be the pointer to the target object.  The macro will call
	the corresponding function via the pointer in the class function
	structure.  A typedef name will be declared of the form
	"classname"_ptr.  This will be declared as a pointer to a pointer
	to the class function structure.  This will be used by all users of
	the class to refer to objects of the class.

	The ".h" fill will also contain extern declarations for any global
	functions provided by the class.  If it is not an abstract class,
	one of these will be a "new" function for the class.

1.2	Class Structure File (classname.cl)

	The ".cl" file is to be included by the ".c" file of the
	class and by the ".cl" files of any subclasses.

	The ".cl" file will contain the object structure and will
	include the ".h" file for the class.

2.0 	Pointers to Objects

	The new function for the class will return a pointer to an
	object of the class.
