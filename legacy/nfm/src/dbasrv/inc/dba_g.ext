/* $Revision: 1.15 $ */
/*
        DBAccess Graphics System Default Values
*/
#ifndef dba_g_global
#define dba_g_global

#include <stdio.h>
#include "FI.h"

#if defined __WIN16__ || defined __WIN32__
#include <windows.h>
#if defined __DLL__
#include "dba_dll.h"
#endif
#endif

#include "iml.h"
#include "point.h"

#if !defined __WIN16__ && !defined __WIN32__ && !defined _MAC_
#include "dmgvPub.h"
#if !defined src_eraster
#include "dmgvProto.h"
#endif
#elif defined __WIN32__
#include "dmpub.h"
#include "red_pub.h"
#include "dm_app.h"
#include "utl.h"
#include "gvpub.h"
#endif

#include "dba_g.def"
#include "dba_g_s.def"
#include "dba.ext"
#include "dm_app.h"
/*
	DBAccess File Data Linked List
*/

/* 12-dec-1993 for w_rundba.  blp */
#if !defined __WIN16__
#if defined __WIN32__
extern struct _DM_PrintInfo dba_g_plotinfo;
#else
extern struct DM_PlotInfo_str dba_g_plotinfo;
#endif
#endif

extern struct dba_g_red_files *dba_top_redline_file, *dba_redline_file;
extern struct dba_g_files dba_g_fdata;
extern struct dba_g_files *dba_g_current_file, *dba_g_first_file, *dba_g_note_file;
extern int dba_g_num_files;
/*
        Globals used in g_gfdata.c to determine where
        a graphics file might be.
*/
extern char *dba_files_path;
extern char *dba_files_drive;
/*
	Globals used for type of redlines and path of redlines
*/
extern short DMredline;
extern char *dba_redline_path;
/*
	Table Names for the Linkages
*/
extern char dba_g_files_table[DBR_MAXNAME], dba_g_links_table[DBR_MAXNAME], 
     dba_g_points_table[DBR_MAXNAME], dba_g_strings_table[DBR_MAXNAME];
/*
        Current Page Text
*/
extern char dba_current_page_text[64];
/*
        Current Window Number
*/
extern int dba_current_window_number;
/*
        Type of redlines (dbaccess = 0 / dmredline = 1)
*/
extern int   dba_redline_mode;
/*
	Control Variables
*/
extern int dba_g_x1, dba_g_y1, dba_g_x2, dba_g_y2;
extern int dba_fg_color, dba_bg_color, dba_hl_color;
extern int dba_file_link_color, dba_database_link_color;
extern int dba_note_link_color, dba_user_link_color, dba_color_used;
extern int dba_g_width, dba_g_height;
extern int dba_g_offset_x, dba_g_offset_y;
extern int dba_g_mdic_x, dba_g_mdic_y;
extern int dba_g_mdic_width, dba_g_mdic_height;
extern int dba_menu_mode, dba_window_mode, dba_dec_type;
extern int dba_raster_menu_disable;
extern int dba_border_mode;
extern int dba_overview_mode;
extern int dba_virtual_screen;
extern int dba_window_names;
extern int dba_hot_keys;
/*
	Raster Mode Active Flag
*/
extern int dba_g_active;
extern int dba_auto_display_links;
/*
	Review File Linkage Locate Graphics Arguments
*/
extern int dba_fl_mode, dba_fl_view, dba_fl_blink;
extern double dba_fl_zoom;
/*
	User Linkage Data
*/
extern int dba_user_entitynum, dba_user_raslink;
extern long dba_user_mslink;
/*
        Raster Rotation angle
*/
extern int dba_raster_rotate_angle;
/*
	Fence Type: Rectangular or Multisided, and the Fence Window,
        the fence only applies to one file.
*/
extern int dba_g_f_type;
#if defined __WIN16__ || defined __WIN32__
extern HWND dba_g_fence_window;
#else
extern int dba_g_fence_window;
#endif
/*
        Linkage Type: Rectangular, Multisided
*/
extern short dba_linkage_type;
/*
	Linkage function:  Delete, File, Note, Database
*/
extern short dba_graphics_function;
/*
	Fence Points, and Number of Fence Points
*/
extern double *dba_g_f_pnts;
extern int dba_g_num_f_pnts;
/*
	Linkage Points
*/
extern int *dba_g_ip;
extern double *dba_g_dp;
extern int dba_g_npts;
extern int dba_g_irange[4];
extern double dba_g_drange[6];
/*
	Forms for the DBraster module
*/
extern Form dba_g_menu_form, dba_g_load_form, dba_g_note_form, dba_g_goto_form,
            dba_g_markup_form, dba_g_text_form;
/*
	Font Variables
*/
extern char *dba_g_fontname;
extern short dba_g_font_loaded;
/*
	Iml Variables
*/
extern char *dba_g_image_data;
extern int dba_g_image_size;
extern char dba_g_node[16], dba_g_net_addr[132];
/*
	Active Markup Parameters
*/
extern int dba_g_markup_enabled;
extern int dba_g_links_z;
extern struct dba_g_active_params_m dba_g_markup_params;
extern char *dba_g_linkage_where;
extern unsigned long dba_g_where_size;
/*
	Linked List of Symbols
*/
extern struct dba_g_symbols *dba_g_symlist;
extern int dba_g_num_symbols;
extern char dba_markup_symbol_file[64];
#endif
