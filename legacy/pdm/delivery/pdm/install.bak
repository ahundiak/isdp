#
# Copyright Intergraph Corporation
#
# I/PDM Product Installation
#
# Synopsis
#
#    install.sh <node.usr.pass> <VMSDIR> <UNIXDIR> <-y>
#

UNIXDIR=$4

if [ ! -d ${UNIXDIR} ]; then mkdir -p ${UNIXDIR}; fi
if [ ! -d ${UNIXDIR} ]; then echo Cannot create ${UNIXDIR}; exit 1; fi

cd ${UNIXDIR}

LOGFILE=${UNIXDIR}/log

#>${LOGFILE}

Size=6157

Check_Space () { # Check Disk Space
  checkDIR=$1
  checkSIZE=$2
  checkPRODUCT=$3  

  set `df $checkDIR`
  Disk_Space=$3

  if [ $Disk_Space -lt $checkSIZE ]
  then
    echo ${checkPRODUCT} requires ${checkSIZE} blocks.
    echo ${checkDIR} has only ${Disk_Space} free blocks.
    exit 1
  fi
}

#
# Get responses to prompts
#
if [ "$5" = "-y" ]
then
   answer=y
   helpanswer=y
   trainanswer=y
else
   echo
   echo I/PDM depends on I/NFM.
   echo
   echo WARNING...WARNING
   echo 
   echo Install NFM before installing this version of I/PDM!!!!
   echo 
   echo NFM 3.0.0.08, Informix 4.10, and RIS 2.5 are all required before 
   echo installtion of I/PDM. 
   echo
   echo I/PDU 2.00.00.32 is also required for this version of PDM
   echo
   echo CAUTION:
   echo The 2.0.0 release of I/PDM requires the 2.0.0 release of I/PDU.
   echo If you are an existing user of PDU/PDM, please read the
   echo 'README' file associated with this product.  This file contains
   echo more information about the significant architectural and schema
   echo changes in 2.0.0 I/PDM.   This file should be reviewed before
   echo downloading I/PDU or I/PDM.  For those who want to continue using
   echo the current 1.3.0 I/PDM schema, you may download the 1.3.0 I/PDM.
   echo
   echo Any databases created with a previous version of I/PDM should be converted
   echo using the I/PDM database converter corresponding to V2.0.0.  Please
   echo read your Delivery Letter.
   echo
   echo The standard I/PDM platform requires approximately ${Size} blocks.
   echo "Install the standard I/PDM platform locally (y/n) ? [y] -> \c"
   read answer; : ${answer:=y}
   answer=`echo $answer | cut -c1-1`
   echo
   answer131=`getanswer "Install the 2.0.0 release of I/PDM (y/n) ? " "n"`

   if [ "$answer131" = "n" ]
   then
   echo
   answer130=`getanswer "Install the 1.3.0 release of I/PDM (y/n) ? " "y"`

   echo	
   helpanswer=`getanswer "Install the I/PDM Help Files locally (y/n) ? " "y"`
   fi
fi

#
# Load I/PDM
#

if [ "$answer" = "y" ]
then
    Check_Space $UNIXDIR $Size "I/PDM"

    echo
    echo Installing I/PDM in $UNIXDIR
    echo Installing I/PDM in $UNIXDIR >>$LOGFILE 2>&1
    date >>$LOGFILE 2>&1

  if [ "$answer131" = "y" ]
  then
    if [ -f /etc/nfmd.conf ]
    then
   server_line=`grep -n "PDMserver" /etc/nfmd.conf | \
         sed s/\ \ /\ /g | \
         cut -f1 -d":"`
   new_line="11!nfmadmin!$UNIXDIR/bin/PDMserver TCP!"
   if (test "$server_line" = "" )
	then
		echo $new_line >> /etc/nfmd.conf
	else
		echo "${server_line}c\n$new_line\n.\nw" > /usr/tmp/pdm.tmp
		ed /etc/nfmd.conf < /usr/tmp/pdm.tmp  >/dev/null 2>&1
		rm /usr/tmp/pdm.tmp
   fi

    getfile pdmbin.p | compress -d | cpio -ivmud >>$LOGFILE 2>&1
    AOK=$?
    if [ "$AOK" != "0" ] ; then exit $AOK; fi

    getfile pdmconfig.p | compress -d | cpio -ivmud >>$LOGFILE 2>&1
    AOK=$?
    if [ "$AOK" != "0" ] ; then exit $AOK; fi
    getfile pdmdbasupport.p | compress -d | cpio -ivmud >>$LOGFILE 2>&1
    AOK=$?
    if [ "$AOK" != "0" ] ; then exit $AOK; fi
    else echo "Must Download NFM before PDM";exit $AOK; fi
  else
    if [ "$answer130" = "y" ]
    then
       getfile pdmbin130.p | compress -d | cpio -ivmud >>$LOGFILE 2>&1
       AOK=$?
       if [ "$AOK" != "0" ] ; then exit $AOK; fi

       if [ "$helpanswer" = "y" ]
       then
	  echo
	  echo Installing I/PDM Help Files in $UNIXDIR
	  echo Installing I/PDM Help Files in $UNIXDIR >>$LOGFILE 2>&1
	  date >>$LOGFILE 2>&1

          getfile pdmhelp130.p | compress -d | cpio -ivmud >>$LOGFILE 2>&1
          AOK=$?
          if [ "$AOK" != "0" ] ; then exit $AOK; fi
       fi
     fi
   fi
fi
restatus=$?
#
#  Install man entry
echo
echo "Installing I/PDM man pages"
echo
if [ -d /usr/ip32/sysvdoc ]
then
 mv ${UNIXDIR}/config/english/man_pdm /usr/ip32/sysvdoc/catman/i_man/man1/pdm.1
 if [ -f /usr/ip32/sysvdoc/newpage ]
  then
   man=/usr/ip32/sysvdoc/manlist
   mantmp=/usr/tmp/manlist
   if grep -l pdm.1 $man > /dev/null
    then
      sed '/\"pdm.1\"/d' $man > $mantmp
      cp $mantmp $man
      rm $mantmp
   fi
 /usr/ip32/sysvdoc/newpage /usr/ip32/sysvdoc/catman/i_man/man1/pdm.1 >> $LOGFILE
 fi
fi
#
#  Update server.dat file in inc directory.
#

if [ "$answer131" = "y" ]
then
   server_line=`grep -n "PDMserver" /usr/ip32/inc/server.dat | \
         sed s/\ \ /\ /g | \
         cut -f1 -d":"`
   new_line="11!$UNIXDIR/bin/PDMserver XNS!nfmadmin!"
   if (test "$server_line" = "" )
	then
		echo $new_line >> /usr/ip32/inc/server.dat
	else
		echo "${server_line}c\n$new_line\n.\nw" > /usr/tmp/pdm.tmp
		ed /usr/ip32/inc/server.dat < /usr/tmp/pdm.tmp  >/dev/null 2>&1
		rm /usr/tmp/pdm.tmp
   fi
   retstatus=$?

#
#  If they have tcp/ip, update /etc/services and /etc/inetd.conf
#
   if [ -d /usr/ip32/tcpip ]
   then
      server_line=`grep -n "PDMserver" /etc/services | \
               sed s/\ \ /\ /g | \
               cut -f1 -d":"`
      new_line="PDMserver  1801/tcp  none"
      if [ "$server_line" = "" ]
      then
          echo $new_line >> /etc/services
      else
          echo "${server_line}c\n$new_line\n.\nw" > /usr/tmp/pdm.tmp
          ed /etc/services < /usr/tmp/pdm.tmp  >/dev/null 2>&1
          rm /usr/tmp/pdm.tmp
      fi
      AOK=$?
      if [ "$AOK" != "0" ] ; then exit $AOK; fi

      server_line=`grep -n "PDMserver" /etc/inetd.conf | \
               sed s/\ \ /\ /g | \
              cut -f1 -d":"`
      new_line="PDMserver stream tcp nowait nfmadmin $UNIXDIR/bin/PDMserver PDMserver TCP"

      if [ "$server_line" = "" ]
      then
          echo $new_line >> /etc/inetd.conf
      else
          echo "${server_line}c\n$new_line\n.\nw" > /usr/tmp/pdm.tmp
          ed /etc/inetd.conf < /usr/tmp/pdm.tmp  >/dev/null 2>&1
          rm /usr/tmp/pdm.tmp
      fi
      AOK=$?
      if [ "$AOK" != "0" ] ; then exit $AOK; fi
    fi

#
#  Make root the owner of the product
#

   chown root `find $UNIXDIR -print`
   chgrp sys  `find $UNIXDIR -print`
else
    if [ "$answer130" = "y" ]
    then
#
# Set the mode of files.
#
	chown root  *
	chgrp sys   *
	chmod o+x   *.exe
	chmod +r    *.hlp >/dev/null 2>&1
	restatus=$?

#
#  Update server.dat file in inc directory.
#

	server_line=`grep -n "PDMserver" /usr/ip32/inc/server.dat | \
	         sed s/\ \ /\ /g | \
        	 cut -f1 -d":"`
	new_line="!11!UP!$UNIXDIR/PDMserver.exe!!"
	if (test "$server_line" = "" )
        then
                echo $new_line >> /usr/ip32/inc/server.dat
        else
                echo "${server_line}c\n$new_line\n.\nw" > /usr/tmp/pdm.tmp
                ed /usr/ip32/inc/server.dat < /usr/tmp/pdm.tmp  >/dev/null 2>&1
                rm /usr/tmp/pdm.tmp
        fi
	retstatus=$?
    fi
fi

exit $retstatus
