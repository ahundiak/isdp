
/* Include header file section */
#include        "ciminimum.h"
#include        "cimacros.h"
#include        "grdpbdef.h"
#include        "grdpb.h"
#include        "grdpbmacros.h"
#include        "growner.h"
#include	"PDUint.h"
#include	"PDUintdef.h"
#include	"PDUfile_def.h"
#include        "PDUuser.h"
#include        "PDUstr.h"
#include        "PDUprompt.h"
#include        "PDUnode.h"
#include        "PDUassy.h"
#include        "PDUcommand.h"
#include        "MEMerrordef.h"


/* External functions declaration section */
extern PDUget_context_from_refid();
extern _pdm_status();
extern _pdm_debug();
extern PDUconstruct_refid_string();
extern PDUmanage_assembly_on_located_part();
extern GRdpb_get();

main()
{
 int status;
 struct GRid refid;
 struct GRid contextid;
 struct GRmd_env mod_env;
 char refid_string[20];
 int owner_action;
 long NumberOfBytes;
 long msg;
 long BytesReceived;

 owner_action = LC_RIGID_COMP | LC_REF_HEADER | LC_REF_OBJECTS;
 ci$locate(prompt = "Locate part", obj = &(refid.objid), osnum = &(refid.osnum),
           classes = "GRreffile", owner_action = owner_action );
 status = PDUget_context_from_refid(&refid, &contextid);
 _pdm_status("PDUget_context_from_refid", status);
 if (!status)
   {
   _pdm_debug("PDUget_context_from_refid failed", 0);
   exit; 
   }
 status = PDUconstruct_refid_string(&refid, &contextid, refid_string);
 _pdm_status("PDUconstruct_refid_string", status);

 status = PDUmanage_assembly_on_located_part(refid_string);
 _pdm_status("PDUmanage_assembly_on_located_part", status);

 exit;
}
