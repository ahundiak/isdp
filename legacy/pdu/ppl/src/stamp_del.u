#include "ciminimum.h"
#include "cimacros.h"
#include "exmacros.h"

#include "OMindex.h"
#include "OMprimitives.h"

#include "DItypedef.h"
#include "DIdef.h"
#include "DIglob.h"
#include "DIprims.h"
#include "DImacros.h"
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>
#include <PDUstr.h>
#include <PDUerror.h>
#include <partdef.h>
#include <partmacros.h>
#include <PDUgrpart.h>
#include <PDUintdef.h>

extern _pdm_debug();
extern _pdm_status();
extern malloc();
extern free();
extern DIgive_pathname();
extern DIfind();
extern DImain();
extern DImkpath();
extern strstr();
extern strtok();
extern PDUload_assy_struct_buffer();
extern PDUadd_assy_struct_from_buffer();
extern PDUrmdir();
extern PDUextract_dir_value();
extern PDUupdate_attach_info();
extern PDUremove_assembly();
extern PDUfill_in_string();
extern PDUget_all_GRpart_ids();
extern PDUget_GRpart_all_attrs();
extern COpart_attr_func();
extern COpart_construct_func();
extern PDUstrip_dir_entry();
extern strstr();
extern PDUremove_PDU_file_stamp();
extern PDUevaluate_exp();
extern PDUis_PDU_design_file();

main()
{
long msg;
long NumberOfBytes,BytesReceived;
int sts;
int status;
char filename[DI_PATH_MAX];
char tmp_filename[DI_PATH_MAX];
struct GRmd_env mod_env;
char *ptr;
int model_found;

ptr = NULL;
model_found = FALSE;


NumberOfBytes = sizeof(mod_env);
sts = ci$get_module_info(md_env = &mod_env);
di$give_pathname(osnum = mod_env.md_id.osnum, pathname = filename);
strcpy(tmp_filename, filename);
ptr = strstr(tmp_filename, ".a");
if (ptr != NULL)
   model_found = TRUE;
else
   {
   ptr = strstr(tmp_filename, ".n");
    if (ptr != NULL)
      model_found = TRUE;
    }
if (!model_found)
  {
   if (PDUis_PDU_design_file(&mod_env))
     status = PDUremove_PDU_file_stamp(mod_env);
    begincmd("save = y");
    endcmd();
   }
}
