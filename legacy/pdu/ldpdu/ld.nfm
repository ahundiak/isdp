
if [ "$TARG" = "c100" ]
then
ar -x ${NFM}/lib$TARG/libnfmr.a NFMRtic.1
mv NFMRtic.1 ${PDU}/lib/$TARG/NFMRtic.o
fi
if [ "$TARG" = "c400" ]
then
ar -x ${NFM}/lib$TARG/libnfmr.a NFMRtic.4
mv NFMRtic.4 ${PDU}/lib/$TARG/NFMRtic.o
fi

rm kumar.o
rm PDUdbastub.o

if [ "$TARG" = "c100" ]
then
echo "Compile kumar.c for c100"
echo ""
acc -ansi -O3 -c kumar.c
acc -ansi -O3 -c PDUdbastub.c
fi
if [ "$TARG" = "c400" ]
then
echo "Compile kumar.c for c400"
echo ""
acc -ansi -O3 -Atarg=c400 -c kumar.c
acc -ansi -O3 -Atarg=c400 -c PDUdbastub.c
fi

echo
echo "linking NFMlib.o"
echo
ld \
	-u _MEMno_buffers \
	-u _MEMwrite \
	-u _MEMsplit_copy_buffer \
	-u _NETclose_c \
	-u _NETclose_s \
	-u _NETbuffer_receive_s \
	-u _NETbuffer_send_s \
	-u _MEMreset_buffer_no \
	-u _MEMbuffer_size \
	-u _MEMwrite_format \
	-u _NETbuffer_receive_c \
	-u _MEMreset_buffer \
	-u _MEMopen \
	-u _MEMbuild_array \
	-u _MEMappend \
	-u _MEMwrite_data \
	-u _MEMprint_buffer \
	-u _NETbuffer_send_c \
	-u _NETfmu_receive \
	-u _NETfmu_rcmd \
	-u _NETfmu_connect \
	-u _NETfmu_disconnect \
	-u _MEMprint_buffers \
	-u _MEMbuild_struct \
	-u _MEMclose \
	-u _MEMcopy_row \
	-u _NFMconnect \
	-u _NFMdecrypt \
	-u _NFMls_nodes \
	-u _NFMload_user_info \
	-u _NFMget_item_no \
	-u _NFMflag_item_delete \
	-u _NFMsplit_catalog_attributes \
	-u _NFMquery_item_attributes \
	-u _NFMreset_change_table \
	-u _NFMcheck_item_owned_project \
	-u _NFMcancel_item_copy \
	-u _NFMquery_changeto_loc_attributes \
	-u _NFMcancel_item_checkout \
	-u _NFMconvert_to_set \
	-u _NFMnfs_file_remove \
	-u _NFMreset_message_struct \
	-u _NFMitem_files \
	-u _NFMcancel_item_backup_flag \
	-u _NFMupd_set_mem_co \
	-u _NFMunlock_item \
	-u _NFMget_storages_information \
	-u _WFmake_transition \
	-u _NFMchange_user_passwd \
	-u _NFMcancel_set_flag \
	-u _NFMretrieve_values \
	-u _NFMflag_set_backup \
	-u _NFMadd_user \
	-u _NFMdelete_catalog \
	-u _NFMdefine_query \
	-u _NFMset_load_item_files \
	-u _NFMall_debug \
	-u _NFMdisplay_users \
	-u _NFMget_file_information \
	-u _NFMcreate_catalog \
	-u _NFMcheckout_item \
	-u _NFMcheckout_set \
	-u _NFMdisplay_catalogs \
	-u _NFMadd_item \
	-u _NFMcancel_update_item \
	-u _NFMreset_file_information \
	-u _NFMcheckin_item \
	-u _NFMquery_project_members \
	-u _NFMquery_add_item_attributes \
	-u _NFMsearch_across_catalogs \
	-u __NFMfs_undo_recv_files \
	-u _NFMupdate_project_members \
	-u _NFMcancel_check_out_set \
	-u _NFMquery_catalog_template_n \
	-u _NFMupdate_item \
	-u _NFMretrieve_query \
	-u _NFMprepare_update_item \
	-u __NFMfs_recv_files \
	-u _NFMdisplay_querys \
	-u _NFMcancel_check_out_item \
	-u _NFMchange_working_area_passwd \
	-u _NFMchange_catalog \
	-u _NFMdelete_item \
	-u _NFMdefine_file_information \
	-u _NFM_SQL_LOCK \
	-u _NFMquery_set_members \
	-u _NFMsave_item_files \
	-u __NFMfree_linked_lists \
	-r -o ${PDU}/config/dload/init/NFMlib.o \
        ${PDU}/lib/$TARG/NFMRtic.o \
	${NFM}/lib$TARG/libnfma.a \
        ${NFM}/lib$TARG/libnfmu.a \
        ${NFM}/lib$TARG/libnfmlists.a \
        ${NFM}/lib$TARG/libnfmsac.a \
        ${NFM}/lib$TARG/libcmdtools.a \
        ${NFM}/lib$TARG/libnfmwf.a \
        ${NFM}/lib$TARG/libdbtools.a \
        ${NFM}/lib$TARG/libnfmtools.a \
        ${NFM}/lib$TARG/libnfmsql.a \
        ${NFM}/lib$TARG/libfilexfer.a \
        ${NFM}/lib$TARG/libtli.a \
        ${NFM}/lib$TARG/libsystools.a \
        ${NFM}/lib$TARG/libnfmmem.a \
        ${NFM}/lib$TARG/libnfmnet.a \
        ${NFM}/lib$TARG/libtli.a \
        ${NFM}/lib$TARG/libnfmerr.a \
        ${PDU}/ldpdu/kumar.o 

echo
echo "linking PDUdba.o"
echo
ld \
        -u _dba_save_default \
        -u _dba_setup \
        -u _dba_map_character \
        -u _dba_process_menu \
        -u _dba_process_script \
        -u _dba_set_initial_notify \
        -u _dba_set_completion_notify \
        -u _dba_get_mnunum \
        -u _dba_get_menu_by_name \
        -u _dba_schema_select \
        -u _dba_execute_default \
        -u _dba_single_report \
        -u _dba_set_variable_start \
        -u _dba_set_field_justify \
        -u _dba_display_report \
	-r -o ${PDU}/config/dload/init/PDUdba.o \
	${DBA}/lib/$TARG/script.o \
	${DBA}/lib/$TARG/dba.a \
	${DBA}/lib/$TARG/no_mcsl.o \
	${PDU}/ldpdu/PDUdbastub.o 

echo
echo
echo "PDU images created successfully."
echo
ls -lsat ${PDU}/config/dload/init/*.o
echo
