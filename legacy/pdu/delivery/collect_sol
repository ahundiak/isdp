if (test $# = 0)
	then
	echo "Need a time argument"
	exit
	fi

for arg in 1
do
    cd ../
	chmod 755 ppl/bin/*.e
	chmod 755 config/commands
	chmod 755 config/tables
	chmod 755 config/dload/init
	chmod 755 config/dload/patch
	chmod 755 config/dload/cmds
	chmod 755 config/dload/prod
	chmod 755 config/dload/prod/pdu
	chmod 755 config/dload/prod/pdm
	chmod 755 config/english
	chmod 755 config/english/menus
	chmod 644 config/cmd_tbl_list
	chmod 644 config/language
	chmod 644 config/commands/*
	chmod 644 config/tables/*
	chmod 644 config/dload/init/*
	chmod 644 config/dload/patch/*
	chmod 644 config/dload/prod/*
	chmod 644 config/dload/prod/pdu/*
	chmod 644 config/dload/prod/pdm/*
        chmod 644 config/english/menus/*

    cd config/english/
	chmod 755 forms
	chmod 755 icons
	chmod 755 messages
	chmod 644 message_file
	chmod 644 man_pdu 
	chmod 644 forms/*
	chmod 644 messages/*
	chmod 644 HELPINFO
	chmod 644 HELPFILE
	chmod 644 icons/*
    cd ../../

	touch $1 `find ppl/bin/*.e -print`
	touch $1 config/*
	touch $1 config/dload/init/*
	touch $1 config/dload/prod/pdu/*
	touch $1 config/dload/prod/pdm/*
#       touch $1 config/dload/patch/*
	touch $1 config/english/*
    cd config/english/
	touch $1 `find forms -print`
	touch $1 `find icons -print`
	touch $1 `find messages -print`

    cd ../../
	touch $1 `find config/commands -print`
	touch $1 `find config/tables -print`
	touch $1 `find training -print`

cp $PDM/include/PDMstruct.h $PDU/include
cp $PDM/pdmapi/include/PDUmac_struc.h $PDU/include

	find \
	ppl/bin/*.e \
	include/PDMfile_mac.h \
	include/PDMlog_macro.h \
	include/PDMmacros.h \
	include/PDMstruct.h \
	include/PDMmacro_fun.h \
	include/PDUgrmacros.h \
	include/PDUload_free.h \
	include/PDUmac_struc.h \
	include/PDUpart_mac.h \
	include/PDUerror.h \
	include/PDUnode.h \
	include/PDUppl_hdr.h \
	-print | cpio -ov | compress > pdubin.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdubin.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdubin.ssl
		quit
		END
        rm pdubin.ssl
	echo

rm $PDU/include/PDMstruct.h
rm $PDU/include/PDUmac_struc.h

	find \
	config/cmd_tbl_list     \
	config/class_defns     \
	config/commands \
	config/dload/init/* \
	config/dload/prod/pdu/* \
	config/dload/prod/pdm/* \
	config/dload/patch/* \
	config/dload/cmds/* \
	config/english/forms \
	config/english/icons \
	config/english/message_file \
	config/english/man_pdu \
	config/english/messages \
	config/language \
	config/tables/command_table \
	config/tables/start_table \
	config/tables/ppl_table \
	config/tables/pdm_table \
	-print | sort | cpio -ovc | compress > pduconf.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pduconf.ssl ${WS_DIR}/i_pdu${VERREF}sol/pduconf.ssl
		quit
		END
	rm pduconf.ssl
	echo

	find \
		config/english/HELPFILE \
		config/english/HELPINFO \
	-print | sort | cpio -ovc | compress > pduhelp.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pduhelp.ssl ${WS_DIR}/i_pdu${VERREF}sol/pduhelp.ssl
		quit
		END
        rm pduhelp.ssl
	echo

	find dbasupport \
		-print | sort | cpio -ovc | compress > pdudbaspt.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdudbaspt.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdudbaspt.ssl
		quit
		END
	rm pdudbaspt.ssl
	echo

	cd $PDM
	find \
	lib/$TARG/PDUapilib.a \
	lib/$TARG/PDMapilib.a \
	lib/$TARG/PDMapi.a \
	lib/$TARG/PDMstub.o \
	lib/$TARG/PDMapifrmstb.o \
	lib/$TARG/gethost.o \
	lib/$TARG/solstub.o \
	-print | sort | cpio -ovc | compress > apilib.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apilib.ssl ${WS_DIR}/i_pdu${VERREF}sol/apilib.ssl
		quit
		END
	rm apilib.ssl
	echo
	
	cd $PDM/pdmapi/include
	find . -print | sort | cpio -ovc | compress > apiincl.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apiincl.ssl ${WS_DIR}/i_pdu${VERREF}sol/apiincl.ssl
		quit
		END
	rm apiincl.ssl
	echo
	
	cd $PDM/pdmapi
	find apiexamples -print | sort | cpio -ovc | compress > apiexam.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apiexam.ssl ${WS_DIR}/i_pdu${VERREF}sol/apiexam.ssl
		quit
		END
	rm apiexam.ssl
	echo
		
	cd $NFM/sollib
	find libnfma.a libnfmu.a libnfmlists.a libnfmsac.a libcmdtools.a libnfmwf.a libdbtools.a libnfmtools.a libnfmsql.a libfilexfer.a libtli.a libsystools.a libnfmmem.a libnfmnet.a libtli.a libnfmerr.a alter.a \
	-print | sort | cpio -ovc | compress > nfmapi.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put nfmapi.ssl ${WS_DIR}/i_pdu${VERREF}sol/nfmapi.ssl
		quit
		END
	rm nfmapi.ssl
	echo

	cd $PDU/lib/$TARG
	find  dbnuc.a nucleus.a gui.a report.a script.a dbforms.a -print | sort | \
	cpio -ovc | compress > dbaapi.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put dbaapi.ssl ${WS_DIR}/i_pdu${VERREF}sol/dbaapi.ssl
		quit
		END
	rm dbaapi.ssl
	echo
	
	cd $RIS/lib/$TARG
	find ris.a -print | sort | cpio -ovc | compress > risapi.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put risapi.ssl ${WS_DIR}/i_pdu${VERREF}sol/risapi.ssl
		quit
		END
	rm risapi.ssl
	echo

	cd $UMS/lib/sun4
	find libUMS.a -print | sort | cpio -ovc | compress > umsapi.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put umsapi.ssl ${WS_DIR}/i_pdu${VERREF}sol/umsapi.ssl
		quit
		END
	rm umsapi.ssl
	echo

	cd $PDU
	find training \
		-print | sort | cpio -ovc | compress > pdutrain.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdutrain.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdutrain.ssl
		quit
		END
	rm pdutrain.ssl
	echo

	find ppl/examples \
		-print | sort | cpio -ovc | compress > pdupplex.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdupplex.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdupplex.ssl
		quit
		END
	rm pdupplex.ssl
	echo

	cd $PDU/messages
        find . -print | sort | cpio -ovc | compress > pdumsgsrc.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdumsgsrc.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdumsgsrc.ssl
		quit
		END
	rm pdumsgsrc.ssl
	echo

	cd $PDU/pal/src/funk
        find GRpuldwnlst.so -print | sort | cpio -ovc | compress > pdumds.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdumds.ssl ${WS_DIR}/i_pdu${VERREF}sol/pdumds.ssl
		quit
		END
	rm pdumds.ssl
	echo

# MJG - 9/14/95 - NFM is now available for Sparc Solaris
#        cd /etc
#	find \
#	nfmd.conf \
#	init.d/nfm \
#        rc0.d/K99nfm \
#        rc2.d/S99nfm \
#	-print | sort | cpio -ovc | compress > nfmdconf.ssl
#        ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put nfmdconf.ssl ${WS_DIR}/i_pdu${VERREF}sol/nfmdconf.ssl
#		quit
#		END
#	rm nfmdconf.ssl
#	echo

# MJG - 9/14/95 - NFM is now available for Sparc Solaris
#        cd $INGRHOME/nfm/bin
#        find \
#        NFMfileserver \
#        NFMdaemon \
#	-print | sort | cpio -ovc | compress > nfmbin.ssl
#        ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put nfmbin.ssl ${WS_DIR}/i_pdu${VERREF}sol/nfmbin.ssl
#		quit
#		END
#	rm nfmbin.ssl
#	echo

#	cd $MODEL
#        find bin/Model \
#	-print | sort | cpio -ovc | compress > /usr2/tmp/model.ssl
#        ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put /usr2/tmp/model.ssl ${WS_DIR}/i_pdu${VERREF}sol/model.ssl
#		quit
#		END
#	rm /usr2/tmp/model.ssl
#	echo

#	cd $PDU
#        find Mds \
#	-print | sort | cpio -ovc | compress > Mds.ssl
#        ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put Mds.ssl ${WS_DIR}/i_pdu${VERREF}sol/Mds.ssl
#		quit
#		END
#	rm Mds.ssl
#	echo

# MJG - 9/14/95 - fix has been integrated in EMS 3.2
#        cd $PDU/button_fix
#        find exwfi.so -print | cpio -ovc | compress > button.ssl
#        ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put button.ssl ${WS_DIR}/i_pdu${VERREF}sol/button.ssl
#		quit
#		END
#	rm button.ssl
#	echo
#	cd $PDU/delivery

        cd $PDU/ris_fix
        find ris_fix -print | cpio -ovc | compress > ris_fix.ssl
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put ris_fix.ssl ${WS_DIR}/i_pdu${VERREF}sol/ris_fix.ssl
		quit
		END
	rm ris_fix.ssl
	echo

	cd $PDU/delivery

done
