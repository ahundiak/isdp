if (test $# = 0)
	then
	echo "Need a time argument"
	exit
	fi

for arg in 1
do
    cd ../
	chmod 755 ppl/bin/*.e
	chmod 755 config/commands
	chmod 755 config/tables
	chmod 755 config/dload/init
	chmod 755 config/dload/patch
	chmod 755 config/dload/cmds
	chmod 755 config/dload/prod
	chmod 755 config/dload/prod/pdu
	chmod 755 config/dload/prod/pdm
	chmod 755 config/english
	chmod 755 config/english/menus
	chmod 644 config/cmd_tbl_list
	chmod 644 config/commands/*
	chmod 644 config/tables/*
	chmod 644 config/dload/init/*
	chmod 644 config/dload/patch/*
	chmod 644 config/dload/prod/*
	chmod 644 config/dload/prod/pdu/*
	chmod 644 config/dload/prod/pdm/*
        chmod 644 config/english/menus/*

    cd config/english/
	chmod 755 forms
	chmod 755 icons
	chmod 755 messages
	chmod 644 message_file
	chmod 644 man_pdu 
	chmod 644 forms/*
	chmod 644 messages/*
	chmod 644 HELPINFO
	chmod 644 HELPFILE
	chmod 644 icons/*
    cd ../../

	touch $1 `find ppl/bin/*.e -print`
	touch $1 config/*
	touch $1 config/dload/init/*
	touch $1 config/dload/prod/pdu/*
	touch $1 config/dload/prod/pdm/*
#       touch $1 config/dload/patch/*
	touch $1 config/english/*
    cd config/english/
	touch $1 `find forms -print`
	touch $1 `find icons -print`
	touch $1 `find messages -print`

    cd ../../
	touch $1 `find config/commands -print`
	touch $1 `find config/tables -print`
	touch $1 `find training -print`

	find \
	ppl/bin/*.e \
	include/PDMfile_mac.h \
	include/PDMlog_macro.h \
	include/PDMmacros.h \
	include/PDMstruct.h \
	include/PDMmacro_fun.h \
	include/PDUgrmacros.h \
	include/PDUload_free.h \
	include/PDUmac_struc.h \
	include/PDUpart_mac.h \
	include/PDUerror.h \
	include/PDUnode.h \
	include/PDUppl_hdr.h \
	-print | cpio -ov -H odc | compress > pdubin.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdubin.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdubin.sgi
		quit
		END
	rm pdubin.sgi
# copy mcf.so fieldTrack.so to path dir to collect for sgi only
	cp ${PDU}/lib/${TARG}/EXfile_form.so ${PDU}/config/dload/patch 
#	cp ${PDU}/lib/${TARG}/EMpuldwnlst.so ${PDU}/config/dload/patch 
	cp ${PDU}/lib/${TARG}/mcf.so ${PDU}/config/dload/patch 
	cp ${PDU}/lib/${TARG}/fieldTrack.so ${PDU}/config/dload/patch 

	find \
	config/class_defns \
	config/cmd_tbl_list     \
	config/commands \
	config/dload/init/* \
	config/dload/prod/pdu/* \
	config/dload/prod/pdm/* \
	config/dload/patch/* \
	config/dload/cmds/* \
	config/english/forms \
	config/english/icons \
	config/english/message_file \
	config/english/man_pdu \
	config/english/messages \
	config/language \
	config/tables/command_table \
	config/tables/start_table \
	config/tables/ppl_table \
	config/tables/pdm_table \
	-print | sort | cpio -ov -H odc | compress > pduconf.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pduconf.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pduconf.sgi
		quit
		END
	rm pduconf.sgi

	find \
		config/english/HELPFILE \
		config/english/HELPINFO \
	-print | sort | cpio -ov -H odc | compress > pduhelp.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pduhelp.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pduhelp.sgi
		quit
		END
        rm pduhelp.sgi

	find dbasupport \
		-print | sort | cpio -ov -H odc | compress > pdudbaspt.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdudbaspt.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdudbaspt.sgi
		quit
		END
	rm pdudbaspt.sgi

	cd $PDM
	find \
	lib/$TARG/PDUapilib.a \
	lib/$TARG/PDMapilib.a \
	lib/$TARG/PDMapi.a \
	lib/$TARG/PDMstub.o \
	lib/$TARG/PDMapifrmstb.o \
	lib/$TARG/gethost.o \
	lib/$TARG/sgistub.o \
	-print | sort | cpio -ov -H odc | compress > apilib.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apilib.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/apilib.sgi
		quit
		END
	rm apilib.sgi
	
	cd $PDM/pdmapi/include
	find . -print | sort | cpio -ov -H odc | compress > apiincl.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apiincl.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/apiincl.sgi
		quit
		END
	rm apiincl.sgi
	
	cd $PDM/pdmapi
	find apiexamples -print | sort | cpio -ov -H odc | compress > apiexam.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put apiexam.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/apiexam.sgi
		quit
		END
	rm apiexam.sgi
		
	cd $NFM/lib$TARG
	find libnfma.a libnfmu.a libnfmlists.a libnfmsac.a libcmdtools.a libnfmwf.a libdbtools.a libnfmtools.a libnfmsql.a libfilexfer.a libtli.a libsystools.a libnfmmem.a libnfmnet.a libtli.a libnfmerr.a alter.a\
	-print | sort | cpio -ov -H odc | compress > nfmapi.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put nfmapi.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/nfmapi.sgi
		quit
		END
	rm nfmapi.sgi

	cd $DBASRC/lib_irix
	find \
	report.a \
	script.a \
	dbnuc.a \
	dbforms.a \
	gui.a \
	nucleus.a \
	-print | sort | \
	cpio -ov -H odc | compress > dbaapi.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put dbaapi.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/dbaapi.sgi
		quit
		END
	rm dbaapi.sgi
	
	cd $RIS/lib/$TARG
	find ris.a -print | sort | cpio -ov -H odc | compress > risapi.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put risapi.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/risapi.sgi
		quit
		END
	rm risapi.sgi

	cd $UMS/lib/mips
	find libUMS.a -print | sort | cpio -ov -H odc | compress > umsapi.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put umsapi.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/umsapi.sgi
		quit
		END
	rm umsapi.sgi

	cd $PDU
	find training \
		-print | sort | cpio -ov -H odc | compress > pdutrain.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdutrain.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdutrain.sgi
		quit
		END
	rm pdutrain.sgi

	find ppl/examples \
		-print | sort | cpio -ov -H odc | compress > pdupplex.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdupplex.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdupplex.sgi
		quit
		END
	rm pdupplex.sgi

        cd $PDU/messages
	find . -print | sort | cpio -ov -H odc | compress > pdumsgsrc.sgi
        ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdumsgsrc.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdumsgsrc.sgi
		quit
		END
	rm pdumsgsrc.sgi

	cd $PDU/ldpdu/etc
	find \
	nfmd.conf \
	init.d/nfm \
	rc0.d/K99nfm \
	rc2.d/S99nfm \
	-print | sort | cpio -ov -H odc | compress > nfmdconf.sgi
	ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put nfmdconf.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/nfmdconf.sgi
		quit
		END
	rm nfmdconf.sgi

	cd $INGRHOME/nfm/bin
	find \
	NFMfileserver \
	NFMdaemon \
	-print | sort | cpio -ov -H odc | compress > nfmbin.sgi
	ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put nfmbin.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/nfmbin.sgi
		quit
		END
	rm nfmbin.sgi

#        cd $PDU
#	find Mds -print | cpio -ov -H odc | compress > Mds.sgi
#	ftp -n ${DELNODE} <<- END
#		user root ${DEL_PSWD}
#		binary
#		put Mds.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/Mds.sgi
#		quit
#		END
#	rm Mds.sgi

	cd $PDU/mds
	find \
	GRpuldwnlst.so \
	-print | sort | cpio -ovc | compress > pdumds.sgi
	ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put pdumds.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/pdumds.sgi
		quit
		END
	rm pdumds.sgi

        cd $PDU/button_fix
	find exwfi.so -print | cpio -ov -H odc | compress > button.sgi
	ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put button.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/button.sgi
		quit
		END
	rm button.sgi

        cd $PDU/ris_fix
	find ris_fix -print | cpio -ov -H odc | compress > ris_fix.sgi
	ftp -n ${DELNODE} <<- END
		user root ${DEL_PSWD}
		binary
		put ris_fix.sgi ${WS_DIR}/i_pdu${VERREF}dpsgi/ris_fix.sgi
		quit
		END
	rm ris_fix.sgi

	cd $PDU
	find include \
	-print | sort | cpio -ovc | compress > pduinclude.sgi
	ftp -n $DELNODE <<- END
		user root $DEL_PSWD
		binary
		put pduinclude.sgi $WS_DIR/i_pdu${VERREF}dpsgi/pduinclude.sgi
		quit
		END
	rm pduinclude.sgi
	echo

	find lib/$TARG \
	-print | sort | cpio -ovc | compress > pdulib.sgi
	ftp -n $DELNODE <<- END
		user root $DEL_PSWD
		binary
		put pdulib.sgi $WS_DIR/i_pdu${VERREF}dpsgi/pdulib.sgi
		quit
		END
	rm pdulib.sgi
	echo

	cd $PDM
	find lib/$TARG \
	-print | sort | cpio -ovc | compress > pdmlib.sgi
	ftp -n $DELNODE <<- END
		user root $DEL_PSWD
		binary
		put pdmlib.sgi $WS_DIR/i_pdu${VERREF}dpsgi/pdmlib.sgi
		quit
		END
	rm pdmlib.sgi
	echo

        cd $PDU/delivery

done
