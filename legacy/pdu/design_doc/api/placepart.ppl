Date:     08/16/93
Author:   Jenny Parris
Title:    Place Part PPL Macro
Revision: 5

Abstract:
The place part macro places a graphic part, non-graphic part, and
any parametric part.  The macro can also "place but not position"
any PDM part.

Macro Definition:

pdm$place_part(
               status
               part
               n_catalogname
               n_itemname
               n_itemrev
               n_cofilename
               p_usageid
               p_viewname
               p_quantity
               p_explode
               p_attach
               p_alttagno
               p_incstr
               p_incbom
               dyn_count           
               dyn_names
               dyn_values
               dynloc_count
               dynloc_names
               dynloc_id
               origin
               x_point
               y_point
               position_cs
              )     
Argument       Data Type      I/O  Description
status         *long          O    Return status
part           *struct GRid   O    object ID of placed part
n_catalogname  *char          I    catalog name
n_itemname     *char          I    part number
n_itemrev      *char          I    part revision
n_cofilename   *char          I    file name
p_usageid      *char          I    part usage identification
p_viewname     *char          I    graphic view name
p_quantity     double         I    part quantity
p_explode      *char          I    explode in BOM (Y or N)
p_attach       *char          I    attach file (Y or N)
p_alttagno     *char          I    unique alternate tag number
p_incstr       *char          I    background part (Y or N)
p_incbom       *char          I    include in BOM (Y or N)
dyn_count      int            I    dynamic attribute count
dyn_names      **char         I    dynamic attribute name array
dyn_values     **char         I    dynamic attribute value array
dynloc_count   int            I    dynamic locate input count
dynloc_names   **char         I    dynamic locate input names
dynloc_id      *struct GRid   I    dynamic locate input object ID
origin         double[3]      I    position by three point origin point 
x_point        double[3]      I    position by three point x-axis point
y_point        double[3]      I    position by three point y-axis point
position_cs    *struct GRid   I    position by coordinate system


Error Handling:

Status Returns
PDM_E_CAT_NULL
PDM_E_PART_NULL
PDM_E_REV_NULL
PDM_E_CAT_NOT_FOUND
PDM_E_PART_NOT_FOUND
PDM_E_BAD_DYNLOC
PDM_E_BAD_DYNATTR
PDM_S_SUCCESS
PDM_E_DYN_TRIP
PDM_E_DYN_LOC_TRIP
PDM_E_BAD_DYN_LOC_ERROR
PDM_E_DUPLICATE_USAGEID
PDM_E_LENGTH_USAGEID
PDM_E_VIEWNAME_NOT_EXIST
PDM_E_INVALID VALUE
PDM_E_BAD_POSITION
PDM_E_DUP_ALTTAGNO
PDM_E_PLACE_PART
PDM_E_PLACE_PARAMETRIC_PART

External Functions:

  pdmoPlacePart()

Assumptions:

  The user must be logged into PDM.

  EMS must be running.

Impacts:

  None.

Future:

  A way of allowing the user to place a part occurrence outside of EMS.

Input Requirements:

  Inputs n_catalogname, n_itemname, and n_itemrev are required for all part
    placements. 

Input Validation:

   If n_catalogname is NULL, set status to PDM_E_CAT_NULL and exit.

   If n_itemname is NULL, set status to PDM_E_PART_NULL and exit.

   If n_itemrev is NULL, set status to PDM_E_REV_NULL and exit.

Algorithm:

  *status = pdmoPlacePart(NULL, part, n_catalogname, n_itemname,
                          n_cofilename, p_usageid, p_viewname, p_quantity, 
                          p_explode, p_attach, p_alttagno, p_incstr, p_incbom,
                          dyn_count, dyn_names, dyn_values, dynloc_count,
                          dynloc_names, dynloc_id, origin, x_point, y_point,
                          position_cs)

  Exit.

Sample Invocation:

  A. Place by coordinate system

  struct GRid *position_cs;

  position_cs = (struct GRid *)malloc(sizeof(struct GRid));
  ci$locate(prompt = "Identify coordinate system", obj = &(position_cs->objid),
            osnum = &(position_cs->osnum));

  pdm$place_part(status = &status, part = &part,
                n_catalogname = "api_parts", n_itemname = "api_part1",
                n_itemrev = "a",p_usageid = "Test ppl",
                position_cs = position_cs);

  B. Place by three points

  double  origin[3];
  double  x_point[3];
  double  y_point[3];


  origin[0] = 0.0;
  origin[1] = 0.0;
  origin[2] = 0.0;
  x_point[0] = 1.0;
  x_point[1] = 0.0;
  x_point[2] = 0.0;
  y_point[0] = 0.0;
  y_point[1] = 1.0;
  y_point[2] = 0.0;

  pdm$place_part(status = &status, part = &part,
                n_catalogname = "api_parts", n_itemname = "api_part1",
                n_itemrev = "a",p_usageid = "Test ppl", origin = origin,
                x_point = x_point, y_point = y_point);

  C. Place with no position


  pdm$place_part(status = &status, part = &part,
                n_catalogname = "api_parts", n_itemname = "api_part1",
                n_itemrev = "a",p_usageid = "Test ppl");

Test Cases:

GRParts:

Test Case                               
-----------------------------          
NULL Catalog                               
NULL Part                                  
NULL Rev                                   
Invalid Catalog                            
Invalid Part                               
Invalid Revision                           
Invalid Usageid                            
Duplicate Usageid                          
Invalid Filename                           
Invalid Quantity                           
Invalid Viewname                           
Invalid Explode                            
Invalid Attach                             
Duplicate Alternate Tag #                  
Invalid Include in Structure               
Invalid Include in BOM                     
Invalid Dynamic Input Triplet              
Invalid 3 Point Input Triplet              
Invalid Position                           
Invalid Dynamic Attributes                 
Positionless Placement                     
Non-graphic placement                      
Place by 3 Points                          
Place by Coordinate System                 
Place/Attach by 3 Points                   
Place/Attach by C.S.                       
Place Given Usageid                        
Place Default Usageid                      
Place Given Alternate Tag #                
Place/Attach Given Viewname                
Place/Attach Default Viewname              
Place Given Dynamic Values                 
Place Default Dynamic Values               
Place Given Quantity                       
Place Default Quantity                     
Place Include in Struct = Y                
Place Include in Struct = N                
Place Include in BOM = Y                   
Place Include in BOM = N                   
Place Explode in BOM = Y                   
Place Explode in BOM = N                   

From Interface:

Test Case                            
-----------------------------          
Position Part                              
Attach Part                                
Copy Part                                  
Detach Part                                
Delete Part                               
Checkin Assembly                         

Parametric Parts:

Test Case                             
-----------------------------          
NULL Catalog                              
NULL Part                                
NULL Rev                                   
Invalid Catalog                          
Invalid Part                              
Invalid Revision                         
Invalid Usageid                         
Duplicate Usageid                      
Invalid Quantity                      
Invalid Explode                    
Duplicate Alternate Tag #                  
Invalid Include in Structure               
Invalid Include in BOM                     
Invalid Dynamic Input Triplet              
Invalid Dynamic Attributes                 
Invalid Dyn Locatable Triplet             
Invalid Dyn Locatable Names               
Positionless Placement                    
Place Given Usageid                        
Place Default Usageid                    
Place Given Alternate Tag #                
Place Given Dynamic Values                
Place Default Dynamic Values             
Place Given Quantity                       
Place Default Quantity                     
Place Include in Struct = Y                
Place Include in Struct = N                
Place Include in BOM = Y                   
Place Include in BOM = N                   

From Interface:

Test Case                              
-----------------------------           
Position Part                              
Copy Part                                  
Delete Part                                
Checkin Assembly                           

