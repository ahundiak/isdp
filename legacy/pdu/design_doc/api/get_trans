
  Author:    Mychelle Greene
  Title:     API Design Document pdmoGetPartTransitions
  Date:      8/18/93
  Revision:  6

  Abstract:  

  This API retrieves a list of the possible states that a part may be 
  transitioned to in the workflow.

  Keywords:

  Move State

  Function Protocol:
  
  pdmoGetTransitions(	cpr_catalog,
			cpr_partnum, 
			cpr_revision,
			spw_trans_list)

  Input:

	char	*cpr_catalog
	char	*cpr_partnum
	char	*cpr_revision

  Output:

	struct part_transition *spw_trans_list;

  Sample Invocation:

    status = pdmoGetPartTransitions(      "api_catalog",
                                          "api_partnum"
                                          "api_revision",
					  &trans_list);

  Input Limitations:

	cpr_catalog:	required 
			16 characters or less
			must already exist

	cpr_partnum:	required
			! * ? , : invalid characters
			must not exceed the number of characters specified 
			  at catalog creation time

	cpr_revision:	required
			! * ? , : invalid characters
			must not exceed the number of characters specified 
			  at catalog creation time

  Structures:

  struct part_transition
  {
  char                 cpr_statename[IK_STATENAME_MAX];
  char                 cpr_transition[IK_TRANSNAME_MAX];
  int                  ir_stateno;
  struct part_transition *spm_next;
  };

       cpw_statename:	the name of the state to which the part is being moved

       cpw_transition:	The name of the action that is being taken against
                        the part (i.e. reject, approve)

       iw_stateno:	the number of the state to which the part is being
                        moved

  Return Status:

	PDM_S_SUCCESS
	PDM_E_CAT_FIELD_BLANK
	PDM_E_PART_FIELD_BLANK
	PDM_E_REV_FIELD_BLANK
	PDM_E_CAT_NOT_FOUND
	PDM_I_TABLE_LOCKED 

	PDM_E_USER_NOT_LOGGED_IN

  External Functions:
 
  PDUcheck_if_logged_in()
  PDUmessage_trans()
  PDUvalidate_catalog()
  PDMcheck_partnum()
  PDMget_trans()
  PDUload_transition_structure()
 
  Assumptions:
  
  The pdmoFreeTransStructure API should be called to free up this structure
  when the user is through with it.
 
  Impacts:
  
  None
 
  Future:
  
  None

  Test Cases:

    Success

  Retrieve the possible transitions for an existing part.

    Failure

  Retrieve the possible transitions for a part that does not exist.

  Algorithm:

- check pdmcheck_log_in
        - if status != SUCCESS, return status

- check catalog for NULL and NULLSTRING
        - if NULL, return PDM_I_ENTER_CATALOG
 
- check partnum for NULL and NULLSTRING
        - if NULL, return PDM_I_ENTER_PART
 
- check revision for NULL and NULLSTRING
        - if NULL, return PDM_I_ENTER_REVISION
 
- call PDUvalidate_catalog
        - if status != SUCCESS, return status
 
- call PDMcheck_partnum
        - if status != SUCCESS, return status

- call PDMget_trans
        - if status != SUCCESS, return status

- call PDUload_transition_structure
        - if status != SUCCESS, return status

- set status
- return
