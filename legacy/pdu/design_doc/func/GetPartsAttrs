
Design document for Changes in Part Attributes Retrival for 
Regular and Parametric Parts

Abstract:
This describes the changes in the attributes retrieval for parametric
and standard parts during part operations.

Keywords:
Attributes, Parametric Parts, Standart Parts, Add Part,
Change Part, Delete Part.

For Standard Parts:

int PDMqry_catalog_attributes (char *cpr_Mode, MEMptr *xppw_AttributeBufrs)

 Input :
   char *cpr_Mode                : Mode for attributes retrieval. 
                                   Can only have "R" (Read)    Review Part
                                     or "W" (Write)   Add Part
                                     or "U" (Update)  Change Part
                                   Required.
 Output:

  MEMptr *xppw_AttributeBufrs    : MEMappended list of buffers 
                                   containing attribute, data and
                                   list buffers

For Parametric Parts:

  int PDMquery_parm_catalog_attributes ( MEMptr *xppw_AttributeBufr,
                                          MEMptr *xppw_DataBufrs,
                                          MEMptr *xppw_ListBufrs)

  Input :
   PDMexec Structure.

  Output :
    
  MEMptr *xppw_AttributeBufr    : Attribute buffer
    
  MEMptr *xppw_Data             : Data buffer

  MEMptr *xppw_ListBufrs        : List Buffers



Dependencies:
 - Assumption
     The catalogs and parts exist.
     Global structure information required for validate access.
       

  - Existing functions called:
     PDMstop_transaction
     PDMstart_transaction
     PDMload_part_info
     PDMreset_ncoout
     PDMget_fmgr_values
     PDMattach_macro_library



Algorithm:

Algorithm for PDMqry_catalog_attributes:

 1.  If add_part, skip steps 2, 3 & 4.

 2.  Load Part Info
  
 3.  Check part status, parttype, itemlock & pending flag.
               Return error during check if found

 4.  Save the lock status and lock the part (set n_itemlock to N)

 5. Get the table nos for the catalog and f_catalog from nfmtables.
  
 6. Depending on cpr_mode, Get a list of all the attribute names 
    and nos for the catalog and f_catalog
      Mode = R  -> All readable attributes
      Mode = W  -> All writable attributes
      Mode = U  -> All updatable attributes
    This forms the attribute buffer.

 7. If the mode is U, query the existing values from the catalog
    and f_catalog table and load them in data buffer. else,
    create a null buffer with as many columns as there are rows
    in attr buffer.

 8. Make one query for all the attributes in nfmvalues table to
    get information for default values for data buffer and
    list information for list buffer.

 9. MEM append all the three buffers to return buffer
   
10.  Return success
  

  
Algorithm for PDMquery_parm_catalog_attributes:


 1. Get the table no for the catalog from nfmtables.
  
 2. Get a list of all the attribute names and nos for the catalog
    This forms the attribute buffer.

 3. Create a null buffer with as many columns as there are rows
    in attr buffer.

 4. Make one query for all the attributes in nfmvalues table to
    get information for default values for data buffer and
    list information for list buffer.

 5.  Return success
  
     

Return Status:
 
PDM_S_SUCCESS
PDM_E_NO_CAT_ENTRY
PDM_E_APPEND_BUFFER
PDM_E_BAD_CLASS
PDM_E_BAD_STATE
PDM_E_BAD_TRANSITION
PDM_E_BUFFER_FORMAT
PDM_E_BUILD_ARRAY
PDM_E_FROM_MAKE_TRANS
PDM_E_GET_ATTRIBUTES
PDM_E_GET_DATA
PDM_E_INVALID_INPUT
PDM_E_NOT_IN_ACL
PDM_E_NO_CHANGEABLE_PARTS
PDM_E_NO_TRANSITIONS
PDM_E_OPEN_BUFFER
PDM_E_PART_NOT_CHECKEDIN
PDM_E_QUERY_TABLE_TEMPLATE
PDM_E_RESET_BUFFER
PDM_E_SET_TO_STATE
PDM_E_SQL_QUERY
PDM_E_SQL_STMT
PDM_E_TO_MAKE_TRANS
PDM_E_UNKNOWN_TABLE
PDM_E_VALIDATE_ACCESS
PDM_E_WRITE_FORMAT
PDM_E_WRITE_ROW
PDM_S_SUCCESS
PDM_E_NO_CHANGEABLE_PARTS

Author : Arun Madhwesh
Date   : 081893
Vers   : 1.00

