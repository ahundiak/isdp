#!/bin/ksh
# install.DOT_EXTENSION script for IDNAME

# define and timestamp log file
export RISLOG=/usr/tmp/risinstl.log
print "IDNAME installation log file" >$RISLOG
date '+Date: %h %d, %Y   Time: %H:%M:%S' >>$RISLOG

# define and timestamp error file
export RISERR=/usr/tmp/risinstl.err
print "IDNAME installation error file" >$RISERR
date '+Date: %h %d, %Y   Time: %H:%M:%S' >>$RISERR

export RIS_PLATFORM=ris_platform
CUR_ARCH=cur_arch
if [ $RIS_PLATFORM = "CLIX" ]
then
	case $(inqcpuid) in
		"C100"|"C300") CUR_ARCH=c100 ;;
		"C400") CUR_ARCH=c400 ;;
		*) print "Unknown CPU id"; exit 1 ;;
	esac
fi

#
# Set up commands and files
#

LN=/bin/ln
RM=/bin/rm
CAT=/bin/cat
CPIO=/bin/cpio
MKDIR=/bin/mkdir
CHMOD=/bin/chmod
CHGRP=/bin/chgrp
AWK=/usr/bin/awk
CUT=/usr/bin/cut

if [ $RIS_PLATFORM = "SunOS4" ]
then
	CHOWN=/usr/etc/chown
	COMPRESS=/usr/ucb/compress
	GROUP=bin
else
    CHOWN=/bin/chown
	COMPRESS=/usr/bin/compress
	GROUP=sys
fi

if [ $RIS_PLATFORM = "Solaris" ]
then
	: ${INGRHOME:=/opt/ingr}
	export INGRHOME
	export PATH=$PATH:$INGRHOME/bin
	DATES=$INGRHOME/bin/dates
	PRODDATA=$INGRHOME/bin/proddata
	CONFIGFILE=$INGRHOME/ingrconfig
else
	DATES=/usr/bin/dates
	PRODDATA=/usr/bin/proddata
	CONFIGFILE=/usr/ip32/ingrconfig
fi

RISTMP=/usr/tmp/PRODNAME.tmp

umask 022

#
# Display upgrade warning
#

if [ "$PREPROCESS" = "y" ]
then
	if [ "$RIS_PLATFORM" = "Solaris" ] # Fix - TR#249406815. Phil Rackley
	then
	print "
      +----------------- IMPORTANT RIS INFORMATION --------------------+
      |                                                                |
      | To execute any of the X-based GUI utilities on a Solaris 2.x   |
      | system, the environment variable LD_LIBRARY_PATH must include  |
      | references to the OpenWindows(tm) libraries and the XFORMSRT   |
      | product libraries.  For example, prior to starting xrismgr,    |
      | the following must be executed:                                |
      |                                                                |
      | Bourne/Korn shell users:                                       |
      | LD_LIBRARY_PATH=/opt/ingr/lib:/usr/openwin/lib:/usr/lib        |
      | export LD_LIBRARY_PATH                                         |
      |                                                                |
      | C shell users:                                                 |
      | setenv LD_LIBRARY_PATH /opt/ingr/lib:/usr/openwin/lib:/usr/lib |
      |                                                                |
      +----------------------------------------------------------------+
	"
	elif [ $RIS_PLATFORM = "CLIX" -o $RIS_PLATFORM = "SunOS4" ]
	then
		echo ""
		echo "            *****  IMPORTANT RIS INFORMATION  *****"
		echo ""
		echo "The RIS Utilities product has been renamed to "
		echo "RISUTL (product number: SN**446) on all platforms."
		echo "Previously, it was called RISUCU on CLIX (product number: SN**370)"
		echo "and RISUSU on SUN (product number: SN**370)." 
		echo ""
		echo "Installation of this product will not remove the Version 4.*.*.*"
		echo "product.  If you would like to have multiple versions on the same"
		echo "machine it is suggested that you place the versions in separate"
		echo "partitions (i.e /usr2,/usr3)."
		echo ""
		echo "Enter <CR> to continue... \c"
		read  ans
		echo ""
		echo "+--------------------------IMPORTANT-----------------------------+"
		echo "|                                                                |"
		echo "|  Some applications use the RIS Utilities directly.             |"
		echo "|  RIS Utilities Version 4.*.*.* are compatible with applications|"
		echo "|  built with Version 4.*.*.* RIS Development Platform.          |"
		echo "|  RIS Utilities Version 5.*.*.* are compatible with applications|"
		echo "|  built with Version 5.*.*.* RIS Development Platform,          |"
		echo "|  with the exception of forms related applications.             |"
		echo "|  Using RIS Utilities Version 5.*.*.* may render schemas        |"
		echo "|  inaccessible from Version 4.*.*.* applications.               |"
		echo "|                                                                |"
		echo "|  Please NOTE THE ABOVE COMPATIBILITY and download              |"
		echo "|  Version 4.*.*.* Utilities or Version 5.*.*.* Utilities or     |"
		echo "|  both depending on your RIS applications.                      |"
		echo "|                                                                |"
		echo "+----------------------------------------------------------------+"
		echo ""
		echo "Enter <CR> to continue... \c"
		read  ans
		echo ""
		echo "Due to changes in forms, for gui based applications,"
		echo "the RIS Utilities version major and minor must match"
		echo "the version major and minor number of the RIS Client" 
		echo "and Runtime package"
		echo ""
		echo "Version 5.*.*.* of RIS contains significant changes. You must "
		echo "read the README file and the new RIS reference manuals to"
		echo "understand the effects of these changes."
		echo ""
	fi
fi

answer=$(getanswer "Do you wish to continue?" y yesno)
case $answer in
	y*|Y*) ;;
	    *) exit 1;;
esac

if [ $RIS_PLATFORM = "CLIX" ]
then
	if [ "$PREPROCESS" = "y" ]
	then
		echo
		echo "We will be downloading executables targeted for your processor."
		echo
		echo "$CUR_ARCH executables will be installed."
	fi
fi

#
# Check if product is currently in use
#
for FILENAME in BIN_FILES
do
	if [ -w $DESTDIR/$FILENAME ]
	then
		(exec 2>/dev/null;>>$DESTDIR/$FILENAME)
		if [ $? -eq 1 ]
		then
			echo "Could not update IDNAME, product is in use"
			exit 1
		fi
	fi
done

#
# Now remove compatible products...
# We use $CUT to get the first 5 characters of the product
# name assuming it is unique for client products.
#

CURR_MAJ=$(echo $PRODVERSION | $CUT -d. -f1)
CURR_MIN=$(echo $PRODVERSION | $CUT -d. -f2)

COMP_VERSIONS=`$PRODDATA +%v IDNAME`
COMP_NAMES=`$PRODDATA +%n IDNAME`
COMP_DIRS=`$PRODDATA +%p IDNAME`

if [ -n "$COMP_VERSIONS" ]
then
	let sc=0
	RMFLAG=""
	COMPAT_FLAG=""
	for COUNT in $COMP_VERSIONS
	do
		let sc=$sc+1
	done
	while (($sc > 0))
	do
		DELVER=$(echo $COMP_VERSIONS | cut -d" " -f$sc)
		DELMAJ=$(echo $DELVER | cut -d. -f1)
		DELMIN=$(echo $DELVER | cut -d. -f2)
		DELREL=$(echo $DELVER | cut -d. -f3)
		DELDIR=$(echo $COMP_DIRS | cut -d" " -f$sc)
		DELNAM=$(echo $COMP_NAMES | cut -d" " -f$sc)
		#
		# We define versions of client products to be compatible
		# if the major values are same.
		#
		if [ "${DELMAJ}" -eq "${CURR_MAJ}" -a \
			 "${DELMIN}" -eq "${CURR_MIN}" ]
		then
			COMPAT_FLAG="ON"
		fi
		if [ "$COMPAT_FLAG" = "ON" ]
		then
			if [ "$RMFLAG" != "ON" ]
			then
				if [ "$PREPROCESS" = "y" ]
				then
					echo ""
					echo "List of compatible products currently loaded:"
				fi
				RMFLAG="ON"
			fi
			if [ "$PREPROCESS" = "y" ]
			then
				echo "    PRODUCT: $DELNAM VERSION: $DELVER DIR: <$DELDIR>"
			elif [ "$PREPROCESS" = "n" ]
			then
				echo "Removing PRODUCT: $DELNAM VERSION: $DELVER DIR: <$DELDIR> ..."
				if [ -d "$DELDIR" ]
				then
					$DELDIR/remove.DOT_EXTENSION $DELNAM $DELDIR
					[ $? != 0 ] && exit 1
				fi
				$DATES > $NULL
				#
				# We remove the entry from ingrconfig file.
				# From DELTOOLS 6.5 onwards, this is taken
				# care of by the dates command.
				#
				$CAT $CONFIGFILE > $RISTMP
				$AWK "BEGIN{FS=\"#\"} { if (\$2 != \"$DELNAM\" || \$4 != \"$DELVER\") print }" $RISTMP > $CONFIGFILE
				$RM -f $RISTMP 2>>$RISERR
			fi
		fi
		COMPAT_FLAG=""
		let sc=$sc-1
	done
fi

#
# If preprocess is set, do the following:
# 1) If either a set of older versions of product(s) or compatible products
#    exists on the system, prompt the user if (s)he wants to quit.
# 2) Exit at this stage. newprod will execute the installation script once 
#    again using the above settings. 
#

if [ "$PREPROCESS" = "y" ]
then
	if [ "$RMFLAG" = "ON" ]
	then
		echo ""
		echo "The above product(s) will be removed before installation !!"
		echo ""
		answer=$(getanswer "Do you wish to continue?" y yesno)
		case $answer in
			y*|Y*) ;;
   				*) exit 1;;
		esac
	fi
	exit 0
fi

#
# Cleanup any previous installation if it exists
#

PROD_DIR=`$PRODDATA +%p IDNAME`
if [ -n "$PROD_DIR" ]
then
   	for DIR in $PROD_DIR
   	do
       	if [ "$DIR" = "$DESTDIR" ]
       	then
			echo ""
			echo "Removing currently installed product IDNAME from <$DIR>"
			if [ -d "$DIR" ]
			then
				$DIR/remove.DOT_EXTENSION IDNAME $DIR
				[ $? != 0 ] && exit 1
			fi
			#
			# We remove the entry from ingrconfig file.
			# From DELTOOLS 6.5 onwards, this is taken
			# care of by the dates command.
			#
			$CAT $CONFIGFILE > $RISTMP
			$AWK "BEGIN{FS=\"#\"} { if (\$2 != \"IDNAME\" || \$6 != \"$DIR\") print }" $RISTMP > $CONFIGFILE
			$RM -f $RISTMP 2>>$RISERR
       	fi
   	done
fi

#
# Get the IDNAME files
#
getfile postinst.prod | $COMPRESS -d | $CPIO -imudc >>$RISLOG 2>>$RISERR
[ $? != 0 ] && echo "Could not download postinst.prod from source" && exit 1

getfile PRODNAME.prod | $COMPRESS -d | $CPIO -imudc >>$RISLOG 2>>$RISERR
[ $? != 0 ] && echo "Could not download IDNAME from source" && exit 1

echo ""

echo "Installing $RIS_PLATFORM executables ..."
getfile ${CUR_ARCH}bin.prod | $COMPRESS -d | $CPIO -imudc >>$RISLOG 2>>$RISERR
[ $? != 0 ] && echo "Could not download IDNAME from source" && exit 1

echo "Changing file ownerships and permissions."

for FILENAME in README product.def remove.DOT_EXTENSION NEW_FILES BIN_FILES
do
  	$CHOWN root $FILENAME >>$RISLOG 2>>$RISERR
  	$CHGRP $GROUP $FILENAME >>$RISLOG 2>>$RISERR
done

$CHMOD 644 README product.def >>$RISLOG 2>>$RISERR
$CHMOD 755 remove.DOT_EXTENSION >>$RISLOG 2>>$RISERR

for FILENAME in NEW_FILES
do
	$CHMOD 644 $FILENAME >>$RISLOG 2>>$RISERR
done

$CHMOD 755 bin bin/* >>$RISLOG 2>>$RISERR
$CHMOD 754 postinstall.sh 2>>$RISERR

#
# Change ownership of directories to 775
#
for DIR in NEW_DIRS 
do
	$CHMOD 775 $DIR >>$RISLOG 2>>$RISERR
	$CHOWN root $DIR >>$RISLOG 2>>$RISERR
	$CHGRP $GROUP $DIR >>$RISLOG 2>>$RISERR
done

#
# create product directory
#

$MKDIR -p $DESTDIR >>$RISLOG 2>>$RISERR
$CHOWN root $DESTDIR >>$RISLOG 2>>$RISERR
$CHGRP $GROUP $DESTDIR >>$RISLOG 2>>$RISERR

$MKDIR -p $DESTDIR/bin >>$RISLOG 2>>$RISERR

#----------------------------------------------------------------
# Change to RIS directory and Install the PRODNAME files
#----------------------------------------------------------------
cd $DESTDIR/..
$TMPDIR/bin/risinstl.ksh IDNAME $DESTDIR $PRODVERSION $TMPDIR
[ $? != 0 ] && exit 1

#----------------------------------------------------------------
# Make root/$GROUP owner and give read,write permission to all
#----------------------------------------------------------------
$CHOWN root . >>$RISLOG 2>>$RISERR
$CHGRP $GROUP . >>$RISLOG 2>>$RISERR
$CHMOD 777 . >>$RISLOG 2>>$RISERR

#----------------------------------------------------------------
#  Solaris executables need to be linked to $INGRHOME/bin
#----------------------------------------------------------------
if [ "$RIS_PLATFORM" = "Solaris" ]
then
	for EXE in BIN_FILES
	do
		$LN -fs $DESTDIR/$EXE ${INGRHOME:-/opt/ingr}/$EXE 2>>$RISERR
	done
fi

exit 0
