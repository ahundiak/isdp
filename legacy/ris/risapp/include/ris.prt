/*
** Copyright 1993, Intergraph Corporation, All Rights Reserved
*/

#include "rislimit.h"
#include "ris.h"

#ifdef __cplusplus
extern "C" {
#endif

extern char *RISascii_to_datetime(
	datetime *date,
	char *buffer,
	char *format)
;
extern void RISrestore_schema_file_checksum(
	void)
;
extern void RISint_clear(
	short *stmt_id,
	int *async_id,
	unsigned char execute_mode)
;
extern void RISint_clear_async(
	int *async_id)
;
extern void RISint_close(
	short stmt_id,
	int *async_id,
	unsigned char execute_mode)
;
extern void RISint_process_debug(
	char *s)
;
extern void RISint_process_debug_noRAP(
	char *s)
;
extern void RISint_process_debug_no_output(
	char *s)
;
extern void RISint_process_debug_no_output_noRAP(
	char *s)
;
extern void RISint_describe(
	short stmt_id,
	sqlda *data,
	int in_out)
;
extern int RISdatetime_to_ascii(
	datetime *date,
	char *buffer,
	char *format)
;
extern int RISint_error_msg(
	int errcode,
	char *buf,
	char *errname)
;
extern void RISint_term_error_msg()
;
extern void RISint_set_error(
	int status)
;
extern void RISint_clear_error()
;
extern void RISint_upgrade_parms_file()
;
extern void RISint_execute(
	short *stmt_id,
	int *async_id,
	sqlda *in_sqlda,
	unsigned char execute_mode,
	int clear_flag,
	int static_flag)
;
extern void RISint_execute_immediate(
	short *stmt_id,
	int *async_id,
	char *query,
	sqlda *in_sqlda,
	int execute_mode,
	int clear_flag,
	int static_flag)
;
extern void RISint_fetch(
	short stmt_id,
	int *async_id,
	sqlda *output,
	int one_row_only,
	unsigned char execute_mode)
;
extern void RISget_superschema_names(
	char (*buffer)[RIS_MAX_ID_SIZE],
	int *countp)
;
extern void RISget_superschema_definition(
	char *ss_name,
	char (*buffer)[RIS_MAX_ID_SIZE],
	int *countp)
;
extern void RISget_async_stmts(
	int *buffer,
	int *countp)
;
extern void RISget_schema_info(
	char *schname,
	ris_schema_info **schemap,
	ris_db_info **dbp,
	ris_grantee_info **granteep)
;
extern void RISget_db_info(
	int dbid,
	ris_db_info **dbp)
;
extern void RISget_schema_file(
	char **schema_filenamep,
	ris_db_info **dblistp,
	ris_schema_info **schlistp,
	ris_grantee_info **granteep)
;
extern void RISint_get_flags(
	int *ansi_mode,
	int *enable_dbms,
	int *verify_mode,
	int *blankstrip_mode,
	int *autocommit,
	int *autorename)
;
extern void RISget_ansi_mode(
	int *ansi_mode)
;
extern void RISget_enabled_databases(
	int *enable_dbms)
;
extern void RISget_verify_mode(
	int *verify_mode)
;
extern void RISget_blankstrip_mode(
	int *blankstrip_mode)
;
extern void RISget_autocommit_mode(
	int *autocommit)
;
extern void RISget_autorename_mode(
	int *autorename)
;
extern void RISget_schema_names(
	char (*buffer)[RIS_MAX_ID_SIZE],
	int *countp)
;
extern void RISget_default_schema_name(
	char buffer[RIS_MAX_ID_SIZE])
;
extern void RISget_current_stmt_schema_name(
	char buffer[RIS_MAX_ID_SIZE])
;
extern void RISget_parameters(
	ris_parameters *parameters)
;
extern void RISget_schema_transactions(
	char (*buffer)[RIS_MAX_ID_SIZE],
	int *countp)
;
extern void RISget_app_version(
	int *maj,
	int *min,
	int *rel)
;
extern void RISinitialize(
	char *language_name)
;
extern void RISstart_client(
	void)
;
extern void RISlocate_schema_file(
	schema_file_parms *parms)
;
extern void RISget_schema_file_location(
	schema_file_parms *parms)
;
extern void RISlocate_client(
	client_parms *parms)
;
extern void RISget_client_location(
	client_parms *parms)
;
extern void RISint_prepare(
	short *stmt_id,
	char *query,
	int clear_flag,
	int static_flag)
;
extern void RISint_report_error(
	int *async_id,
	char **ptrp)
;
extern void RISint_show_app_memory(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_app_stmts(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_async_stmts(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_cli_memory(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_cli_stmts(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_cli_hash_table(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_cli_servers(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_show_cli_struct_mgrs(
#if defined(sun)
	int (* output_func)())
#elif defined(unix) || defined(WIN32) || defined(DOS)
	int (* output_func)(const char *, ...))
#endif 
;
extern void RISint_select(
	short *stmt_id,
	int *async_id,
	char *query,
	sqlda *in_sqlda,
	sqlda *out_sqlda,
	unsigned char execute_mode)
;
extern void RISint_schema_mgr(
	char mode,
	char *data,
	char *str)
;
extern void RISint_report_superschema_error(
	char *ss_name)
;
extern void RISterminate(
	void)
;
extern void RISstop_client(
	void)
;
extern void RISint_test_completion(
	sqlda *desc,
	int wait_flag)
;
extern void RISint_get_debug_flags(
	char *s)
;
extern void RISint_set_sqlcode(
	int status)
;
extern int RISget_sqlcode()
;
extern rissqlca *RISget_risca()
;
extern rissqlca *RISget_dbca()
;
extern ris_superschema_error_info *RISget_superschema_error()
;
extern int RISget_superschema_warning()
;
extern void RISint_get_language_code(
	int *code)
;
extern void RISget_language_name(
	char *name)
;
extern void RISint_get_client_addresses(
	char *xns_addr,
	char *tcp_addr,
	char *lu62_addr,
	char *dnp_addr)
;
extern void RISget_ris_sqltype_code(
	int  *code,
	char *str)
;
extern void RISget_ris_sqltype_string(
	char *str,
	int  code)
;

extern int RISload_dll()
;

extern void RISfree_memory(
	int type,
	...)
;
extern void RISfree_memory_malloc(
	int type,
	...)
;
extern int RISget_platform(
	void)
;

#ifdef __cplusplus
}
#endif

