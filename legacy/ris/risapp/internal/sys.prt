/*
**	NAME:							sys.prt
**	AUTHORS:						Terry McIntyre
**	CREATION DATE:					9/91
**	ABSTRACT:
**      Prototypes for system calls that are NOT wrapped in COMsys.c 
**      and COMfunc.c. These system calls CAN be refered directly in
**      RIS source code.
**
**		NOTE: chk_headers depends on these prototypes being in a set format.
**			1. 'extern' must be in column 1.
**			2. if the function has no arguments, the function must end in
**				'()\n'. See example below.
**			
**				extern int function_name()
**				;
**
**			3. if the function has arguments, the functions must end in
**				'(\n', followed by each argument type on a seperate line.  See
**				the example below.
**
**				extern int function_name(
**					int,
**					char *)
**				;
**	
**	REVISION HISTORY:
*/
 
/*
**	INCLUDES
*/
#include <stdio.h>
#include <setjmp.h>

/* UNIX SYSTEMS */
#if defined(unix)
#include <sys/types.h>
#include <sys/time.h>
#include <sys/times.h>
#include <search.h>
#include <ar.h>
#endif
/* CLIPPER */
#if defined(clipper) || defined(__clipper__)
#include <filehdr.h>
#include <syms.h>
#include <linenum.h>
#include <scnhdr.h>
#include <ldfcn.h>
#endif
/* HP-UX */
#if defined(__hpux__)
#include <filehdr.h>
#include <syms.h>
#include <scnhdr.h>
#endif
/* NT and DOS */
#if defined(WIN32) || defined(DOS)
#include <sys/types.h>
#include <setjmp.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include <RIShsrch.h>
#endif 
#if defined(sco)
#include <filehdr.h>
#include <ldfcn.h>
#include <ctype.h>
#endif 

#if defined(WIN32)
#define RISEXPORT _CRTIMP
#else
#define RISEXPORT
#endif

/*
**	FUNCTION PROTOTYPES
*/
#if defined(sun)
extern int access(
	char *,
	int)
;
#elif defined(__Sol2__) || defined(Soli) || defined(__hpux__)
extern int access(
	const char *,
	int)
;
#endif

extern RISEXPORT void _exit(
	int)
;

extern RISEXPORT double atof(
	const char *)
;

extern RISEXPORT int atoi(
	const char *)
;

/*
extern int isspace(
	int)
;
*/

extern RISEXPORT char *ctime(
	const time_t *)
;

extern RISEXPORT void exit(
	int)
;

#if defined(sun)
extern int close()
;
#endif

#if defined(unix) || defined(vms) || defined(WIN32)
extern RISEXPORT int fclose(
    FILE *)
;
#endif

#if defined(unix) || defined(vms) || defined(WIN32)
extern RISEXPORT char *fgets(
    char *,
    int,
    FILE *)
;
#endif

extern RISEXPORT int fflush(
	FILE *)
;

#if defined(unix) || defined(WIN32)
extern RISEXPORT FILE *fopen(
    const char *,
    const char *)
;
#endif

#if defined(sun)
extern int fprintf()
;
#elif defined(unix)
extern int fprintf(
	FILE *,
	const char *,
	...)
;
#endif

#if defined(sun)
extern int open()
;
#elif defined (DOS)
extern int open(
    char *,
    int,
    ...)
;
#else
extern RISEXPORT int open(
    const char *,
    int,
    ...)
;
#endif

#if defined(clipper) || defined(__clipper__) || defined(sun) || defined(sco) || defined(DOS) || defined(WIN32) || defined(WIN32S) || defined(vms)
extern RISEXPORT long lseek(
	int, 
	long, 
	int)
;
#elif defined(__hpux__)
extern long lseek(
	int,
	off_t,
	int)
;
#elif defined (__Sol2__) || defined(Soli)
extern off_t lseek(
	int, 
	off_t, 
	int)
;
#else
ERROR -- NO CODE
#endif

#if defined(__clipper__)
extern ssize_t write(
	int ,
	const void *,
	size_t)
;

#elif defined(sun) || defined(sco)
extern int write(
	int ,
	char *,
	unsigned int)
;
#elif defined(unix)
extern ssize_t write(
	int ,
	const void *,
	unsigned)
;
#elif defined(vms)
extern int write(
	int ,
	void *,
	int)
;

#elif defined(WIN32)
extern RISEXPORT int write(
	int ,
	const void *,
	unsigned int)
;
#endif

#if defined(sun)
extern int  fscanf()
;
#elif defined(unix)
extern int fscanf(
	FILE *,
	const char *,
	...)
;
#endif

extern RISEXPORT int fseek(
	FILE *, 
	long int, 
	int)
;

extern RISEXPORT char *getenv(
	const char *)
;

#if defined(unix)
extern pid_t getpid(
	void)
;
#endif
#if defined(WIN32) || defined(DOS)
extern RISEXPORT int getpid(
	void)
;
#endif

#if defined(clipper) || defined(__clipper__)
extern getcpuid(
	int *)
;
#endif

#if defined(clipper) || defined(__clipper__) || defined(sun) || defined(sco) || defined(DOS) || defined(WIN32) || defined(WIN32S) || defined(vms) || defined(__hpux__)
extern int hcreate(
	unsigned)
;
#elif defined (__Sol2__) || defined(Soli)
extern int hcreate(
	size_t)
;
#else
ERROR -- NO CODE
#endif

extern void hdestroy(
    void)
;

extern ENTRY *hsearch(
	ENTRY,
	ACTION)
;

#if defined(unix)
extern int kill(
	pid_t,
	int)
;
#endif

extern RISEXPORT struct tm *localtime(
	const time_t *)
;

#if defined(sun)
extern void *memcpy()
;
#elif defined(unix)
extern void *memcpy(
	void *, 
	const void *, 
	size_t)
;
#endif

#if defined(sun)
extern void *memset()
;
#elif defined(unix) || defined(WIN32)
extern void *memset(
	void *,
	int,
	size_t)
;
#endif

#if defined(clipper) || defined(__clipper__) || defined(sco)
extern int ldahread(
	LDFILE *,
	ARCHDR *)
;

#if defined(clipper) || defined(__clipper__)
extern LDFILE *ldopen(
	const char *,
	LDFILE *)
;
#endif
#if defined(sco)
extern LDFILE *ldopen(
	char *,
	LDFILE *)
;
#endif

extern int ldclose(
	LDFILE *)
;
#endif

extern RISEXPORT void rewind(
	FILE *)
;

extern int setjmp(
	jmp_buf)
;

#if defined(sun)
extern int  sprintf()
;
#elif defined(unix)
extern int sprintf(
	char *,
	const char *,
	...)
;
#endif

#if defined(sun)
extern int  sscanf()
;
#elif defined(unix)
extern int sscanf(
	const char *,
	const char *,
	...)
;
#endif

#if defined(unix)
extern char *strerror(
	int)
;
#endif

extern char *strcat(
	char *,
	const char *)
;

extern RISEXPORT char *strchr(
	const char *s,
	int)
;

extern int strcmp(
	const char *,
	const char *)
;

extern char *strcpy(
	char *,
	const char *)
;

extern size_t strlen(
	const char *s)
;

extern RISEXPORT int strncmp(
	const char *,
	const char *,
	size_t)
;

extern RISEXPORT char *strncpy(
	char *,
	const char *,
	size_t)
;

extern RISEXPORT char *strrchr(
	const char *s,
	int)
;

extern RISEXPORT char *strtok(
	char *,
	const char *)
;

#if defined(sun)
extern char *strstr()
;
#elif defined(unix)
extern char *strstr(
        const char *,
        const char *)
;
#endif

#if defined(unix) || defined(WIN32)
extern RISEXPORT int remove(
	const char *)
;
#endif

extern RISEXPORT time_t time(
	time_t *)
;

#if defined(unix) || defined(WIN32)
extern clock_t times(
	struct tms *)
;
#endif

#if defined(sun)
extern mode_t umask()
;
#elif defined(unix)
extern mode_t umask(
	mode_t)
;
#elif defined(WIN32) || defined(DOS)
extern RISEXPORT int _umask(
		int)
;
#endif

#if defined(unix)
extern int unlink(
	const char *)
;
#endif

#if defined(__clipper__) || defined(clipper) || defined(sun)
extern int vfork()
;
#elif defined(__Sol2__) || defined(Soli) || defined(__hpux__)
extern pid_t vfork(
	void)
;
#elif defined(sco)
extern pid_t fork()
;
#endif

#if defined(clipper) || defined(__clipper__) || defined(__hpux__)
extern int vsprintf(
	char *,
	const char *,
	__va_list)
;
#elif defined(sun)
extern int vsprintf(
	char *,
	const char *,
	...)
;
#elif defined(__Sol2__) || defined(Soli)
extern int vsprintf(
	char *,
	const char *,
	void *)
;
#elif defined(sco)
extern int vsprintf(
    char *,
    const char *,
    va_list)
;
#endif

#if defined(sun)
extern int printf()
;
#elif defined(__Sol2__) || defined(Soli)
extern int printf(
	const char *,
	...)
;
#endif

#if defined(sun)
extern int wait(
	int *)
;
#elif defined(unix)
extern pid_t wait(
	int *)
;
#endif

#if defined(sun)
extern int waitpid(
	pid_t,
	int *,
	int)
;
#elif defined(unix)
extern pid_t waitpid(
	pid_t,
	int *,
	int)
;
#endif

extern int UMSGetByNum(
	char *,
	long,
	char *,
	...)
;

extern int UMSGetByKey(
	char *,
	char *,
	char *,
	...)
;

extern int UMSInitMsg(
	char *,
	int)
;

extern int UMSGetKeyByNum(
	char *,
	char *,
	long)
;

extern int UMSClearMsg(
	char *)
;

extern int UMSGetKeyByNum(
	char *,
	char *,
	long)
;

#if defined(__clipper__) || defined(__hpux__)
extern int vfprintf(
    FILE *,
    const char *,
    __va_list)
;
#elif defined(sun)
extern int vfprintf(
    FILE *,
    const char *,
    ...)
;
#elif defined(__Sol2__) || defined(Soli)
extern int vfprintf(
    FILE *,
    const char *,
    void *)
;
#elif defined(sco)
extern int vfprintf(
    FILE *,
    const char *,
    va_list)
;
#endif

