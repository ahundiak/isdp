
/*
** Copyright 1994, Intergraph Corporation, All Rights Reserved
*/

/*
**	====================================================
**
**	File		: securent.rc
**	Purpose		: How to access secure schemas on NT
**
**	====================================================
*/


#include <stdio.h>
#include <string.h>
#include "ris.prt" 
#include "ris_err.h"


#include <windows.h>
static ULONG OrigMode;			/* settings before calling
					 * C_UINoEcho() */

extern void main()
{
    
	/*
	**	Host variable declarations
	*/
    exec sql begin declare section;
        char    sqlstring [200];
        char    osusername[21] ;
        char	username[21];
        char	schemaname[21];
        char    ospassword[21] ;
        char	password[21];
        char	*error_ptr;
    exec sql end declare section;
    ris_schema_info *schemap ;
    ris_db_info *dbp;
    ris_grantee_info *granteep;
    char SchemaName [21] ;
    char *ptr ;    
    
    /*
     **	    Default to schema secure1 
    */
	
    printf("You need to login to a secure schema ! \n");
    printf("Key in schema[.password] to be opened : ");
    gets(schemaname);
    strcpy (SchemaName, schemaname) ;
    ptr = strchr (SchemaName, '.') ;
    if (ptr != NULL)
    {
        *ptr = 0 ;
    }
        
    sprintf(sqlstring, "default schema %s", schemaname);
    exec sql execute immediate :sqlstring;  

    if (SQLCODE == RIS_E_NEED_DECLARE_SCHEMA) 
    {
	printf("Please enter valid RDBMS user name : ");
	gets(username);
	printf("Password: ");
	C_UINoEcho();
	gets(password) ;
	/* if we turned off echoing, we need to turn it back on now */
	C_UIRestoreEcho();
	
        RISget_schema_info(SchemaName, &schemap, &dbp, &granteep) ;

        if (SQLCODE != RIS_SUCCESS) goto error;
        /* Certain RDBMS require OS user name */
        if (dbp->dtype == 'O' || dbp ->dtype == 'D' || dbp->dtype == 'Y')
        {
        	printf("Please enter OS user name : ");
	        gets(osusername);
        	printf("Password: ");
        	C_UINoEcho();
	        gets(ospassword) ;
        	/* if we turned off echoing, we need to turn it back on now */
	        C_UIRestoreEcho();
        	sprintf(sqlstring, "declare schema %s user %s.%s osuser %s.%s", 
                     schemaname,username,password, osusername, ospassword);
                exec sql execute immediate :sqlstring;
        }
        else
        {
            sprintf(sqlstring, "declare schema %s user %s.%s", 
                     schemaname,username,password);
            exec sql execute immediate :sqlstring;
        }

        if (SQLCODE != RIS_SUCCESS) goto error;
 
	sprintf(sqlstring, "default schema %s", schemaname);
        exec sql execute immediate :sqlstring;
       }
       else
       {
            printf ("Not a secured schema!\n") ;
       }
	/*
	**	Define exception handlers
	**	i.e., if no more rows detected goto lable not_found
	*/
    exec sql whenever sqlerror goto :error;

error:
    
	/*
	** This part of code is executed when error is detected
	*/

	/*
	** Ignore SQL error from onwards and continue processing
	*/
	
        exec sql whenever sqlerror continue;

	/*
	** Retreive the message string resulting form the last SQL error
	*/
        exec sql report error into :error_ptr;
        puts(error_ptr);
    return;
}



int C_UIRestoreEcho(void)
{
    HANDLE hStdIn;

    hStdIn = GetStdHandle(STD_INPUT_HANDLE);
    SetConsoleMode(hStdIn,OrigMode);
   
    printf("\n");
}


int C_UINoEcho(void)
{
    ULONG TempMode;
    HANDLE hStdIn = GetStdHandle(STD_INPUT_HANDLE);

    /* turn echoing off */
    GetConsoleMode(hStdIn, &OrigMode);
    TempMode = OrigMode;
    TempMode ^= ENABLE_ECHO_INPUT; 
    SetConsoleMode(hStdIn, TempMode);
}


