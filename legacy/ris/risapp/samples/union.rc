/*
** Copyright 1994, Intergraph Corporation, All Rights Reserved
*/

/*
**	========================================
**
**	File		: union.rc
**	Purpose		: Select Union Statement
**
**	========================================
*/

#include <stdio.h>
#include <string.h>
#include "ris.prt"

extern void main()
{
	/*
	**	Host variable declarations
	*/
    exec sql begin declare section;
        int		c1;
        int		c2;
        char	*error_ptr;
    exec sql end declare section;

	/*
	**	Define exception handlers
	**	i.e., if SQL error detected goto label error
	**		  if no more rows detected goto lable not_found
	*/
    exec sql whenever sqlerror goto :error;
    exec sql whenever not found goto :not_found;

	/*
	**	Create schema inf1
	*/
	printf("Create schema inf1\n");
	exec sql create schema inf1 on database (ostype UNIX, informix, dbname /usr2/risdb, dir /usr/infx50) user rc01.rc01pass;

    /*
	**	Default to schema sch1 (static SQL with no parameters)
	*/
	printf("Default to schema inf1\n");
    exec sql default schema inf1;

	/*
	**	Create table t1
	*/
	printf("Create table t1\n");
	exec sql create table t1(col1 integer, col2 integer);

	/*
	**	Create table t2
	*/
	printf("Create table t2\n");
	exec sql create table t2(col1 integer, col2 integer);

	/*
	**	Insert some values in the table t1
	*/
	printf("Insert values into table t1\n");
	exec sql insert into t1 values(1, 2);
	exec sql insert into t1 values(3, 4);
	exec sql insert into t1 values(5, 6);

	/*
	**	Insert some values in the table t2
	*/
	printf("Insert values into table t2\n");
	exec sql insert into t2 values(7, 8);
	exec sql insert into t2 values(9, 10);
	exec sql insert into t2 values(11, 12);


    /*
	**	Select multiple rows from the union of table t1 and t2 using cursors
	*/

	/*
	** Declare a cursor for select statement (static SQL with parameters)
	*/
	printf("Declare cursor for select from table t1 union select from table t2\n");
    exec sql declare cur1 cursor for select * from t1 union select * from t2;

	/*
	**	Open cursor cur1 using parameter
	*/
	printf("Open cursor for select from table t1 union table t2\n");
    exec sql open cur1;

    for (;;)
    {
        exec sql fetch cur1 into :c1, :c2;
    	printf("col1: %d col2: %d\n", c1, c2);
    }

not_found:
	/*
	** This part of code is executed when no more data is found
	*/
    exec sql whenever not found continue;
    printf("No more data\n");

	/*
	** Close the cursor cur1
	*/
    printf("Close cursor cur1\n");
	exec sql close cur1;

    return;

error:
	/*
	** This part of code is executed when error is detected
	*/

	/*
	** Ignore SQL error from onwards and continue processing
	*/
    exec sql whenever sqlerror continue;

	/*
	** Retreive the message string resulting form the last SQL error
	*/
    exec sql report error into :error_ptr;
    puts(error_ptr);

    return;
}
