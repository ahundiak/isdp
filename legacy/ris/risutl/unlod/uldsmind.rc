/* Do not alter this SPC information: $Revision: 1.1.53.1 $ */
/*
**	NAME:							uldsmind.rc
**	AUTHORS:						Jennifer Xia
**	CREATION DATE:					November 22, 1990
**	ABSTRACT:
**		It contains one function for batch mode and one
**				function for interactive mode which automatically 
**				unload indexes created on user specified tables or 
**				views, when RISunload is instructed to unload user 
**				specified index definitions.
**	
**	REVISION HISTORY:August 6th, 1991 Hitesh Patel
*/
 
/*
**	DEFINES
*/

/*
**	INCLUDES
*/
#ifdef MM
#include "unlod.h"
#endif

exec sql include "unlod.h";

/*
**	VARIABLES
*/

/*
**	FUNCTIONS
*/

/*
**      FUNCTION PROTOTYPES
*/
#define uldsmind_rc
#include "sys.prt"
#include "comdebug.prt"
#include "uldgtind.prt"
#include "uldinddf.prt"
#include "uldsmind.prt"
#include "uldstspc.prt"


/* interactive mode removed */

/* batch mode */
extern int RISuld_indx_on_some_rel()
{
	batch_tnode_type	*btnode_ptr;
	char				indx_tab[RIS_MAX_ID_SIZE];
	int					total_indx = 0;

	ULD_DBG(("RISuld_indx_on_some_rel:  \n"));
/*
**	Added condition for RISuld_ptr_struct->bthnode_ptr.
**	This will fix TR# 249403052. RAJU 06/22/94
*/

	if ((RISuld_ptr_struct_ptr->bihnode_ptr->indx_select == SOME) &&
		(RISuld_ptr_struct_ptr->bthnode_ptr && 
		 (RISuld_ptr_struct_ptr->bthnode_ptr->tab_select == SOME)))
	{
		for (btnode_ptr = RISuld_ptr_struct_ptr->bthnode_ptr->btlink;
					btnode_ptr != NULL;
							btnode_ptr = btnode_ptr->btlink)
		{
			if (btnode_ptr->tnode_ptr->unloaded)
			{
				strcpy(indx_tab, btnode_ptr->tnode_ptr->tab_name);

				/* this creates a node in binode_ptr so that info can
				   be passed to risulddes uniformly */
				RISuld_create_binode(indx_tab,(char *) NULL);
				total_indx =
					RISuld_get_no_of_indxs_for_a_tab(RISuld_ptr_struct_ptr->bsnode_ptr->snode_ptr->sch_name,
													indx_tab);
				if( total_indx == FAILURE )
				{
					ULD_DBG(("1. RISuld_indx_on_some_rel: end"));
					return(FAILURE);
				}
				RISuld_ptr_struct_ptr->binode_ptr->inode_ptr->total_indx =
					total_indx;
				RISuld_unload_indx_def(RISuld_ptr_struct_ptr->bsnode_ptr->snode_ptr->sch_name,
							  		indx_tab,
							  		(char)RISuld_ptr_struct_ptr->bihnode_ptr->indx_select);
			}
		}
		ULD_DBG(("2. RISuld_indx_on_some_rel: end"));
	}
	else
	{
		ULD_DBG(("3. RISuld_indx_on_some_rel: end"));
	}
	return(SUCCESS);
}
