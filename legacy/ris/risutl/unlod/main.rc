/*
**	NAME:							main.rc
**	AUTHORS:						Jennifer Xia
**	CREATION DATE:					July 9, 1990
**	ABSTRACT:
**		It contains the main function of RISunload which invokes
**		RISuld_interactive_unload function in interactive mode
**		and RISuld_batch_unload function in batch mode.
**	
**	REVISION HISTORY:
**		Changes made to have common underlying heart routine for all modes.
**		--	Hitesh Patel June 12th 1991.
*/
 
/* INCLUDES */

#if defined(WIN32S)
#include <windows.h>
#include <windowsx.h>
#include "winport.h"
#include "winio.h"
#include "winhan.h"
#endif
#include "risutl.h"
#include "risver.h"
exec sql include "unlod.h";
#if defined(WIN32S)
#include "prog32s.h"
#endif 

/* FUNCTION PROTOTYPES */

#define main_rc
#include "sys.prt"
#include "comjmp.prt"
#include "main.prt"
#include "ucoumsg.prt"
#include "ucoerrbx.prt"
#include "ucodebug.prt"
#include "ucoanyky.prt"
#include "ris.prt"
#include "comumsg.prt"
#if defined(WIN32S)
#include "uld32s.prt"
#include "btcerrbx.prt"
#else
#include "dldmain.prt"
#endif

/**********************************************************************/
extern int main(
int		argc,
char	*argv[])
{
	int status = 0;
	int mode = INTERACT;
	int					debug_count;
	debug_info_s		debug_info[1];
#if defined(WIN32S)
	char about[128];
#endif

	mode = argc == 1 ? INTERACT : BATCH;

#if !defined(WIN32S)
	if (RISlduld_load_dll() !=0)
	{
		return(1);
	}
#endif
	if (RISload_dll())
	{
#if defined(WIN32S)
		DestroyWindow(winio_current());
		winio_end();
#endif
		return(1);
	}

	if ((status = SETJMP()) != 0)
	{
		RESETJMP();
		RISterminate();
		status = 1;
	}
	else
	{
		if ((status = SETJMP()) != 0)
		{
			RESETJMP();
	
#if defined(WIN32S)
			RIS32s_file_error_box(RISUTL_I_LOD_ERROR, 0, status, NULL,
				0, 1);
#else
			RISuco_file_error_box(stdout, RISUTL_I_LOD_ERROR, 0, status, NULL,
				0, 1);
#endif
			PRINTF((const char *)CHECK_UNINIT_MSG(RISUTL_I_LOD_COULD_NOT_INIT,
				"RIS Load Utility could not initialize... Bye\n"));
			LONGJMP(status);
		}

		debug_info[0].name = "uld";
		debug_info[0].len = 3;
		debug_info[0].flag = RISuld_get_RISuld_debug_addr();
		debug_count = 1;
		RISuco_initialize_debug(debug_info, debug_count);
		RISuco_initialize_ums(INIT_UTL_UMS_FILE|INIT_RIS_UMS_FILE);
#if defined(WIN32S)
	winio_setfont(winio_current(),ANSI_FIXED_FONT);
	sprintf(about,MSG(RISUTL_I_UNLOD_UTILITY), RIS_version);
	winio_about(about);
#endif

		RESETJMP();

		if (argc == 2)
		{
			/*
			** /V and /? added to fix TR # 439502826. GBF (9/27/95)
			*/
#if defined(WIN32)
			if (!strcmp(argv[1],"-V") || !strcmp(argv[1],"/V"))
#else
			if (!strcmp(argv[1],"-V"))
#endif
			{
				/*PRINTF(MSG(RISUTL_I_COPYRIGHT));*/
				/* 1996.03.12:Alan Barksdale:TR439600483 */
				PRINTF(MSG(RISUTL_I_BEGIN_COPYRIGHT));
				PRINTF(" ");
				PRINTF(COPYRIGHTYEAR);
				PRINTF(", ");
				PRINTF(MSG(RISUTL_I_END_COPYRIGHT));
				PRINTF(MSG(RISUTL_I_UNLOD_UTILITY),RIS_version);
				return(0);
			}
#if defined(WIN32)
			if (!strcmp(argv[1],"-?") || !strcmp(argv[1],"/?"))
#else
			if (!strcmp(argv[1],"-?"))
#endif
			{
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_1));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_2));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_3));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_4));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_5));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_6));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_7));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_8));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_9));
				PRINTF(MSG(RISUTL_I_UNLOD_USAGE_10));
				return(0);
			}
		}

		/*
		** If no command-line arguments, run in interactive mode,
		** otherwise, run in batch mode
		*/
		RISuld_heart_of_unload(argc,argv, mode, (risulddes *) NULL);

		RESETJMP();
		RISterminate();
	}

	/* If there was an error, */
	if (status && mode == INTERACT)
#if defined(WIN32S) && defined(ULD_EXE)
	VCkbhit();
#else
		RISuco_any_key_to_continue();
#endif
#if defined(WIN32S)
	winio_end();
#endif
	return status;
}
