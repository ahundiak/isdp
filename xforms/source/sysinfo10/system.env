#set -x
###############################################################
# Contents:
#  Set System Symbols
#   System Name
#   Supported Platforms (Processor Types)
#  Set Supported Platform Symbols
#  Set Current Platform Symbols
#  Set Production (PAS) Locations
#  Set Build Parameters
#   Locations
#   Compiler switches
###############################################################
#dmb:04/16/93: Set all operator conveniences once in profile.
#              Only set neccessary overrides here.

###############################################################
# Set System Symbols
###############################################################

#  System Name

SYSTEM_NAME=xforms
SYSTEM_VERSION_STRING=01.02.05.13
PROJECT_NAME=xforms10
export SYSTEM_NAME SYSTEM_VERSION_STRING PROJECT_NAME

# sml:12-09-93 
# set STRIP variable here and turn off later if DBG set
STRIP=1
export STRIP

#   Supported Platforms (Processor Types)

# NOTE: In many DELTOOLS contexts, the term "Archetecture" is used here.
# The FILE INFORMATION, floppy order and tape order sections in
# product.def must be adjusted whenever this list changes. In addition,
# PROC_TYPE_LIST below must also be adjusted.

#dmb:03/09/93:Restoring mips for ISS70 Release
# ah Not sure about this, just get an empty string
SUPPORTED_PROC_TYPE_LIST="${SUPPORTED_PROC_TYPE_LIST:=c100 c400 sun4 mips}"
export SUPPORTED_PROC_TYPE_LIST


###############################################################
#  Set Supported Platform Symbols
#   Should be: Arch.OS.Proc where Arch is sun|clipper|pc ?
###############################################################

# Inquire about the current Operating System.
# dmb:05/19/92:NOTE: We should shift this to a machine-type querry.
UNAME_KEY=`uname -s | tr '[a-z]' '[A-Z]'`

# UNAME_KEY = SUNOS

#dmb:04/08/93:Simplify by setting OS_KEY first
case $UNAME_KEY
in

  "HP-UX" )
    OS_KEY=HPUX
    ;;
  "CLIX" )
    OS_KEY=CLIX
    ;;
  "IRIX" )
    OS_KEY=IRIX
    ;;
  "SUNOS" )
    SUNOS_VERSION=`uname -r`
    case $SUNOS_VERSION
    in
      4.* )
        OS_KEY=SUNOS4
        SUNOS_VERSION=SUNOS4
        ;;
      5.* )
        OS_KEY=SUNOS5
        SUNOS_VERSION=SUNOS5
        ;;
      * )
        echo "Unknown SUNOS_VERSION $SUNOS_VERSION: Cannot set OS_KEY"
        ;;
    esac
    export SUNOS_VERSION 
    ;;
    * )
     # sml:08-04-93 add grab_bag case for SCO, since uname -s is unreliable
     #              on that box
     OS_SECONDARY_KEY=`uname -m`
     if [ $OS_SECONDARY_KEY = "i386" ]
     then
       OS_KEY=SCO
     elif [ $OS_SECONDARY_KEY = "i486" ]
     then
       OS_KEY=SCO
     fi
     ;;

esac
export OS_KEY

case $OS_KEY
in
  "HPUX" )
    # List of processor types supported on this platform

    PROC_TYPE_LIST="${PROC_TYPE_LIST:=hp9000}"

    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-HP9000}"
    PROC_TYPE_PACKAGE_LIST="hp9000"

    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"
    OS_KEY_INITIALIZATION_LIST="HPUX"
    ;;

  "SCO" )
    # List of processor types supported on this platform

    #dmb:05/19/92:Build the local default first for early testing.
    PROC_TYPE_LIST="${PROC_TYPE_LIST:=i486}"
#    PROC_TYPE_LIST="${PROC_TYPE_LIST:=i386 i486}"
#    PROC_TYPE_LIST="${PROC_TYPE_LIST:=i386}"

#    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`uname -m`}"
    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-i486}"
#    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-i386}"

#    PROC_TYPE_PACKAGE_LIST="i486"
#    PROC_TYPE_PACKAGE_LIST="i386 i486"
    PROC_TYPE_PACKAGE_LIST="i386"

    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"
    OS_KEY_INITIALIZATION_LIST="SCO"
    ;;


  "CLIX" )
    # List of processor types supported on this platform

    #dmb:05/19/92:Build the local default first for early testing.
    # PROC_TYPE_LIST="${PROC_TYPE_LIST:=c300 c100 c400}"
    #dmb:04/02/93:No longer supporting c300
    PROC_TYPE_LIST="${PROC_TYPE_LIST:=c100 c400}"

    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`inqcpuid | tr '[A-Z]' '[a-z]'`}"
    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"

    # dmb:03/25/93: Changing to unbundled model for ISS7.1
#    PROC_TYPE_PACKAGE_LIST="c100 c400 sun4"
    PROC_TYPE_PACKAGE_LIST="c100 c400"
    OS_KEY_INITIALIZATION_LIST="CLIX"
    ;;

  "IRIX" )
    # dmb:08/13/92:Kludged in
    # List of processor types supported on this platform
    PROC_TYPE_LIST="${PROC_TYPE_LIST:=mips}"

    # dmb:08/13/92:How do we do this on SGI?
#    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`arch | tr '[A-Z]' '[a-z]'`}"
# try:  hinv -t cpu | awk '{print $2}' |  tr '[A-Z]' '[a-z]' | sed 's/ /_/;s]/]_]'
    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-mips}"
    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"

    PROC_TYPE_PACKAGE_LIST="mips"
    OS_KEY_INITIALIZATION_LIST="IRIX"
    ;;

  SUNOS4 )
#    SUNOS_PACKAGE_LIST="SUNOS4 SUNOS5"
    SUNOS_PACKAGE_LIST="SUNOS4"
    OS_KEY_INITIALIZATION_LIST="SUNOS4"

    export SUNOS_PACKAGE_LIST

    # List of processor types supported on this platform
    PROC_TYPE_LIST="${PROC_TYPE_LIST:=sun4}"

    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`arch | tr '[A-Z]' '[a-z]'`}"
    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"

    PROC_TYPE_PACKAGE_LIST="sun4"
    ;;

  SUNOS5 )
# dmb:04/08/93:These should be added to /etc/profile
#dmb:04/16/93: Set MANPATH once in profile for the operator.
#        MANPATH=$MANPATH:/opt/SUNWspro/SC2.0.1/man

        export PATH
#        SUNOS_PACKAGE_LIST="SUNOS4 SUNOS5"
        SUNOS_PACKAGE_LIST="SUNOS5"
        OS_KEY_INITIALIZATION_LIST="SUNOS5"

    export SUNOS_PACKAGE_LIST

#dmb:05/12/93:arch lives in /usr/ucb in SUNOS5
#   DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`arch | tr '[A-Z]' '[a-z]'`}"
    DEFAULT_PROC_TYPE="${DEFAULT_PROC_TYPE:-`/usr/ucb/arch | tr '[A-Z]' '[a-z]'`}"
    CURRENT_PROC_TYPE="${CURRENT_PROC_TYPE:-$DEFAULT_PROC_TYPE}"

    # List of processor types supported on this platform
    case $DEFAULT_PROC_TYPE
    in
      sun4)
        PROC_TYPE_LIST="${PROC_TYPE_LIST:=sun4}"
        PROC_TYPE_PACKAGE_LIST="sun4"
      ;;
      i86pc)
        PROC_TYPE_LIST="${PROC_TYPE_LIST:=i86pc}"
        PROC_TYPE_PACKAGE_LIST="i86pc"
      ;;
    esac
    ;;
   * )
    echo "Unknown box: Cannot set Product Locations"
    ;;
esac

DEFAULT_PROC_TYPE_KEY="`echo $DEFAULT_PROC_TYPE | tr '[a-z]' '[A-Z]'`"
CURRENT_PROC_TYPE_KEY="`echo $CURRENT_PROC_TYPE | tr '[a-z]' '[A-Z]'`"

export PROC_TYPE_LIST
export DEFAULT_PROC_TYPE CURRENT_PROC_TYPE
export DEFAULT_PROC_TYPE_KEY CURRENT_PROC_TYPE_KEY


###############################################################
#  Set Production (PAS) Locations
###############################################################
# System Production Locations
#  Production Model Symbols: These may be replaced with SYSTEM_*_ROOTs

# dmb:04/03/93:Adding OS, OS_VER to support ISS7.1 Third party
# packaging requirements
# dmb:04/03/93: The plan is something like this:
#    DELIVER=deliver/ws_s
#    DELIVER=deliver/clix/6.5/ws_s
#    DELIVER=deliver/clix/7.0/ws_s
#    DELIVER=deliver/sunos/4.1.2/ws_s
#    DELIVER=deliver/sunos/4.1.3/ws_s
#    DELIVER=deliver/sunos/5.1/ws_s
#    DELIVER=deliver/irix4/ws_s

# dmb:03/25/93: Changing to unbundled model for ISS7.1
# dmb:04/08/93: Changed from SUNOS to SUNOS4
# dmb:04/26/93:Added SCO for SCO_UNIX port
OS_KEY_INITIALIZATION_LIST="SUNOS4 SUNOS5 IRIX CLIX SCO HPUX" 
SUPPORTED_OS_KEY_INITIALIZATION_LIST="SUNOS4 SUNOS5 IRIX CLIX SCO HPUX"

# This is blank so all of this gets skipped
# echo  CURRENT_OS_KEY is $CURRENT_OS_KEY
CURRENT_OS_KEY=$OS_KEY
case $CURRENT_OS_KEY
in
  HPUX )
      OSDIR=hpux
      OSVER=A.09.00
      OSVERLIST="A.09.00"
      ;;

  SCO )
     OSDIR=sco
     OSVER=3.2
     OSVERLIST="3.2"
#     DLVRPROC=""
     ;;
  CLIX )
     OSDIR=clix
#     OSVER=7.0
#     OSVERLIST="7.0"

     OSVER=7.1
# dmb:08/09/93:Try making this dynamic
#     OSVERLIST="7.1"
     OSVERLIST="$OSVER"

#     OSVERLIST="6.5 7.0"
#dmb:04/24/93:This should be either 7.1 for ISS7.1 or 3.1 for CLIX 3.1
#     OSVERLIST="7.1"
#     OSVERLIST="3.1"
#     DLVRPROC=""
    ;;
#   SUNOS | SUNOS4 )
   SUNOS4 )
     OSDIR=sunos
#     OSVER=4.1.2
# sml:08-04-93 get actual version
     OSVER=`uname -r`
#     OSVERLIST="4.1.2 5.1"
# dmb:08/09/93:Try making this dynamic
#     OSVERLIST="4.1.2"
     OSVERLIST="$OSVER"

#     DLVRPROC=""
    ;;
   SUNOS5 )
     OSDIR=sunos
#     OSVER=5.1
#     OSVERLIST="5.1"

     OSVER=5.10
# dmb:08/09/93:Try making this dynamic
#     OSVERLIST="5.2"
     OSVERLIST="5.10"

#     OSVERLIST="4.1.2 5.1"
#     DLVRPROC=""
    ;;
  IRIX )
     OSDIR=irix
#     OSVER=4.0.5
# sml:08-11-93 get actual version
     OSVER_STRING=`uname -r`
# sml:08-11-93 need to cut the version out of OSVER_STRING, hard-code it for now
#     OSVER=5.1
#     OSVER=`echo $OSVER_STRING | cut -f1 -d"-"`

     case $OSVER_STRING
     in
	4.* )
	  OSVER=$OSVER_STRING
	;;

	5.* )
	  OSVER=`echo $OSVER_STRING | cut -f1 -d"-"`
	;;

     esac


#     OSVERLIST="4.0.5"
#     OSVERLIST="4.0.5 5.1"
     OSVERLIST="5.2"
#     DLVRPROC=""
    ;;
esac


SOURCE=source

# dmb:04/03/93:New Set
BUILD=build/$OSDIR/$OSVER/${CURRENT_PROC_TYPE}
# Note the usage implication: SYSBLD is the built image, SYSTST is
# the location of test programs and data.
#TEST=build/${CURRENT_PROC_TYPE}/test

# These are only needed internally
PACKAGE=package/$OSDIR/$OSVER/${CURRENT_PROC_TYPE}
RELEASE=release/$OSDIR/$OSVER/${CURRENT_PROC_TYPE}

# dmb:04/02/93:CLIX6.5 complains when trying to mkdir -p this...
#DELIVER=deliver/$OSDIR/$OSVER/$DLVRPROC/ws_s

# sml:11-22-94:need CURRENT_PROC_TYPE for INTEL_SOLARIS, 
#              because have sunos/5.2 on SPARC_SOLARIS and INTEL_SOLARIS
#DELIVER=deliver/$OSDIR/$OSVER/ws_s

# CLIX is special because we deliver c100 and c400 out of same directory
if [ $OS_KEY = "CLIX" ]
then
  DELIVER=deliver/$OSDIR/$OSVER/ws_s
else
  DELIVER=deliver/$OSDIR/$OSVER/$CURRENT_PROC_TYPE/ws_s
fi

export OSDIR OSVER DLVRPROC
export OS_KEY_INITIALIZATION_LIST OSVERLIST DLVRPROCLIST


# dmb:03/25/93:End ISS71 unbundling changes


SYSTEM_NAME_KEY=`echo ${SYSTEM_NAME} | tr '[a-z]' '[A-Z]'`
SYSTEM_ROOT=${HOME}/isdp/${SYSTEM_NAME}
SYSTEM_VERSION_NUMBER=`echo $SYSTEM_VERSION_STRING | sed 's/\.//g'`
SYSTEM_VERSION=${SYSTEM_VERSION_STRING}

SYSTEM_LOCATION=${SYSTEM_ROOT}
SYSTEM_SOURCE=${SYSTEM_LOCATION}/${SOURCE}
#SYSTEM_PROJECT_INFORMATION=${SYSTEM_LOCATION}/${SOURCE}/projinfo
SYSTEM_LOG=${SYSTEM_LOCATION}/${SOURCE}/log
SYSTEM_INFORMATION=${SYSTEM_LOCATION}/${SOURCE}/sysinfo10
SYSTEM_PRODUCT_INFORMATION=${SYSTEM_LOCATION}/${SOURCE}/prodinfo
SYSTEM_BUILD_ROOT=${SYSTEM_LOCATION}/build
SYSTEM_BUILD=${SYSTEM_LOCATION}/${BUILD}
SYSTEM_PACKAGE_ROOT=${SYSTEM_LOCATION}/package
SYSTEM_PACKAGE=${SYSTEM_LOCATION}/${PACKAGE}
SYSTEM_RELEASE_ROOT=${SYSTEM_LOCATION}/release
SYSTEM_RELEASE=${SYSTEM_LOCATION}/${RELEASE}
SYSTEM_DELIVER_ROOT=${SYSTEM_LOCATION}/deliver
SYSTEM_DELIVER=${SYSTEM_LOCATION}/${DELIVER}

export SYSTEM_NAME_KEY SYSTEM_ROOT
export SYSTEM_VERSION_STRING SYSTEM_VERSION_NUMBER SYSTEM_VERSION
export SYSTEM_LOCATION SYSTEM_SOURCE SYSTEM_INFORMATION
export SYSTEM_BUILD SYSTEM_BUILD_ROOT 
export SYSTEM_PACKAGE SYSTEM_RELEASE SYSTEM_DELIVER

#SYSTEM_TEST_ROOT=${SYSTEM_LOCATION}/test
#SYSTEM_TEST=${SYSTEM_LOCATION}/${TEST}
#export SYSTEM_TEST_ROOT SYSTEM_TEST_ROOT

export SYSTEM_PACKAGE_ROOT SYSTEM_RELEASE_ROOT SYSTEM_DELIVER_ROOT

# Integrator's Symbols
#PROJINFO=$SYSTEM_PROJECT_INFORMATION
SYSINFO=$SYSTEM_INFORMATION
PRODINFO=$SYSTEM_PRODUCT_INFORMATION
SYSLOG=${SYSTEM_LOG}
SYSSRC=${SYSTEM_SOURCE}
SYSBLD=${SYSTEM_BUILD}
export PROJINFO SYSINFO PRODINFO SYSLOG SYSSRC SYSBLD

#SYSTEST=${SYSTEM_TEST}
#SYSTST=${SYSTEM_TEST}
#export SYSTEST SYSTST

# Packaging Locations
# These belong in $SYS_SRC/prodinfo/product.env
PROD_SRC=$SYSTEM_SOURCE
PROD_BLD=$SYSTEM_BUILD
PROD_REL=$SYSTEM_RELEASE/${PROD_NAME}
PROD_DLVR=$SYSTEM_DELIVER/${PROD_NAME}
export PROD_DLVR

# This must be in system.env or here.
PROD_INFO_DIR=$SYSTEM_SOURCE/prodinfo/${PROD_NAME}


# Not used yet
#PROJLOG=$SYSTEM_PROJECT_LOG
#PRODLOG=$SYSTEM_PRODUCT_LOG
#export PROJLOG SYSLOG PRODLOG 

# Project Symbols - Not used yet
# Since there is only one Project in this System, we can set these
# Project symbols from the System Symbols
#PROJECT_ROOT=${HOME}
#PROJECT_VERSION_STRING=${SYSTEM_VERSION_STRING}
#PROJECT_VERSION_NUMBER=${SYSTEM_VERSION_NUMBER}
#PROJECT_VERSION=${SYSTEM_VERSION_STRING}


###############################################################
# Set Build Parameters
###############################################################

#  Locations

# dmb:01/05/92: Changed to use UMS include files under product directory
#UMS=/usr
UMS=`proddata +%p -x ums`

#FS=/usr

# dmb:11/30/92:Added to keep up with new FS include location
# dmb:04/06/93:Changing for post ISS70
#FS_INCLUDE=`proddata '+%p' -x fontserve`
# dmb:11/16/91:Added to compensate for new location of FS include files.
# dmb:11/30/92:Original
#FS_INCLUDE=/usr/include/X11

#sml:10-11-93 add XC shell variable 
XC=`proddata '+%p' -x libxc`

LICTOOL_DIR=`proddata '+%p' -x i_lictool`
if [ -z "$LICTOOL_DIR" ]
then
  LICTOOL_LIB=
  LICTOOL_INCLUDE_FILE=
else
  LICTOOL_LIB=$LICTOOL_DIR/api.o
  LICTOOL_INCLUDE_FILE=$LICTOOL_DIR/api.h
fi
export UMS FS FS_INCLUDE XC LICTOOL_DIR LICTOOL_LIB LICTOOL_INCLUDE_FILE

XFORMS=${SYSTEM_BUILD}
export XFORMS

XFI=${SYSTEM_BUILD}/xfi
XFB=${SYSTEM_BUILD}/xfb
XMB=${SYSTEM_BUILD}/xmb
XFUTIL=${SYSTEM_BUILD}/util
export XFI XFB XMB XFUTIL

LIB_DIR=$XFI/lib/${CURRENT_PROC_TYPE}
export LIB_DIR
#echo Set LIB_DIR to $LIB_DIR


# dmb:05/02/91: This is required to get the examples to compile correctly
# both in the Integration platform and as delivered to customers
#dmb:Original
#XFI_INC_DIR=$XFI/include
#dmb:Added kludge for EXNUC's new requirement
#XFI_INC_DIR=$XFI/include/X11
#dmb:Removed kludge for EXNUC's new requirement
XFI_INC_DIR=$XFI/include
XFB_INC_DIR=$XFB/include
export XFI_INC_DIR XFB_INC_DIR


#  Compiler Switches

case $OS_KEY
in
  "HPUX" )
    CC="cc"
    COPT="-Aa -Dhpux=1 -D__hp9000__ -Dhp9000=1"
    if [ "$DBG" ]
    then
	COPT="$COPT -g"
    else
	COPT="$COPT "
    fi


    #sml:turn off licensing everywhere
    COPT="$COPT -Dlicensing_off=1"
 
    DBGFLAGS=""
    DOPT="$DBGGLAGS -DHPUX -Dhpux -D_INCLUDE_POSIX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE"

    ANSI_INCLUDE=/usr/include


#    sml:11-10-94 no fontserver on HP
    HP_FS_LIB=
    export HP_FS_LIB

    #sml:11-10-94: add HP_FORMS_LIB, HP_XLIB and MALLOC_LIB
    HP_FORMS_LIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$HP_FORMS_LIB
    MALLOC_LIB=-lmalloc
    HP_XLIB=-lX11_s
    export HP_FORMS_LIB MALLOC_LIB HP_XLIB FORMS_LIB

#  sml:11-10-94 add FS_INCLUDE and X11_INCLUDE_LOC for HP
    FS_INCLUDE=$XFI/fs_include
    X11_INCLUDE_LOC=/usr/include/X11R5
    export FS_INCLUDE X11_INCLUDE_LOC

    MAKEMAKE="makemake -DHPUX -i $SYSINFO/ignoreh.hp"

    PIC=""

  ;;

  "SCO" )
    # Set system build parameters
    CC="cc"

# dmb:08/24/92: Use for knr builds...
#    COPT="-knr"
# dmb:08/24/92: Use for ansi builds...
#    COPT="-ansi"

#dmb:04/27/93:This will produce an executable.
    COPT="-strict"

# dmb:04/26/93:Try this for var_args
# dmb:04/27/93:...another bad guess. hold this for now.
#    COPT="$COPT -D_VA_LIST"

#dmb:06/08/92:Hold POSIX for now.
#dmb,sml:06/03/92:Save this for ANSI POSIX
#dmb:04/27/93:Try ANSI POSIX for SCO UNIX
#dmb:04/27/93:Apparently -strict handles this.
#    COPT="$COPT -D_POSIX_SOURCE=1"

#dmb:06/03/92:Kludge for ANSI POSIX until system include files are fixed.
#    COPT="$COPT -I$XFI/include/posix_clipper"


    if [ "$DBG" ]
    then
      COPT="$COPT -g"
	  STRIP=
    else
      COPT="$COPT -O"
    fi

 
#sml:turn off licensing everywhere
    COPT="$COPT -Dlicensing_off=1"
 
    DBGFLAGS=""
#    DOPT="$DBGGLAGS -DSCO -Dsco -DSYSV"
    DOPT="$DBGGLAGS -DSCO -Dsco"

# sml:10-21-94 added this for SCO
    MOPT="-Di386 -D__386"

#dmb:04/26/93:Guessing that /usr/framme/ftrs/inc can be used for this
#    ANSI_INCLUDE=/usr/include
#dmb:04/27/93:Hmmm... looks like a bad guess...
#   ANSI_INCLUDE=/usr/framme/ftrs/inc
   ANSI_INCLUDE=/usr/include
    
    FS_LIB=$FS/lib/${CURRENT_PROC_TYPE}/libXFS_s.a
#    sml:10-24-94 no fontserver on SCO
#    SCO_FS_LIB=-lXFS_s
    SCO_FS_LIB=
    export SCO_FS_LIB

#  sml:10-24-94 add FS_INCLUDE and X11_INCLUDE_LOC for SCO
    #sml:10-24-94: add SCO_FORMS_LIB, SCO_XLIB and MALLOC_LIB
    SCO_FORMS_LIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$SCO_FORMS_LIB
    MALLOC_LIB=-lmalloc
    SCO_XLIB=-lX11_s
    export SCO_FORMS_LIB MALLOC_LIB SCO_XLIB FORMS_LIB

    FS_INCLUDE=/usr/include
    X11_INCLUDE_LOC=/usr/include/X11
    export FS_INCLUDE X11_INCLUDE_LOC

#    MAKEMAKE="makemake -DSCO -i $SYSINFO/ignoreh.clix"
#    MAKEMAKE="makemake -DSCO"
#    MAKEMAKE="echo makemake -DSCO "
#    MAKEMAKE="echo makemake -DSCO -i $SYSINFO/ignoreh.sco"
    MAKEMAKE="makemake -DSCO -i $SYSINFO/ignoreh.sco"

    #sml:10-24-94: add SCO_FORMS_LIB, SCO_XLIB and MALLOC_LIB
    SCO_FORMS_LIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$SCO_FORMS_LIB
    MALLOC_LIB=-lmalloc
    SCO_XLIB=-lX11_s
    export SCO_FORMS_LIB MALLOC_LIB SCO_XLIB FORMS_LIB

    #dmb:05/19/92: We have to do this because of the way ld.so works.
#    SCO_UMS_LIB=-lUMS
    UMS_LIB_DIR=$UMS/lib/${CURRENT_PROC_TYPE}
    UMS_ARLIB=$UMS_LIB_DIR/libUMS.a
    UMS_LIB=$UMS_ARLIB
    

    PIC=""
    ;;

  "CLIX" )
    # Set system build parameters
    CC="acc"

# dmb:08/24/92: Use for knr builds...
#    COPT="-knr"
# dmb:08/24/92: Use for ansi builds...
    COPT="-ansi"

#dmb:06/08/92:Hold POSIX for now.
#dmb,sml:06/03/92:Save this for ANSI POSIX
#    COPT="$COPT -D_POSIX_SOURCE=1"

#dmb:06/03/92:Kludge for ANSI POSIX until system include files are fixed.
#    COPT="$COPT -I$XFI/include/posix_clipper"

    if [ "$DBG" ]
    then
      COPT="$COPT -g -O0"
	  STRIP=
    else
      COPT="$COPT -O3"
    fi
 
#sml:turn off licensing everywhere
    COPT="$COPT -Dlicensing_off=1"

    DBGFLAGS=""
    DOPT="$DBGGLAGS -DCLIX -DSYSV"

#dmb:04/06/93:Added X11_INCLUDE_LOC and X11_LIB_LOC
    MGUI_LOC=`proddata '+%p' -x I_MGUI`
    X11_INCLUDE_LOC=$MGUI_LOC/include
#    X11_LIB_LOC=$MGUI_LOC/lib/${CURRENT_PROC_TYPE}

    ANSI_INCLUDE=/usr/include

    # dmb:04/06/93:Changing for post ISS70
    FS_INCLUDE=`proddata '+%p' -x fontserve`

    FS_LIB=$FS/lib/${CURRENT_PROC_TYPE}/libXFS_s.a
    CLIX_FS_LIB=-lXFS_s
    export CLIX_FS_LIB

    ANSI_INCLUDE=/usr/include
#dmb:04/16/92:As used in HELP
#    MAKEMAKE="makemake -DCLIX -i $SYSINFO/src/ignoreh.clix"
    MAKEMAKE="makemake -DCLIX"

    #dmb:05/19/92: We have to do this because of the way ld.so works.
#    CLIX_UMS_LIB=-lUMS
    UMS_LIB_DIR=$UMS/lib/${CURRENT_PROC_TYPE}
    UMS_ARLIB=$UMS_LIB_DIR/libUMS.a
    UMS_LIB=$UMS_ARLIB

#dmb:05/13/92: for multi-platform support
    FORMS_SHLIB=$LIB_DIR/libXFI_s.a
    FORMS_TARGET_SHLIB=$LIB_DIR/libXFI_s
    FORMS_ARLIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$FORMS_SHLIB

    # dmb:03/24/92:Added for examples
#dmb:08/26/92:Old way
#    CLIX_FORMS_LIB=$FORMS_SHLIB
    CLIX_FORMS_LIB=$FORMS_LIB

    PIC=""
    ;;
  "IRIX" )
    # Set system build parameters
    CC="cc"

# dmb:08/24/92: Use for knr builds...
#    COPT="-cckr"

# dmb:08/24/92: Use for ansi builds...
    COPT="-ansi"

# dmb:09/28/92: Need to use signed characters.
    COPT="$COPT -signed"

    if [ "$DBG" ]
    then
      COPT="$COPT -g -O0 -DDEBUG"
	  STRIP=
    else
# dmb:10/26/92:Optimization level is different on SGI compiler.
      COPT="$COPT -O2"
    fi

    DBGFLAGS=""
    DOPT="$DBGGLAGS -DIRIX -DSYSV"

#dmb:04/06/93:Added X11_INCLUDE_LOC and X11_LIB_LOC
    MGUI_LOC=`proddata '+%p' -x MGUI`
    X11_INCLUDE_LOC=/usr/include
#    X11_LIB_LOC=/usr/lib

    ANSI_INCLUDE=/usr/include

    # dmb:04/06/93:Changing for post ISS70
#sml:10-11-93 get FS from proddata and change include directory and lib file
    FS=`proddata +%p -x resources`
    FS_INCLUDE=$FS/fontserver/include
    FS_LIB=$FS/fontserver/libXFS.so
    MIPS_FS_LIB=$FS_LIB

#   FS_LIB=$FS/lib/libXFS.a
#dmb:08/25/92:Should be FS_LINK_LIB
#    MIPS_FS_LIB=-lXFS
    export MIPS_FS_LIB

#    XCMALLOC_LIB=/usr/lib/libxcmalloc.a
    XCMALLOC_LIB=$XC/lib/libxcmalloc.a
    export XCMALLOC_LIB

#dmb:04/16/92:As used in HELP
#    MAKEMAKE="makemake -DIRIX -i $HELP/src/ignoreh.mips"
    MAKEMAKE="makemake -DIRIX"

    #dmb:05/19/92: We have to do this because of the way ld.so works.
#    CLIX_UMS_LIB=-lUMS
    UMS_LIB_DIR=$UMS/lib/${CURRENT_PROC_TYPE}
    UMS_ARLIB=$UMS_LIB_DIR/libUMS.a
    UMS_LIB=$UMS_ARLIB
    
#dmb:05/13/92: for multi-platform support
    FORMS_SHLIB=$LIB_DIR/libXFI.so
    FORMS_TARGET_SHLIB=$LIB_DIR/libXFI.so
    FORMS_ARLIB=$LIB_DIR/libXFI.a
#dmb:08/25/92:Original
#    FORMS_LIB=$FORMS_SHLIB
#dmb:08/25/92:No sharables on MIPS... yet...
    FORMS_LIB=$FORMS_ARLIB
#dmb:08/25/92:No lictool on MIPS... yet...
    LICTOOL_LIB=" "
#dmb:04/15/93:Added LICTOOL_INCLUDE_FILE
    LICTOOL_INCLUDE_FILE=""
    export LICTOOL_LIB LICTOOL_INCLUDE_FILE

#dmb:08/21/92:Added for mips port - mkshlib is different!
    FORMS_SHLIB_SL_FILE=$XFI/src/xfi.sl_mips
    export FORMS_SHLIB_SL_FILE

    # dmb:03/24/92:Added for examples
#dmb:08/26/92:Old way
#    MIPS_FORMS_LIB=$FORMS_SHLIB
    MIPS_FORMS_LIB=$FORMS_LIB

#dmb:08/25/92:Old way...
    PIC=""

#sml:10-08-93	add -shared flag for dynamic shared objects (DSOs)
#    BUILD_SHLIB_FLAGS="-Dbuild_sharable=1"
    BUILD_SHLIB_FLAGS="-Dbuild_sharable=1 -shared"
    export BUILD_SHLIB_FLAGS

    ;;
#  "SUNOS"|"SUNOS4" )
  SUNOS4 )
echo OS_KEY is $OS_KEY
    # Set system build parameters

# dmb:08/24/92: Use for knr builds...
#    CC="cc"

# dmb:08/24/92: Use for ansi builds...
    CC="acc"

#dmb:06/08/92:Hold POSIX for now.
#dmb,sml:06/03/92:Save this for ANSI POSIX
#    COPT="-D_POSIX_SOURCE=1 -Dsun=1"
#dmb:06/03/92:Kludge for ANSI POSIX until system include files are fixed.
#    COPT="$COPT -I$XFI/include/posix_sun"

    if [ "$DBG" ]
    then
#dmb:04/15/93:Add for purify testing
#      CC="purify acc"
      COPT="-g"
	  STRIP=
    else
      COPT=""
    fi

#sml:turn off licensing everywhere
    COPT="$COPT -Dlicensing_off=1"

    DBGFLAGS=""
    DOPT="$DBGGLAGS -DSUNOS -DSUNOS4 -DBSD"

#dmb:04/06/93:Added X11_INCLUDE_LOC and X11_LIB_LOC
    MGUI_LOC=`proddata '+%p' -x MGUI`
    X11_INCLUDE_LOC=$MGUI_LOC/include
#    X11_LIB_LOC=$MGUI_LOC/lib

    ANSI_INCLUDE=/usr/sunc/lang/SC1.0/ansi_include
#dmb:04/16/92:As used in HELP
#    MAKEMAKE="makemake -DSUNOS4 -i $HELP/src/ignoreh.sun"
    MAKEMAKE="makemake -DSUNOS4"

    # dmb:04/06/93:Changing for post ISS70
    FS_INCLUDE=`proddata '+%p' -x fontserve`

    # dmb:03/24/92:Added for examples
    FS_LIB=$FS/lib/libXFS.so.1.0
    SUN_FS_LIB=-lXFS
    export SUN_FS_LIB

#    LD_LIBRARY_PATH=/usr/lib/X11
#    export LD_LIBRARY_PATH
# dmb:10/16/92:Corrected:04/16/93:Added
    LD_LIBRARY_PATH=$LIB_DIR
    export LD_LIBRARY_PATH

#dmb:05/19/92: We have to do this because of the way ld.so works.
#    SUN_UMS_LIB=-lUMS
# dmb:01/14/93:Changed to find archive under delivered product
    UMS_LIB_DIR=$UMS/lib
    UMS_ARLIB_DIR=$UMS/lib/${CURRENT_PROC_TYPE}
    UMS_ARLIB=$UMS_ARLIB_DIR/libUMS.a
    UMS_LIB=$UMS_ARLIB

    FORMS_SHLIB=$LIB_DIR/libXFI.so.1.0
    FORMS_TARGET_SHLIB=$LIB_DIR/libXFI.so.1.0
    FORMS_ARLIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$FORMS_SHLIB

#dmb:08/26/92:Note that Sun works different because of ld.so...
#   should be FORMS_SHLIB_NAME and FORMS_ARLIB_NAME
#          FORMS_LINK_LIB, SUN_FORMS_LINK_LIB...
    SUN_FORMS_LIB=-lXFI

#dmb:04/07/93:This is different between SUNOS4 and SUNOS5
    PIC="-pic"
#    export PIC
    ;;

  SUNOS5 )
    # Set system build parameters

    #dmb:08/17/94:Set build parameters based on processor type
    case $DEFAULT_PROC_TYPE
    in
      sun4)
        # dmb:08/24/92: Use for knr builds...
        #    CC="cc"

        # dmb:08/24/92: Use for ansi builds...
        CC="acc"

        #dmb:06/08/92:Hold POSIX for now.
        #dmb,sml:06/03/92:Save this for ANSI POSIX
        #    COPT="-D_POSIX_SOURCE=1 -Dsun=1"

        if [ "$DBG" ]
        then
          COPT="-g"
          STRIP=""
        else
          COPT=""
        fi
      ;;

      i86pc)
        # dmb:08/17/94: Use for all builds on INTEL_SOLARIS.
        CC="cc"

        # dmb:08/17/94: Do this to make an ansi build on INTEL_SOLARIS.
        if [ "$DBG" ]
        then
          COPT="-g"
          STRIP=""
        else
          COPT=""
        fi

        #dmb:08/17/94:This forces strict ANSI C conformance. 
        #dmb:09/15/94:XFORMS has to use this...
          COPT="$COPT -Xc"

        #dmb:08/17/94:This forces ANSI C plus Sun C compatibility extensions.
        #dmb:09/15/94:Both UMS and HELP use this...
#          COPT="$COPT -Xa"

        #dmb:08/17/94:This cause doubles within structures and any structures
        # or unions which contain doubles to be aligned on 8-byte boundaries 
        # in order to resolve byte alignment problems.  The -v option causes
        # the compiler to issue a warning whenever a structure containing a
        # double is encountered and when non-standard padding is added 
        # before a double field.
#        COPT="$COPT -W0,-xd -v"

#dmb:08/24/94:Don't use -v for now.
        COPT="$COPT -W0,-xd"

        #dmb:08/17/94:This sets the optimization level.
        COPT="$COPT -xO1"

        #dmb:08/17/94:Adding path for makemake. NON-STANDARD!!! HARD CODE!!!
        # Usually we rely on BAGTOOLS.
        PATH=$PATH:/opt/ingr/exnucdp/bin

      ;;
    esac

    DBGFLAGS=""
    DOPT="$DBGGLAGS -DSUNOS -DSUNOS5 -DSYSV"

#dmb:04/06/93:Added X11_INCLUDE_LOC and X11_LIB_LOC
#    X11_INCLUDE_LOC=$OPENWINHOME/share/include
#dmb:08/25/94:Kludge for INTEL_SOLARIS
    X11_INCLUDE_LOC=$OPENWINHOME/share/include
#    X11_LIB_LOC=/usr/lib
#    X11_LIB_LOC=$OPENWINHOME/lib

# dmb:03/23/93:Try this first
    ANSI_INCLUDE=/usr/include

#dmb:04/16/92:As used in HELP
#    MAKEMAKE="makemake -DSUNOS5 -i $SYSINFO/ignoreh.ssl"
    MAKEMAKE="makemake -DSUNOS5"

    # dmb:04/06/93:Changing for post ISS70
#    FS_INCLUDE=`proddata '+%p' -x resources`/fontserver/hfiles
    #sml:08-04-93  changed from hfiles to include
    FS_INCLUDE=`proddata '+%p' -x resources`/fontserver/include
    FS_LIB_LOC=`proddata '+%p' -x resources`/fontserver
#    FS_LIB_LOC=`proddata '+%p' -x resources`/fontserver/lib

    # dmb:03/24/92:Added for examples
#    FS_LIB=$FS/lib/libXFS.so.1.1
#    SUN_FS_LIB=-lXFS
# dmb:04/07/93:Beware of hardcoded path!!! It's just the best we can
#  do at the moment
#    FS_LIB=/opt/ingr/lib/libXFS.so.1.1
#    FS_LIB=$FS_LIB_LOC/libXFS.so.1
    FS_LIB=$FS_LIB_LOC/libXFS.so.1.1
    export FS_LIB_LOC
# dmb:04/07/93:This works, but hardcodes a path name into the executable.
#    SUN_FS_LIB=/opt/ingr/lib/libXFS.so.1.1

    SUN_FS_LIB=$FS_LIB_LOC/libXFS.so.1.1
# dmb:04/08/93:Try this when we get back up!!!
#    SUN_FS_LIB=$FS_LIB_LOC/libXFS.so.1
#dmb:04/07/93:This doesn't work on SUNOS5 yet. ld can't find the lib
 #   SUN_FS_LIB=-lXFS
    export SUN_FS_LIB

# dmb:04/16/93:It looks like concatenating these is causing the core
#  dump on SUNOS5. We'll just set the thing here like we do on SUNOS4
#  We'll also add the other required directories here.
# dmb:10/16/92:Use the newly built image first...
    LD_LIBRARY_PATH=$LIB_DIR:$LD_LIBRARY_PATH

## dmb:04/07/93:Added what should be $INGRHOME/lib, but can't be yet..
#    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ingr/lib

# dmb:04/16/93:Added FS_LIB_LOC
    FS_LIB_LOC=`proddata '+%p' -x resources`/fontserver
# dmb:04/07/93:Added FS_LIB_LOC to LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$FS_LIB_LOC
#    LD_LIBRARY_PATH=$FS_LIB_LOC:$LD_LIBRARY_PATH

# dmb:04/16/93:UMS doesn't need $FS_LIB_LOC, but set it anyway
# dmb:04/16/93:Just set it!
    LD_LIBRARY_PATH=$LIB_DIR:$FS_LIB_LOC:/opt/ingr/lib:$OPENWINHOME/lib

# dmb:03/31/93:Note what happens here! If LD_LIBRARY_PATH has more than one
# directory in it, then this will be wrong...
#    LD_LIBRARY_PATH=$INGRHOME/lib
    export LD_LIBRARY_PATH

    #dmb:05/19/92: We have to do this because of the way ld.so works.
#    SUN_UMS_LIB=-lUMS
# dmb:01/14/93:Changed to find archive under delivered product
    UMS_LIB_DIR=$UMS/lib
    UMS_ARLIB_DIR=$UMS/lib/${CURRENT_PROC_TYPE}
    UMS_ARLIB=$UMS_ARLIB_DIR/libUMS.a
    UMS_LIB=$UMS_ARLIB

    FORMS_SHLIB=$LIB_DIR/libXFI.so.2
    FORMS_TARGET_SHLIB=$LIB_DIR/libXFI.so.2
    FORMS_ARLIB=$LIB_DIR/libXFI.a
    FORMS_LIB=$FORMS_SHLIB

#dmb:08/26/92:Note that Sun works different because of ld.so...
#   should be FORMS_SHLIB_NAME and FORMS_ARLIB_NAME
#          FORMS_LINK_LIB, SUN_FORMS_LINK_LIB...
    SUN_FORMS_LIB=-lXFI

#dmb:04/07/93:No lictool on SUNOS5...
    LICTOOL_LIB=" "
    export LICTOOL_LIB
#dmb:04/15/93:Added LICTOOL_INCLUDE_FILE
    LICTOOL_INCLUDE_FILE=""
    export LICTOOL_LIB LICTOOL_INCLUDE_FILE

#dmb:04/07/93:lictools not available on SUNOS5...
    COPT="$COPT -Dlicensing_off=1"

#dmb:04/15/93:Adding INGRHOME compile switch: Currently SUNOS5 only
#sml;10-08-93:This probably ought to be taken out, because this
#             FI_USE_INGRHOME is not set by application programmers
#             and is therefore useless.
    COPT="$COPT -DFI_USE_INGRHOME=1"

#dmb:04/07/93:This is different between SUNOS4 and SUNOS5
    PIC="-k PIC"

    ;;
esac

export PIC
export UMS_LIB_DIR
#dmb:04/06/93:Added X11_INCLUDE_LOC and X11_LIB_LOC
# dmb:04/06/93:Changing for post ISS70
#export X11_INCLUDE_LOC X11_LIB_LOC FS_INCLUDE
export X11_INCLUDE_LOC FS_INCLUDE

case "$CURRENT_PROC_TYPE_KEY"
in
  HP9000 )
     DOPT="-DHPUX -D__hpux -D_INCLUDE_POSIX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE"
     MOPT="-Dhpux=1 -D__hpux__=1 -Dhp9000=1"
     ;;

  I486 )
#    COPT="$COPT -Di486"
     MOPT="-Di486 -D__i486"
#    COPT="$COPT -Dsco"
#    MOPT="-Dsco"
    ;;
  I386 )
#    COPT="$COPT -Di386"
     MOPT="-Di386 -Di__i386"
#    COPT="$COPT -Dsco"
#    MOPT="-Dsco"
    ;;
  C400 )
    COPT="$COPT -Dclipper=1 -Abss=0 -Atarg=c400 -D__cpu_c400__"
    MOPT="-Dclipper=1 -D__clipper__=1"
    ;;
  C300 )
    COPT="$COPT -Dclipper=1 -Abss=0 -Atarg=c300"
    MOPT="-Dclipper=1 -D__clipper__=1"
    ;;
  C100 )
    COPT="$COPT -Dclipper=1 -Abss=0 -Atarg=c100"
    MOPT="-Dclipper=1 -D__clipper__=1"
    ;;

  MIPS )
# Is this what we should use?????
#    COPT="$COPT -Dmips=1 -D__mips__=1 -D__mips"
    COPT="$COPT -Dmips=1"
    MOPT="-Dmips=1 -D__mips__=1"

#dmb:08/25/92:lictools not available on mips yet...
    COPT="$COPT -Dlicensing_off=1"

# dmb:08/20/92:This is just to get the fontserver includes...
#    COPT="$COPT -I$XFI/include/kludge"
# dmb:08/20/92:This is so we can build with EXNUC's new requirement...
# dmb:08/20/92: - but this isn't the way to get it!
#    COPT="$COPT -I$XFI/include/X11"

#    PIC="-pic"
#    export PIC

    ;;

  SUN4 )
    COPT="$COPT -Dsun=1"
    MOPT="-Dsparc=1 -D__sparc__=1 -Dsun=1 -D__sun__=1"

#dmb:08/21/92:Should be more like...
#   COPT="$COPT -Dsparc=1"

    PIC="-pic"
    export PIC

    ;;

  I86PC )
#    COPT="$COPT -Dsun=1"
#    MOPT="-Dsparc=1 -D__sparc__=1 -Dsun=1 -D__sun__=1"
#    MOPT="-Dsparc=1 -D__sparc__=1"

    COPT="$COPT -Dsun=1"
#    MOPT="-Di86pc=1 -D__i86pc__=1 -Dsun=1 -D__sun__=1"
#dmb:08/24/94:i86pc doesn't work. Byte swapping was hard coded. See Steve L.
# Only dynamic forms are working with this...
#    MOPT="-Di86pc=1 -D__i86pc__=1"

#dmb:08/24/94:Try to make the compile lines match sml&jet's compile script.
#    MOPT="-Dsparc=1 -D__sparc__=1 -Dsun=1 -D__sun__=1"

#dmbL08/25/94:Steve will add i86pc guard macros for byte swapping
    MOPT="-Di86pc=1 -D__i86pc__=1"

#dmb:08/21/92:Should be more like...
#   COPT="$COPT -Dsparc=1"

    PIC="-pic"
    export PIC

    ;;
  * )
    echo "Unknown cpuid $CURRENT_PROC_TYPE_KEY: Cannot set COPT"
    exit 1
    ;;
esac

export CC ANSI_INCLUDE 
export MOPT COPT DOPT DBGFLAGS
export FORMS_LIB FORMS_ARLIB FORMS_SHLIB FORMS_TARGET_SHLIB
export CLIX_FORMS_LIB SUN_FORMS_LIB MIPS_FORMS_LIB SCO_FORMS_LIB

export OS_KEY

#export FS_LIB CLIX_FS_LIB SUN_FS_LIB SCO_FS_LIB
#export FS_LIB


# dmb:12/19/91:Added so we can see what generated makefiles are doing
# dmb:06/26/92:Turn this off by default
WHY=''
#WHY=1
VERBOSE_RULES=1
export WHY VERBOSE_RULES

# dmb:02/21/92:Added for new support for $EDITOR in build process.
FCEDIT=${EDITOR:-vi}
VISUAL=${EDITOR:-vi}
EDITOR=${EDITOR:-vi}
export FCEDIT VISUAL HISTSIZE

###################################################################
# A few notes on the PIC setting
##dmb:04/07/93:Old way...
##    PIC="-pic"
##dmb:04/07/93:New way...
#case $CURRENT_OS_KEY
#in
#  CLIX )
#    PIC=""
#  ;;
#  IRIX )
#    PIC=""
#  ;;
#  SUNOS|SUNOS4 )
#    PIC="-pic"
#  ;;
#  SUNOS5 )
#    PIC="-k PIC"
#  ;;
#esac
#

#    BUILD_SHLIB_FLAGS="-Dbuild_sharable=1"
#    export BUILD_SHLIB_FLAGS
#
#
#set +x 
