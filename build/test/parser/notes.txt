LEX Tutorial
http://epaperpress.com/lexandyacc/

Metacharacter  	Matches
.       any character except newline
\n 	    newline
* 	    zero or more copies of the preceding expression
+ 	    one or more copies of the preceding expression
? 	    zero or one copy of the preceding expression
^ 	    beginning of line
$ 	    end of line
a|b 	  a or b
(ab)+   one or more copies of ab (grouping)
"a+b"   literal "a+b" (C escapes still work)
[]      character class

Expression Matches
abc            abc
abc*           ab abc abcc abccc ...
abc+           abc, abcc, abccc, abcccc, ...
a(bc)+         abc, abcbc, abcbcbc, ...
a(bc)?         a, abc
[abc]          one of: a, b, c
[a-z]          any letter, a through z
[a\-z]         one of: a, -, z
[-az]          one of: - a z
[A-Za-z0-9]+ 	 one or more alphanumeric characters
[ \t\n]+ 	     whitespace
[^ab] 	       anything except: a, b
[a^b] 	       a, ^, b
[a|b] 	       a, |, b
a|b 	         a, b

Name              Function
int yylex(void)   call to invoke lexer, returns token
char *yytext 	    pointer to matched string
yyleng 	          length of matched string
yylval 	          value associated with token
int yywrap(void)  wrapup, return 1 if done, 0 if not done
FILE *yyout 	    output file
FILE *yyin 	      input file
INITIAL 	        initial start condition
BEGIN condition   switch start condition
ECHO              write matched string
---------------------------------------------------
.. definitions ...
%{
  Everything exched as C
%}
lex defines

%%
... rules ...
patterns begin in column 1 then whitespace then optional action
   Things not beginning in column 1 are echoed
%%
... subroutines ...

---------------------------------------------------
%{
    int yylineno;
%}
%%
^(.*)\n    printf("%4d\t%s", ++yylineno, yytext);
%%
int main(int argc, char *argv[]) {
    yyin = fopen(argv[1], "r");
    yylex();
    fclose(yyin);
}
======================================
yacc -d bas.y                   # create y.tab.h, y.tab.c
lex bas.l                       # create lex.yy.c
cc lex.yy.c y.tab.c -obas.exe   # compile/link

