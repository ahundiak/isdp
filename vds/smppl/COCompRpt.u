/* $Id: COCompRpt.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COCompRpt.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COCompRpt.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

#include "ciminimum.h"
#include "OMminimum.h"
#include "cimacros.h"
#include "cievent.h"
#include "SMdef.h"
#include "SMmacros.h"
#include <string.h>

extern int printf(),sprintf();


char   mes_f[50];

extern int SMReport();
main()
{
  int 		over, sts, msg;
  char          f_name[256],my_msg[300];
  short		state, type, options, out_units;
  
  over = 1;

  strcpy(mes_f,"Generate Compartment Report");
  message(mes_f);
  
  ci$get(prompt = "Keyin report file name [Comp.rpt]",
	 string = f_name,
	 rc     = sts);
  if(sts == 1 && f_name[0] != '\0')
   {
     /* Nohing */
   }
  else
    strcpy(f_name,"Comp.rpt");

  state     = SM_NEW | SM_MOD | SM_UPD;
  type      = SM_COMPART;
  options   = SM_REG_RPT | SM_ASCII_FILE;
  out_units = SM_UNIT_MTR;

  sts = SM$Report( msg       = &msg,
                   filename  = f_name,
		   options   = options,
		   out_units = out_units,
  		   state     = state,
		   type      = type);

  if(!(sts & 1)) printf("Bad sts: %d\n", sts);
  if(!(msg & 1)) printf("Bad msg: %d\n", msg);
  
  sprintf(my_msg,"Compartment report %s created",f_name); 
  status(my_msg);
}

wakeup(){
	message(mes_f);
}
