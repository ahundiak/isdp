/* $Id: COstate.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COstate.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COstate.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "growner.h"
#include "nddef.h"
#include "macro.h"
#include "ACattrib.h"
#include "ACrg_collect.h"
#include "emsmass.h"
#include "asbox.h"
#include "AS_status.h"
#include "msdef.h"
#include "SMdef.h"
#include "SMmacros.h"

#include "SMcomp_def.h"

#define		MAX_TEMP 4

struct GRid 	obj;
IGRchar		mes_f[80];
IGRshort	state;
struct GRmd_env MOD_ENV;

extern printf(), ASsuper_construct();


main()
{
 strcpy(mes_f,"Get object state");
 message(mes_f);

 ASsuper_construct();

 while(1)
  {
   message(mes_f);

   if(!ci$locate( prompt       = "Identify a SMAN OBJECT",
		  classes      = "SMmgr",
                  properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                  owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	          obj          = &(obj.objid),
                  osnum        = &(obj.osnum),
		  md_env       = &MOD_ENV ) ) break;
    printf("obj: %d, %d\n", obj.objid, obj.osnum);
    ci$send(msg = message SMmgr.SMGetState(&state),
    		targetid = obj.objid,
		targetos = obj.osnum);
		
    if(state & SM_NEW) printf("State   NEW\n");
    if(state & SM_MOD) printf("State   MOD\n");
    if(state & SM_UPD) printf("State   UPD\n");
    if(state & SM_ACT) printf("State   ACT\n");

   }
}


wakeup(){
	message("Get state");
}
