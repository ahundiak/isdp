/* $Id: COSectMod.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COSectMod.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COSectMod.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

#include <stdio.h>
#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "growner.h"
#include "nddef.h"
#include "macro.h"
#include "ACattrib.h"
#include "ACrg_collect.h"
#include "emsmass.h"
#include "asbox.h"
#include "AS_status.h"
#include "msdef.h"
#include "ndmacros.h"
#include "SMdef.h"
#include "SMmacros.h"

#include "SMcomp_def.h"


IGRchar             txt[40];
struct GRmd_env	    MOD_ENV;
IGRchar		    mes_f[80];
int 		    i, msg, sts, NbFrame;
struct GRid         sect, cs, comp, frame[2*SM_MAX_PARTS];
struct SMSectInfo   Info;
IGRint              cn_type;

extern free(), printf();
extern ASmake_source_from_env(), ASsuper_construct();
extern NDwait_batch();

main()
{
 strcpy(mes_f,"Modify Calculation Section");
 message(mes_f);

 ASsuper_construct();

 while(1)
  {
   message(mes_f);

     if(!ci$locate( prompt       = "Identify a Calculation Section",
		    classes      = "SMsection",
                    properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                    owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            obj          = &sect.objid,
                    osnum        = &sect.osnum,
		    md_env       = &MOD_ENV ) ) break;

  sts = ci$send(msg = message SMsection.SMSectGetCal(&msg, &cs, &comp, &NbFrame,
                   frame, &Info),
		        targetid = sect.objid,
			targetos = sect.osnum);
  if(!(sts & 1)) 
   {
    printf("ERROR .....\n");
    continue;    
   }

  if(msg != MSSUCC)
   {
    printf("PROBLEM .....\n");
    continue;    
   }
   
  printf("\n");
  if(Info.mode == SM_SECT_AUTO)
   {
    printf("Mode AUto (Not yet implemented)\n");
    continue;
   }

  printf("cs: %d, %d\n", cs.objid, cs.osnum);
  printf("comp: %d, %d\n", comp.objid, comp.osnum);

  printf("Nb part: %d, axis: %c, offset: %lf\n", Info.NbPart, Info.axis, Info.EndOffset);
  printf("\n");

  for(i=0;i<NbFrame;i=i+2) 
   {
    printf("Fr frame: %d, %d, To frame: %d, %d\n", frame[i].objid, frame[i].osnum,
                          frame[i+1].objid, frame[i+1].osnum);
   }

  if(Info.mode == SM_SECT_SGL)
   {
    printf("Mode Single\n");
    printf("Nb sect: %d\n",Info.att.sgl.NbSect);
    
    /* Change the numbre of sections */
    Info.att.sgl.NbSect = Info.att.sgl.NbSect + 2;
   }
  else if(Info.mode == SM_SECT_USER)
   {
    printf("Mode user\n");
    for(i=0;i<Info.NbPart;i=i+1)
     {
      printf("Nb sect: %d, Fr Dx: %lf, To Dx: %lf\n", Info.att.usr[i].NbSect,
                                Info.att.usr[i].FrDx, Info.att.usr[i].ToDx);
      /* Change the numbre of sections */
      Info.att.usr[i].NbSect = Info.att.usr[i].NbSect + 1;
     }
   }
  else
   {
    printf("Unknon mode !!!!\n");
    continue;
   }   
   
  sts = ci$send(msg = message SMsection.SMSectSetCal(&msg, &cs, &comp, NbFrame,
                   frame, &Info),
		        targetid = sect.objid,
			targetos = sect.osnum);
   if(!(sts & 1)) 
   {
    printf("SMSectSetCal ERROR .....\n");
    continue;    
   }

  if(msg != MSSUCC)
   {
    printf("SMSectSetCal PROBLEM .....\n");
    continue;    
   }


  /* Put it in the bacth queue for recomputation */
  cn_type = ND_COMP;
  nd$wait_batch(type       = GR_GEOM_POSTED,
                l_object   = &sect,
                l_obj_info = &cn_type,
                nb_obj     = 1);


 }
}

wakeup(){
	message(mes_f);
}

