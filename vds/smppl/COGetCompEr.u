/* $Id: COGetCompEr.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COGetCompEr.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COGetCompEr.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.2  1996/09/10  13:25:54  pinnacle
# Replaced: smppl/COGetCompEr.u for:  by yzhu for vds.241
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/


#include "cieveryone.h"
#include "cimacros.h"
#include "msdef.h"
#include "growner.h"
#include "SMdef.h"
#include "SMmacros.h"

extern int printf(), SMCritSel();
extern free();
extern UI_status();

main()
{
 int 			i;
 char			loc_mes[45], name[81];
 IGRlong		status,msg;
 struct SMObjList 	list;
 
 strcpy(loc_mes,"Get Recompute Error Component");
 message(loc_mes);

 status = SM$CritSel(msg 	= &msg, 
 		     state	= SM_CAL_ERR,
		     options	= SM_REF_FILE,
 		     type	= 0xFFFF,
	    	     sub_type	= 0xFFFF,
	    	     list	= &list);
 if(!(status & 1) || msg != MSSUCC) 
  {
   /*
    * printf("Error getting the recompute error components\n");
    */
   UI_status("Error getting the recompute error components" );
   exit;
  } 
 if(list.nb_objects <= 0) 
  {
   /*
    * printf("No error component found\n");
    */
   UI_status("No recompute error component found");
   exit;
  }

 for(i=0;i<list.nb_objects;i=i+1)
  {
   /* Get the short name and hilite the bad components */
   status = ci$send(msg = message SMmgr.SMGetShortName(&msg, name),
                targetid = list.list[i].obj_id.objid,
		targetos = list.list[i].obj_id.osnum);
   if(!(status &1) || msg != MSSUCC || name[0] == '\0')
    {
     printf("No named element, id: %d, %d\n", list.list[i].obj_id.objid, list.list[i].obj_id.osnum);
     continue;
    }
   printf("Component in recomputation error: %s\n", name);

   /* Half hilite the object (TO DONE)... */
  }
 /* free the allocated memory */
 free(list.list);
}


