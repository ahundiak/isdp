________________________________________________________________________________

                        CREATING DRAWING BATCH QUEUES
________________________________________________________________________________


        This document explains how the I/VDS command "Batch Drawing 
	Process" works, and how the setup tools are to be used to 
	execute the command.

        Details on the command usage can be found in the On-Line Help 
	or in the I/VDS Reference Manual. Reviewing the On-Line Help or 
	the I/VDS Reference Manual first will give you a better
	understanding of this document.

	To use the batch drawing process, the user needs to setup his 
	own system as a client system and define another system to be the 
	server system on which to activate the batch drawing process.
	The server machine needs to have an installed version of the
	VDS product to execute the batch drawing process.
	
	Below, an overview is given of the scripts used by the batch
	drawing process and information the user needs to setup the batch
	queue connection.




USED GLOBALS
============

	The directory $VDS/batch contains a setup file called 'setup.bat'.
	This file allows the user to define the  disk partition and 
	subdirectory the batch process will use on the server. 
	The globals used are:

	BATCH_PRC_PATH		: The partition subdirectory.
	BATCH_PRC_DIR		: The process working directory.

	When connection is lost between the 'client' and the 'server' 
	systems, the files will be saved in a temporary directory. The user
	can specify these directories:

	BATCH_SAV_PATH		: The partition subdirectory.
	BATCH_SAV_DIR		: The directory name of saved processes.

	In case 'BATCH_SAV_PATH' is not specified, 'BATCH_PRC_PATH' is used.

	To review process information on the server and client, a 'log'
	file will be created. The user can specify the file name:

	BATCH_LOG_FILE		: Name of log file.

	The 'log' file will be stored in BATCH_PRC_PATH directory.





COMMUNICATION CHANNELS
======================

	In the batch mode of the drawing process, the user gives a 'login'
	name from his client system. This 'login' name with the system
	'nodename' will be used as the return address for sending e-mail
	about the status of the process.


	1. CREATION OF BATCH QUEUE ON SERVER
	====================================

	Become super-user and execute the following command.

	# $PROD/batch/VDserver.sh batdrw

		A batch queue will be created using the name 'batdrw'.
		To review the existance of the queue, use the command
		
		# qstat  

		For more details see the script VDserver.sh in $PRODDIR/batch.



	2. CREATION OF PIPE QUEUE ON CLIENT
	===================================

	Become super-user and execute the following command.

	# $PROD/batch/VDclient.sh pipdrw batdrw vds240

		A pipe queue will be created using the name 'pipdrw'.
		The pipe queue will connect itself to the queue
		'batdrw' on the server 'vds240'.  To review the 
		existance of the queue, use the command

		# qstat

		For more details see the script VDclient.sh in $PRODDIR/batch.


	3. DELETION OF BATCH/PIPE QUEUE
	===============================
	
	Become super-user and execute the following command.

	# $PROD/batch/VDrmQueue.sh

		No arguments are needed. 
		A list of existing queues are shown on the screen and the
		user is asked to type the name of the queue he wants to
		delete.

		When the queue exist and it is not active in any process, it
		will be removed.
		To review the existance of the queue, use the command
		
		# qstat  

		For more details see the script VDrmQueue.sh in $PRODDIR/batch.





HOW JOBS ARE SUBMITTED TO PROCESS
=================================

	In the command 'batch drawing process' the user has the option
	to process the views interactively or in batch. In interactive 
	mode the drawing process is handled per drawing-view.  The 
	user will get interaction back after the drawing process for
	the selected view is finished.

	In batch mode, the process is split into two parts. The first
	part includes verifying the setup files and selecting only those
	objects which are defined in the setup file (visualization
	support files).
	The objects will be contructed as section objects.  The objects
	will  be processed against a  'border' object.  The 'border' 
	object is in general a solid which is controled either
	by a model-view, view-volume or EMS-solid object.  When a 
	drawing-view is given as a 'border' object, a solid box will be
	generated to support the boundaries of the drawing-view.

	All the objects in the selected drawing-view are copied into
	the local file and information is stored in the control object
	to keep track about the process status. When the copy process is
	finished a 'setupfile' will be created.

	The 'setupfile' contains a list of all the needed support files
	for visualizition. The name of the 'setupfile' will be given
	as argument for the batch process script. The 'setupfile' is
	a randomly generated file name to avoid overwriting support 
	files for other batch drawing processes.

	The batch process script support file 'batfile' will contain
	all the needed information to handle a visualization process.

	Example of an 'batfile' is:

		#
		VDS=`cat /usr/ip32/product_data|awk '/\"Vds\"/{ print $5 }'`
		$VDS/batch/VDbatchDrw.sh vds240 your_login your_passwd \
					 /usr2/your_name dgn_file setfile


	After these script support files are generated, the design file
	will be saved and the server will be informed by the following
	system command.

		qsub -x -q batdrw batfile.




HOW THE SERVER WORKS
====================

	The server will get informed, whenever a client system sends the
	command:
			qsub -x -q batdrw batfile.
	
	It will stack the information and start processing one drawing process
	at the time. In other words, the server will pull over the
	design file and support files, and it will start processing this
	job request. The saved design file will remain on the client system. 

	Before starting the job, the server will check that the I/VDS product
	is available and is not activated. It will check that there enough 
	memory available on the server to pull over the design file and to
	process the file.

	At the end of the job, the server will inform the 'client' system
	by email about the status of the process and will send the
	file back to the 'client' system.

	For more details on the batch drawing process, see the file 
	VDbatchDrw.sh in the $PROD/batch directory.

	WARNING:	Modifying the file VDbatchDrw.sh can result in
	========	invalid processing. Be aware of this.

