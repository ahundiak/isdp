/* $Id: comp.u,v 1.1.1.1 2001/01/04 21:09:27 cvs Exp $ */
/*************************************************************************
 * I/VDS
 *
 * File:        vdtbl/func/test/ comp.u
 *
 * Description:
 *   comp.u is a ppl file used for testing component functions used for
 *	table layout summarization criteria
 *
 * Dependencies:
 *	vdtbl/func/test/comp.u
 *
 * Revision History:
 *      $Log: comp.u,v $
 *      Revision 1.1.1.1  2001/01/04 21:09:27  cvs
 *      Initial import to CVS
 *
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1995/06/22  00:14:16  pinnacle
# Created: vdtbl/func/test/comp.u by tlbriggs for vds.240
#
 * History:
 *	6/20/95		tlb		created
 ************************************************************************/

#include <stdio.h>
#include "cieveryone.h"
#include "cimacros.h"
#include "igrtypedef.h"

#include "VDcompmacros.h"

extern 	int 	VD_compPrintCompNames ();
extern 	int 	VD_compPrintCompTable ();

main()
{
	IGRboolean 	found;
	char		macro[30];
	char		comp[30];
	char		*ptr;
	int		len;

  	/* Test 1 
   	 * 	list component names 
   	 */
	
	printf ("\n---------------------------\n");
	printf ("List component names:\n");
  	ci$get( prompt  = "Give string len (-1 for next test)",
               		value  = len );
 	while (len != -1 ) {
		/* convert */
   		VD_compPrintCompNames (len);

  		ci$get( prompt  = "Give string len (-1 for next test)",
               		value  = len );
		}

  	/* Test 2
	 *	Convert component names to macros
	 */
	printf ("\n---------------------------\n");
	printf ("Convert component to macro:\n");
	VD_compPrintCompTable ();
  	ci$get( prompt  = "Give component ('next' for next test)",
               		string  = comp );
	while (strcmp (comp, "next")) {
		ptr = macro;
		found = VD_compGetMacroFromComp (comp, 30, &ptr);
		printf ("\tfound: %d\tmacro: %s\n", found, macro);

  		ci$get( prompt  = "Give component ('next' for next test)",
               		string  = comp );
		}
 	
  	/* Test 3
	 *	Convert macros to component names 
	 */
	printf ("\n---------------------------\n");
	printf ("Convert macro to component:\n");
	VD_compPrintCompTable ();
  	ci$get( prompt  = "Give macro ('next' for next test)",
               		string  = macro );
	
	while (strcmp (macro, "next")) {
		ptr = comp;
		found = VD_compGetCompFromMacro (macro, 30, &ptr); 
		printf ("\tfound: %d\tcomp: %s\n", found, comp);

  		ci$get( prompt  = "Give macro ('next' for next test)",
               		string  = macro );
		}
}
