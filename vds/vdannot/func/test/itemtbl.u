/* $Id: itemtbl.u,v 1.1.1.1 2001/01/04 21:07:41 cvs Exp $  */
/*************************************************************************
 * I/VDS
 *
 * File:        vdtbl/func/itemtbl.u
 *
 * Description:
 *   itemtbl.u is a ppl file used for testing  function VD_get_tableName
 *             and VD_get_id_env_list 
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: itemtbl.u,v $
 *      Revision 1.1.1.1  2001/01/04 21:07:41  cvs
 *      Initial import to CVS
 *
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1995/05/18  22:18:24  pinnacle
# Created: vdannot/func/test/itemtbl.u by yzhu r#
# rno
#
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      04/27/95        yzhu            creation date
 ************************************************************************/
#include "cieveryone.h"
#include "cimacros.h"
#include "cilocate.h"
#include "dpmacros.h"
#include "godef.h"
#include "gr.h"
#include "igr.h"
#include "igrdp.h"
#include "go.h"
#include "grio.h"
#include "ex.h"
#include "ACrg_collect.h"
#include "ACattrib.h"
#include "vdparmacros.h"
/*
#include "bsdbgalloc.h"
#include "bsdbgralloc.h"
#include "bsdbgfree.h"
#include "bsmalloc.h" 
*/

#include "igewindef.h"
#include "VDdrwlo.h"
#include "VDdrwtbl.h"
#include "VDdrwgrMacro.h"
#include "vdandef.h"

/* #include "VDdrwlo_pr.h"  ppl don't know it*/
/* #include "VDdrwgrProto.h" ppl don't know this prototype */

extern  int printf();
extern  char *malloc();
extern	int free();
extern  VD_matchRE();

extern  VD_drwlo_getid();
extern  long VD_get_tableName();
extern  VDbsfree_str_list();

main()
{

  IGRlong            msg;
  IGRlong            status;
  IGRint             count,i;               
  IGRchar            dirname[80];           
  IGRchar            superClassName[80];     
  IGRint             ref_file;            
  struct  VD_id_name *IdName; 

  /* input from select command 
  ci$get(      prompt  = "Give layout name",
               string  = tabnam );
  printf(" tabnam : %s \n", tabnam );

  while( 1 ) {
  if(ci$locate(prompt       = "Locate CS",
                  owner_action = LC_RIGID_COMP
                               | LC_RIGID_OWNER | LC_FLEX_COMP
                               | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                  classes      = "GRgencs",
                  md_env       = &mod_env,
                  obj          = &csId.objid,
                  osnum        = &csId.osnum)) break;
   }

  printf(" csId : id = %d os = %d \n", csId.objid, 
                                       csId.osnum );
*/

  /* set up parameters */
  strcpy( dirname, "drw_tables");
  strcpy( superClassName, "VDdrwTbl");
  ref_file = 1;
  
  IdName = NULL;
  printf(" start VD_get_tableName \n"); 
  status =
  VD_get_tableName(&msg, dirname, superClassName,
                   &count,ref_file, &IdName);

  printf(" end VD_get_tableName \n"); 
  printf(" count  = %d\n", count); 
   
  for(i = 0; i < count; i = i + 1)  {
      printf(" IdName[%d].tbl_name = %s \n", i, IdName[i].tbl_name);
      printf(" IdName[%d].deg_name.fname = %s \n", i, IdName[i].deg_file.fname);
      printf(" IdName[%d].deg_name.pname = %s \n", i, IdName[i].deg_file.pname);
      printf(" IdName[%d].tbl_id.objid = %d \n", i, IdName[i].tbl_id.objid);
      printf(" IdName[%d].tbl_id.osnum = %d \n", i, IdName[i].tbl_id.osnum);
  }

  /* BSdealloc not work */ 
  /*if( IdName) { BSdealloc((char *) IdName ); } */
}
