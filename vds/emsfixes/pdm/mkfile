.SUFFIXES: .c .o

LINKOPT =

SRC = .

IPATH =  \
	-I/export/home/impd/sp263/isdp/vds/include \
	-I/export/home/impd/sp263/isdp/vds/vdinclude \
	-I/opt/ingr/pdu/include \
	-INFM/include \
	-I/opt/ingr/nfmdp/include \
	-I/opt/ingr/pdu/include \
	-I/opt/ingr/pdudp/include \
	-I/opt/ingr/bspmathdp/include \
	-I/opt/ingr/bspmathdp/include/prototypes \
	-I/opt/ingr/exnucdp/include \
	-I/opt/ingr/grnucdp/include \
	-I/opt/ingr/modeldp/include \
	-I/opt/ingr/grnucdp/src/assoc/include_priv \
	-I/opt/ingr/grnucdp/ingrsys \
	-I/export/home/isdp/isdp263_08/vds/include \
	-I/export/home/isdp/isdp263_08/vds/vdinclude

opp = /opt/ingr/exnucdp/bin/opp

omcpp = /opt/ingr/exnucdp/bin/omcpp

CC = acc -ansi

MOPT = -Dsun=1 -D__sun__=1 -Di386=1 -D__i386=1 -D__i386__=1

ocfiles = $(EXTARG)/bin/ocfiles


# Object files 

c_objects = \
	PDMcipart.o

objects = \
	$(c_objects) 


# src group targets

objects_TARGET = /export/home/impd/sp263/isdp/vds/lib/vdpdm.o

$(objects_TARGET): $(objects)
	@echo 
	ld $(LDOPT) -r -o /export/home/impd/sp263/isdp/vds/lib/vdpdm.o $(objects)
	@if test -n "$(VERBOSE_RULES)"; then echo "\tls -ls /export/home/impd/sp263/isdp/vds/lib/vdpdm.o"; fi; ls -ls /export/home/impd/sp263/isdp/vds/lib/vdpdm.o; echo

objects_FAST: FASTstart $(objects) FASTfinish $(objects_TARGET)

PDMcipart.o : \
	$(SRC)/PDMcipart.c \
	/opt/ingr/nfmdp/include/NFMitemfiles.h \
	/opt/ingr/nfmdp/include/NFMitems.h \
	/opt/ingr/nfmdp/include/WFstruct.h \
	/opt/ingr/pdudp/include/NFMfto_buf.h \
	/opt/ingr/pdu/include/PDUerror.h \
	/opt/ingr/pdudp/include/sunlimits.h \
	/opt/ingr/pdu/include/PDUnode.h \
	/opt/ingr/pdudp/include/PDUstorage.h \
	/opt/ingr/pdudp/include/PDMexec.h \
	/opt/ingr/pdudp/include/PDMSasspro.h \
	/opt/ingr/pdudp/include/PDMSbompro.h \
	/opt/ingr/pdudp/include/PDMScicocpro.h \
	/opt/ingr/pdudp/include/PDMSfmgrpro.h \
	/opt/ingr/pdudp/include/PDMSmacropro.h \
	/opt/ingr/pdudp/include/PDMSmulfpro.h \
	/opt/ingr/pdudp/include/PDMSpdmppro.h \
	/opt/ingr/pdudp/include/PDMSpdmspro.h \
	/opt/ingr/pdudp/include/PDMSrispro.h \
	/opt/ingr/pdudp/include/PDMSrptspro.h \
	/opt/ingr/pdudp/include/PDMStoolspro.h \
	/opt/ingr/pdudp/include/PDMSinitpro.h \
	/opt/ingr/pdu/include/PDMapipro.h \
	/opt/ingr/pdu/include/PDMapi.h \
	/opt/ingr/pdu/include/PDMextapipro.h \
	/opt/ingr/nfmdp/include/NETstruct.h \
	/opt/ingr/nfmdp/include/NETdef.h \
	/opt/ingr/nfmdp/include/NFMtypes.h \
	/opt/ingr/nfmdp/include/MEMerrordef.h \
	/opt/ingr/nfmdp/include/SQLerrordef.h \
	/opt/ingr/nfmdp/include/NETerrordef.h \
	/opt/ingr/nfmdp/include/NFMerrordef.h \
	/opt/ingr/nfmdp/include/MSGstruct.h \
	/opt/ingr/nfmdp/include/DEBUG.h \
	/usr/include/sys/feature_tests.h \
	/usr/include/stdio_tag.h \
	/usr/include/sys/isa_defs.h \
	/usr/include/stdio_impl.h \
	/usr/include/iso/stdio_iso.h \
	/usr/include/stdio.h \
	/usr/include/iso/stdarg_iso.h \
	/usr/include/stdarg.h \
	/opt/ingr/nfmdp/include/ERRerrordef.h \
	/opt/ingr/nfmdp/include/ERR.h \
	/opt/ingr/nfmdp/include/MEMstruct.h \
	/opt/ingr/nfmdp/include/NFMstruct.h \
	/opt/ingr/nfmdp/include/NFMAproto.h \
	/opt/ingr/nfmdp/include/DISproto.h \
	/opt/ingr/nfmdp/include/NFMRstruct.h \
	/opt/ingr/nfmdp/include/NFMcombine.h \
	/opt/ingr/nfmdp/include/NFMRinclude.h \
	/opt/ingr/nfmdp/include/NDXstruct.h \
	/opt/ingr/nfmdp/include/MEMproto.h \
	/usr/include/sys/va_list.h \
	/usr/include/varargs.h \
	/opt/ingr/nfmdp/include/ERRproto.h \
	/opt/ingr/nfmdp/include/NFMRproto.h \
	/opt/ingr/nfmdp/include/NFMschema.h \
	/opt/ingr/nfmdp/include/NFMapi.h \
	/opt/ingr/nfmdp/include/NFMUproto.h \
	/opt/ingr/pdudp/include/PDUkernalpro.h \
	/opt/ingr/pdudp/include/PDMproto.h \
	/opt/ingr/pdudp/include/PDUpdmrpro.h

$(c_objects):
	@if [ "$(WHY)" ]; then echo "\t$(@): $?"; fi
	@if [ -z "$(VERBOSE_RULES)" ]; \
	 then \
	     echo "\t$(SRC)/$(@:.o=.c) -> $(@)"; \
	 fi
	@if [ -n "$(@D)" -a "$(@D)" != "." ]; \
	 then \
	     if [ -n "$(VERBOSE_RULES)" ]; \
	     then \
	         echo "\tcd $(@D)"; \
	     fi; \
	     cd $(@D); \
	 fi; \
	 if [ -n "$(VERBOSE_RULES)" ]; \
	 then \
	     echo "\t$(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $(SRC)/$(@:.o=.c)"; \
	 fi; \
	 $(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $(SRC)/$(@:.o=.c)
	@echo 

.c.o:
	@if [ "$(WHY)" ]; then echo "\t$<: $?"; fi
	@if [ -z "$(VERBOSE_RULES)" ]; \
	 then \
	     echo "\t$< -> $*.o"; \
	 else \
	     echo "\t$(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $*.c"; \
	 fi
	@$(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $*.c
	@echo 

FASTstart:
	@rm -f opp.list cc.list

FASTfinish:
	@if [ "$(FAST)" ]; \
	 then \
	     if [ -s opp.list ]; \
	     then \
	         echo "\topping files"; \
	         if [ -n "$(VERBOSE_RULES)" ]; \
	         then \
	             echo "\t$(ocfiles) $(opp) $(OPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2) `cat opp.list`"; \
	         fi; \
	         $(ocfiles) $(opp) $(OPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2) `cat opp.list`; \
	         sed -e 's/\.[IS]/.c/' <opp.list >>cc.list; \
	     else \
	         echo "\tnothing to opp"; \
	     fi; \
	     if [ -s cc.list ]; \
	     then \
	         echo "\tcompiling files"; \
	         if [ -n "$(VERBOSE_RULES)" ]; \
	         then \
	             echo "\t$(ocfiles) $(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c `cat cc.list`"; \
	         fi; \
	         $(ocfiles) $(CC) $(COPT) $(IPATH) $(IPATH1) $(IPATH2) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c `cat cc.list`; \
	         if [ "$(COPT)" != "-g" -a "$(DEBUG)" != "yes" ]; \
	         then \
	             echo "\tremoving .c files"; \
	             rm `cat cc.list`; \
	         else \
	             echo "\tleaving .c files"; \
	         fi; \
	     else \
	         echo "\tnothing to compile"; \
	     fi; \
	     if [ -n "$(VERBOSE_RULES)" ]; \
	     then \
	         echo "\trm -f opp.list cc.list"; \
	     fi; \
	     rm -f opp.list cc.list; \
	 fi

FAST:
	$(MAKE) FAST=1 objects_FAST

