/***************************************************************************
 * I/VDS
 *
 * File:        api/APIquery.u
 *
 * Description:
 *		Locate by Query. 
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      i-paris         creation date
 *
 ***************************************************************************/

#include	<stdio.h>
#include	"cieveryone.h"
#include	"cimacros.h"
#include	"growner.h"
#include	"grmacros.h"

#include	"vdAPImacros.h"

main() {

	IGRlong			sts, msg;
	IGRchar			type[80], clause[80];
	IGRint			count, i;
	struct	GRobj_env	*elem;

	/* Initialize */
	count = 0;
	elem  = NULL;

	/* VDS Query */
	strcpy ( type, "VSplate-VSstfBeam" );
	strcpy ( clause, "(material = steel) &! (material = aluminium)" );

	sts = vd$vds_query ( msg	= &msg,
			     types	= type,
			     where	= 1,
			     condition	= clause,
			     number	= &count,
			     object	= &elem );
	if ( sts & 0x00000001 & msg ) {
		for ( i=0; i<count; i=i+1 ) {
			printf( "\tResult %03d : [%2d|%4d] in [%2d|%d]\n", i,
				elem[i].obj_id.osnum,
				elem[i].obj_id.objid,
				elem[i].mod_env.md_id.osnum,
				elem[i].mod_env.md_id.objid );
		}
	}
	else	printf( "vd$vds_query() returns msg=%d, count=%d\n",
			msg, count );

	/* Free memory */
	if (elem) {	om$dealloc (ptr = elem);	elem = NULL;	}
}
