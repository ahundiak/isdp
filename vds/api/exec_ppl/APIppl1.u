/***************************************************************************
 * I/VDS
 *
 * File:        api/exec_ppl/APIppl1.u
 *
 * Description:
 *		Call routines from the parser.
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      i-vds           creation date
 *
 ***************************************************************************/

#include "ciminimum.h"
#include "cimacros.h"
#include "igrdp.h"
#include "godef.h"
#include "igr.h"
#include "griodef.h"
#include "go.h"
#include "ex.h"
#include "grio.h"
#include "godef.h"
#include "growner.h"
#include "v_slcdef.h"
#include "v_pplslc.h"

extern printf();

main()
{
   IGRlong	msg;
   IGRint	suc, ind, loc_type, loc_int;
   IGRdouble	loc_dbl;
   IGRchar 	loc_str[VD_K_tokMAX_SIZE];
   struct GRobj_env loc_obj, inp_obj;

	loc_dbl = 0.0;

	message("Test PPL");

      	suc = ci$locate( prompt       = "Identify Plate",
		         classes      = "VSplate",
                         properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                         owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	                 obj          = &loc_obj.obj_id.objid,
                         osnum        = &loc_obj.obj_id.osnum,
		         md_env       = &loc_obj.mod_env       );
	if( !(suc&1) ) goto quit;

	/*
	 * Get the first input argument.
	 */

	vd$ppl_getarg_at_index( which_info = INPUT_INFO,
                                index	   = 0,
                                value      = &inp_obj   );

	printf("\n inp_object = %d, %d", inp_obj.obj_id.objid, inp_obj.obj_id.osnum );

	/*
	 * Get the second input argument.
	 */

	vd$ppl_getarg_at_index( which_info = INPUT_INFO,
                                index	   = 1,
                                value      = &loc_dbl   );

	loc_dbl = loc_dbl/6.7;

	strcpy( loc_str, "Test PPL string" );

	/*
	 * Set the number of output arguments.
	 */

	vd$ppl_set_size(  which_info = OUTPUT_INFO,
			  size       = 3		);

	/*
	 * Set the value of the first output argument.	
	 */
	vd$ppl_setarg_at_index( which_info = OUTPUT_INFO,
                                index	   = 0,
                                type       = VD_double,
                                value      = &loc_dbl	);

	/*
	 * Set the value of the second output argument.	
	 */
	vd$ppl_setarg_at_index( which_info = OUTPUT_INFO,
                                index	   = 1,
                                type       = VD_string,
                                value      = loc_str	);

	/*
	 * Set the value of the third output argument.	
	 */
	vd$ppl_setarg_at_index( which_info = OUTPUT_INFO,
                                index	   = 2,
                                type       = VD_object,
                                value      = &loc_obj	);

quit:
	return 1;
}
