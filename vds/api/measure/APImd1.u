/***************************************************************************
 * I/VDS
 *
 * File:        api/APImd1.u
 *
 * Description:
 *              Measure Distance Example.
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      i-paris         creation date
 *
 ***************************************************************************/

#include	<stdio.h>
#include	"OMprimitives.h"
#include	"cieveryone.h"
#include	"cimacros.h"
#include	"AS_status.h"
#include	"growner.h"

#include	"vdmeamacros.h"

main () {

	IGRlong		sts, msg;
	IGRint		rsp;
struct	GRobj_env	Obj1, Obj2;
	IGRpoint	Pnt1, Pnt2;
	IGRdouble	dist;

	/* Locate 1st object */
	sts = ci$locate ( prompt	= "Locate 1st object",
			  response	= &rsp,
			  classes	= "EMSsurface",
			  owner_action	= LC_RIGID_COMP | LC_RIGID_OWNER
					| LC_FLEX_COMP  | LC_FLEX_OWNER
					| LC_REF_OBJECTS,
			  properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
			  md_env	= &Obj1.mod_env,
			  obj		= &Obj1.obj_id.objid,
			  osnum		= &Obj1.obj_id.osnum,
			  accept_point	= Pnt1 );
	as$status ( sts	   = sts,
		    msg	   = "ci$locate(Obj1)",
		    test   = (!(sts & 0x00000001)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	/* Locate 2nd object */
	sts = ci$locate ( prompt	= "Locate 2nd object",
			  response	= &rsp,
			  classes	= "EMSsurface",
			  owner_action	= LC_RIGID_COMP | LC_RIGID_OWNER
					| LC_FLEX_COMP  | LC_FLEX_OWNER
					| LC_REF_OBJECTS,
			  properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
			  md_env	= &Obj2.mod_env,
			  obj		= &Obj2.obj_id.objid,
			  osnum		= &Obj2.obj_id.osnum,
			  accept_point	= Pnt2 );
	as$status ( sts	   = sts,
		    msg	   = "ci$locate(Obj2)",
		    test   = (!(sts & 0x00000001)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	sts = vd$measure_distance ( msg		= &msg,
				    Object1	= &Obj1,
				    Point1	= Pnt1,
				    Object2	= &Obj2,
				    Point2	= Pnt2,
				    Distance	= &dist );
	as$status ( sts	   = sts,
		    msg	   = "vd$measure_distance()",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	printf( "APImd1 : distance = %g\n", dist );

wrapup:
	return (sts);
}
