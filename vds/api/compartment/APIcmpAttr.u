/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	api/compartment/APIcmpAttr.u
 *
 * Description:
 * 	This file is an example of a ppl file to defined some attribute for
 *	compartment. 
 *
 *	Program computes:
 *	=================
 *
 * 	Compartment Side
 *			0 : centerline,
 *                      1 : starboard,
 *                      2 : portside.
 *
 *	Aft frame
 *
 *		The name of the frame at the aft bulkhead of the enclosed
 *		boundary of compartment. If the forward boundary is between
 *		frame, this frame is the foremost frame out of the compartment.
 *
 *	Fore frame
 *
 *		The name of the frame at the foremost bulkhead of the enclosed
 *		boundary of compartment. If the forward boundary is between
 *		frame, this frame is the foremost frame within the compartment.
 *                                           
 * Dependencies:
 *	
 *	Compilation	cci.vds APIcmpAttr.u
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/


/* Minimum include  files for PPL  */

#include <stdio.h>
#include <string.h>
#include "ciminimum.h"

/* Following include file contains definition of all SMAN macros        */
/* (SM$GetAttribute , SM$SetAttribute , SM$CompCmpSide, SM$AftForeFrame */

#include "SMPPlMac.h"

main()
{
  IGRint side;
  char  comp_side[80],aft_frame_name[80],fore_frame_name[80];
  char	attr_value[256] ; /* to store value of attribute */
  long  msg;
  
  
  /* We compute the compartment side */
  SM$CompCmpSide(msg  = &msg,
		 side = &side);
  
  /* If compute has failed we put a default value */
  /* If it's ok we set a text attribute           */
  if(!(msg & 1)) strcpy(comp_side,"x");
  else           sprintf(comp_side,"%d",side);  

  /*
    We set this attribute
    Note : compartment family should be updated and have this attribute name
    if you want this attribute print in report
   */

  SM$SetAttribute(msg         = &msg,
		  name_att    = "comp_side",
		  text_value  = comp_side);
  /* We made nothing if it has failed : maybe this attribute is static  */
  /* Macro SM$SetAttribute  has displayed an error message               */
  
  /* Compute aft frame name */
  SM$AftForeFrame(msg         = &msg,
		  low_fr_name = aft_frame_name,
		  which_frame = SM_AFT_FRAME);

  if(!(msg & 1)) strcpy(aft_frame_name,"xx");

  SM$SetAttribute(msg         = &msg,
		  name_att    = "aft_frame",
		  text_value  = aft_frame_name);
 
  /* compute fore frame */
  SM$AftForeFrame(msg         = &msg,
		  low_fr_name = fore_frame_name,
		  which_frame = SM_FORE_FRAME);

  /* If fail put a default value */
  if(!(msg & 1)) {strcpy(fore_frame_name,"xx");}

  SM$SetAttribute(msg         = &msg,
		  name_att    = "fore_frame",
		  text_value  = fore_frame_name);
 

  /*
     Don't forget completion return code
   */
  
  return 1 ; /* All OK */
  
} /* main() */


