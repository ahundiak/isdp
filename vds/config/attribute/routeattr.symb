# $Id: routeattr.symb,v 1.3 2001/10/18 20:42:07 louis Exp $

# -------------------------------------------------------------------
# I/VDS
#
# File:	vds/config/attribute/routeattr.symb 
#
# Description:
#
# Dependencies:
#
# Revision History:
#	$Log: routeattr.symb,v $
#	Revision 1.3  2001/10/18 20:42:07  louis
#	tr5650 float interface for evaluate symbology
#	
#	Revision 1.2  2001/08/28 20:20:53  louis
#	ETL 7995 (JTS TR MP 5161)
#	
#	Revision 1.1.1.1  2001/01/04 21:07:23  cvs
#	Initial import to CVS
#	
#
# History:
#	MM/DD/YY	AUTHOR		DESCRIPTION
#	Aug 28, '01	Louis/Anand	Added lines for "real-time component
#					corruption detection"!! :-)
#
# -------------------------------------------------------------------

#
#  I/VDS
#
#	Attribute driven sysmbolgy support file.
#
#  Description:
#
#  	Object attributes can be checked to define a resulting symbology
#	of the constructed object.
# 	When one condition satisfies, the relative symbology will be 
#	read and returned.
#
#  Use:
#
#	Macro to access support file:
#		vd$get_attr_symbology( ... )	see: vdparmacros.h
#
#  Layout description.
#
#      COND            <attribute> <operator> <value> 
#      SYMB            <color> <weight> <style> <level>
# 
#      ...
#
#      COND            <attribute> <operator> <value>	AND
#		       <attribute> <operator> <value> 
#      SYMB            <color> <weight> <style> <level>
# 
#      ...
#
#      COND            <attribute> <operator> <value> 	OR
#                      <attribute> <operator> <value> 
#      SYMB            <color> <weight> <style> <level>
#
#
#       SYNTAX: <operator> : EQ, NE, GE, LE, GT, LT
#                            ==, !=, >=, <=, >,  <
#
# 
#
#	COND    spec_name       EQ      N1
#	SYMB    red     3       2       1
#	
#	COND    spec_name       EQ      N1	AND
#		seq_number	EQ	seq1
#	SYMB    red     3       2       1
#

# The below set of lines may be uncommented (and suitably modified) so
# that components that have control segments which do not meet, would
# have a symbology as defined by these lines.

# hvac : {
# 	$CmpWithBadSegs := exec-ppl-func("COz_compoint","VRSetupFile_ChkBadSeg");
# 	select when $CmpWithBadSegs > .0001:
#                $weight := 4;
#                $style  := 3;
#                $color  := 2;
#                $level  := 300;
# 	otherwise:
#                $weight := 0;
#                $style  := 0;
#                $color  := 1;
#                $level  := 300;
# 	end
# 
# 	symbology[ weight = $weight,
#                    style = $style,
#                    color = $color,
#                    level = $level ]
# }
