/* $Id: COtest_name.u,v 1.1.1.1 2001/01/04 21:07:33 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smcomp/cmd / COtest_name.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COtest_name.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:33  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*

   File name :		COtest_name.u
   Revision date :	93/02/22

   Description :	Test function SMSetUserAtt()
	The purpose of this function is to set a special attribute defined
	by some user rules in a PPL file 

   Function synopsis :
	extern long SMSetUserAtt(const char *attr_name, const char *ppl_name, 
		struct GRid *comp_id, struct GRmd_env *comp_env) ;
 */

#include <stdio.h>
#include <string.h>
#include "msdef.h"
#include "cieveryone.h"
#include "cimacros.h"
#include "ci_mac_def.h"
#include "bserr.h"
#include "bsconic.h"
#include "nddef.h"
#include "AS_status.h"
#include "exmacros.h"
#include "grmacros.h"
#include "grdpbdef.h"
#include "grdpbmacros.h"
#include "growner.h"
#include "msmacros.h"

extern long SMSetUserAtt()  ;



main()
{
char		attr_name[81], ppl_name[81] ;
struct GRmd_env	comp_env ;
struct GRid	comp_id  ;
long		status ;

while (1) {

   message("<Test> Compartment naming") ;

   if(!ci$locate( 	prompt       = "Identify a compartment",
                  	properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                  	owner_action = LC_RIGID_COMP  |
                                 LC_RIGID_OWNER | LC_FLEX_COMP |
                                 LC_FLEX_OWNER  | LC_REF_OBJECTS,
 	          	classes      = "SMcomp",
			md_env       = &comp_env,
	          	obj          = &comp_id.objid,
                  	osnum        = &comp_id.osnum)) break ;

   strcpy(attr_name, "attr_pipo") ;
   strcpy(ppl_name,  "ppl_toto")  ;
   status = SMSetUserAtt(	attr_name,	/* I */
				ppl_name,	/* I */
				&comp_id,	/* I */
				&comp_env	/* I */ ) ; as$status() ;
   } /* while compartment */

return status ;
}     /* main() */

