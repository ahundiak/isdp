#include "VDppl.h"
#include "VDgeom.h"
#include "VDefp.h"

#include "ci_mac_def.h"

#define MACRO_NAME    VDEFP_EFP_BEAM2D_MACRO_NAME
#define MAX_TEMP      2
#define MAX_FEET     (VDEFP_EFP_BEAM2D_FOOT_MAX)
#define MAX_CHAR_FEET 10

TGRid   CI_MACRO_ID;

extern VSefpComputeEfpBeam2d();

/* --------------------------------------
 * Macro defination
 */
main ()
{
  IGRlong sts;
  IGRint   temp_types[MAX_TEMP]  ;
  IGRchar *temp_names[MAX_TEMP] ;
  IGRchar *feet_names[MAX_FEET] ;
  GRobj   ci_mac_def1;

  IGRint  i;
  IGRchar buffer[MAX_CHAR_FEET * MAX_FEET] ;

  temp_names[VDEFP_EFP_BEAM2D_PARENT_BEAM] = "beam"  ; /* Beam  */ 
  temp_types[VDEFP_EFP_BEAM2D_PARENT_BEAM] =  macro_generic ; 

  temp_names[VDEFP_EFP_BEAM2D_PARENT_CS] = "cs"  ;     /* 2D cs  */ 
  temp_types[VDEFP_EFP_BEAM2D_PARENT_CS] =  ref_generic ; 

  feet_names[0] = "contour";
  feet_names[1] = "pt2";
  feet_names[2] = "pt3";
  feet_names[3] = "pt4";
  feet_names[4] = "pt5";
  feet_names[5] = "line1";
#if 0
  /* Set feet names */
  for (i = 0 ; i < MAX_FEET ; i = i + 1) {
    sprintf(&buffer[i*MAX_CHAR_FEET], "%s%02d", 
            VDEFP_EFP_BEAM_FOOT_NAME,i);
    feet_names[i] = &buffer[i*MAX_CHAR_FEET];
  }
#endif
  ci_mac_def1 = NULL_OBJID ;

  ac$cimacdef(cimacdef          = ci_mac_def1,
	      status            = &sts, 	
	      name              = MACRO_NAME,
              temp_num          = MAX_TEMP, 		
	      temp_names        = temp_names,
	      temp_types        = temp_types,
	      extern_feet_num   = MAX_FEET,
	      extern_feet_names = feet_names);

  if (!(sts & 1)) {
    printf("Problem creating macr defination %s\n",MACRO_NAME);
  }
  
  return 1;

} /* main() */

/* -------------------------------------------------------
 * Initial placement
 */
place()
{
  IGRstat    retFlag;
  IGRstat    sts, msg ;
  TGRobj_env macOE;
  TGRid      feetIDs[MAX_FEET];
  IGRint     feetCnt;

  retFlag = 0;

  macOE.obj_id  = CI_MACRO_ID;
  macOE.mod_env = MOD_ENV;

  sts = VSefpComputeEfpBeam2d(&macOE,0,&feetCnt,feetIDs);
  if (!(sts & 1)) {
    goto wrapup;
  }

  sts = ci$send(msg = message ci_macro.
                set_all_extern_feet(&msg, 
                                     feetCnt, 
                                     feetIDs, 
                                    &MOD_ENV),
	targetid = CI_MACRO_ID.objid,
	targetos = CI_MACRO_ID.osnum); 
  if (!(sts & msg & 1)) {
    goto wrapup;
  }

  retFlag = 1;

wrapup:
  return retFlag;
}

/* -------------------------------------------------------
 * recompute
 */
compute()
{
  IGRstat    retFlag;
  IGRstat    sts, msg ;
  TGRobj_env macOE;
  TGRid      feetIDs[MAX_FEET];
  IGRint     feetCnt;

  // Init
  retFlag = 0;

  macOE.obj_id  = CI_MACRO_ID;
  macOE.mod_env = MOD_ENV;

  // Process
  sts = VSefpComputeEfpBeam2d(&macOE,1,&feetCnt,feetIDs);
  if (!(sts & 1)) {
    goto wrapup;
  }

  // Add feet
  sts = ci$send(msg = message ci_macro.
                set_all_extern_feet(&msg, 
                                     feetCnt, 
                                     feetIDs, 
                                    &MOD_ENV),
	targetid = CI_MACRO_ID.objid,
	targetos = CI_MACRO_ID.osnum); 
  if (!(sts & msg & 1)) {
    goto wrapup;
  }

  retFlag = 1;

wrapup:
  return retFlag;
}

