/* $Id: COpt_pos.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COpt_pos.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COpt_pos.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.2  1996/03/15  06:00:48  pinnacle
# Replaced: cimacros/wireframe/cmd/COpt_pos.u for:  by rgade for vds.240
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.3 - PPM macro library - 93/06/22 (adz)
        ------------------------------------------------------------------

        File name :             COpt_pos.u
        Revision date :         94/06/22
        Authors :               Ad Zuurhout
        Product :               I/VDS 2.3 - PPMmacro library

        Description :
        -----------

                <Assoc> Place Point Position - Give Point position relative
						to coordinate system.
 */
   
#include "cieveryone.h"
#include "ciminimum.h"
#include "cimacros.h"

#include "stdio.h"
#include "AS_status.h"

int 		suc;
GRobj 		MAC1;
struct GRid 	TEMP[2];
struct GRmd_env MOD_ENV;
IGRchar		mes_f[80];
IGRchar		name[200];
IGRchar		sname[200];

extern  ASmake_source_from_env();
extern	GetDefName();

extern	sprintf();
extern	UI_status();

main()
{

IGRlong	sts;

 strcpy(mes_f,"<Assoc> Place Point Position");
 message(mes_f);
 while(1)
 {

loc_obj1:

   if(!ci$locate( prompt       = "Identify Coordinate System",
                  classes      = "GRgencs",
                  properties   = LC_RW,
                  owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	          obj          = &(TEMP[0].objid),
                  osnum        = &(TEMP[0].osnum),
		  md_env       = &MOD_ENV )) exit;

   sts = ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0]);	
   as$status( sts = sts );

   while(1){

loc_obj2:

     ci$locate(prompt      = "Identify point",
                  classes      = "GRpoint",
                  properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                  owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	          obj          = &(TEMP[1].objid),
                  osnum        = &(TEMP[1].osnum),
		  response     = &M_response,
		  md_env       = &MOD_ENV  );

     status("");
     if (M_response == EX_RJT_MOVEON) {
       exit ; /* exit command */
     }
     else if (M_response == EX_DATA || M_response == EX_OBJID) {
       sts = ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]) ;
       as$status( sts = sts );
     }
     else if (M_response == EX_BACK_UP) {
       goto loc_obj1 ;
     }
     else {
       #ifdef DEBUG
       printf("Unknown M_response \n") ;
       #endif
       exit ;
     }

     MAC1 = NULL_OBJID;
     ci$get_module_info(md_env = &MOD_ENV);

     ci$send(msg = message nci_macro.init
		( &suc,  0,  "pt_pos",  2, TEMP,  0, &MOD_ENV ),
	        targetid = MAC1,
		targetos = MOD_ENV.md_id.osnum );

     if( suc == 0 ){
	write("placement of nci_macro \"pt_pos\" failed\n");
	status("placement of nci_macro \"pt_pos\" failed");
      	ci$send(msg = message Root.delete(0),
		targetid = MAC1,
		targetos = MOD_ENV.md_id.osnum );

	exit;
     }
     else{
       GetDefName( "pt_0", name );
       ci$send(msg = message GRgraphics.GRputname( &suc, name ),
  	       targetid = MAC1,
	       targetos = MOD_ENV.md_id.osnum );
       sprintf(sname, " Macro %s placed", name );
       UI_status( sname );

       goto loc_obj2;
     }
   }
 }
}


wakeup(){
	message(mes_f);
}

