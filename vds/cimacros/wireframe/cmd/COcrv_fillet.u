/* $Id: COcrv_fillet.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COcrv_fillet.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COcrv_fillet.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.2  1996/05/17  08:06:48  pinnacle
# Replaced: cimacros/wireframe/cmd/COcrv_fillet.u for:  by apazhani for vds.240
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 			ci_mac_bib_FileId;

struct GRmd_env	MOD_ENV;
struct GRid 	TEMP[3];
GRobj 		MAC1;
int             num_ent, j;
int 		suc, mask, response;
char		loc_mes[80],loc_prompt[80], exp_prompt[80];
double		exp_default;
double		number;

extern ASmake_source_from_env();

struct
{
    double  data_point[3];
    double  dir0;
    double  dir1;
    int	    int_index;
}var;


main()
{
  mask =  GRm_RJT_MOVEON | GRm_DATA | GRm_BACK_UP;

  while(1)
  {

step0:
       strcpy(loc_prompt,"Key in expression name or value for radius");
       strcpy(exp_prompt,"enter radius value");
       exp_default = 2.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[2];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) exit;

       while(1)
       {


step1:      if(!ci$locate( prompt       = "Identify curve 1",
                           properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                           owner_action = LC_RIGID_COMP
                                          | LC_RIGID_OWNER | LC_FLEX_COMP
                                          | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		           classes      = "GRcurve",
	                   obj          = &(TEMP[0].objid),
                           osnum        = &(TEMP[0].osnum),
                           md_env       = &MOD_ENV  )) goto step0;

     	    ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	

step2:      if(!ci$locate( prompt       = "Identify curve 2 ",
                           properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                           owner_action = LC_RIGID_COMP
                                          | LC_RIGID_OWNER | LC_FLEX_COMP
                                          | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		           classes      = "GRcurve",
			   acc_prompt   = "Accept data in area /Reject",
                           accept_point = &var.data_point,
	                   obj     = &(TEMP[1].objid),
                           osnum   = &(TEMP[1].osnum),
                           md_env       = &MOD_ENV  )) goto step1;

     	    ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1] );	

   	    ci$get_module_info(md_env = &MOD_ENV);

       	    MAC1 = NULL_OBJID;

      	    ci$send(msg     = message nci_macro.init( 
						     &suc,
						     0,
						     "crv_fillet",
						     3,
						     TEMP,
						     &var,
						     &MOD_ENV ),
	      	   targetid = MAC1,
		   targetos = MOD_ENV.md_id.osnum );

   	    if( suc == 0 ){
			write("placement of nci_macro \"crv_fillet\" failed\n");
			status("placement of nci_macro \"crv_fillet\" failed");
      			ci$send(msg      = message Root.delete(0),
	      			targetid = MAC1,
	      			targetos = MOD_ENV.md_id.osnum );
            }
       }
  }

}


/*==========================================================================*/
init(){

  	strcpy(loc_mes,"<Assoc> Place Fillet");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;
}

wakeup(){
	message(loc_mes);
}

/*==========================================================================*/

