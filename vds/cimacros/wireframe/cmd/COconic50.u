/* $Id: COconic50.u,v 1.1.1.1 2001/01/04 21:07:21 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COconic50.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COconic50.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:21  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"

struct GRid 		CVTEMP[5];
GRobj 			MAC1;
IGRint           	var;
int 			suc;
struct GRmd_env		MOD_ENV;
IGRchar			mes_f[80];

extern ASmake_source_from_env();
 
main()
{
  strcpy(mes_f,"<Assoc> Place Conic by 5 Points");
  while(1)
  {
   message(mes_f);
   
p1:     if(!ci$locate( prompt       = "Identify point 1",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(CVTEMP[0].objid ),
                       osnum        = &(CVTEMP[0].osnum),
		       md_env       = &MOD_ENV ))goto p1;

	ASmake_source_from_env( &CVTEMP[0],&MOD_ENV,&CVTEMP[0]);	

p2:     if(!ci$locate( prompt       = "Identify point 2",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(CVTEMP[1].objid),
                       osnum        = &(CVTEMP[1].osnum),
		       md_env       = &MOD_ENV ))goto p1;

	ASmake_source_from_env( &CVTEMP[1],&MOD_ENV,&CVTEMP[1]);	

p3:     if(!ci$locate( prompt       = "Identify point 3",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(CVTEMP[2].objid),
                       osnum        = &(CVTEMP[2].osnum),
		       md_env       = &MOD_ENV ))goto p2;

	ASmake_source_from_env( &CVTEMP[2],&MOD_ENV,&CVTEMP[2]);	

p4:     if(!ci$locate( prompt       = "Identify point 4",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(CVTEMP[3].objid),
                       osnum        = &(CVTEMP[3].osnum),
		       md_env       = &MOD_ENV))goto p3;

	ASmake_source_from_env( &CVTEMP[3],&MOD_ENV,&CVTEMP[3]);	

p5:     if(!ci$locate( prompt       = "Identify point 5",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(CVTEMP[4].objid),
                       osnum        = &(CVTEMP[4].osnum ),
		       md_env       = &MOD_ENV))goto p4;

	ASmake_source_from_env( &CVTEMP[4],&MOD_ENV,&CVTEMP[4]);	


   var=50;

   ci$get_module_info(md_env = &MOD_ENV);

   MAC1 = NULL_OBJID;

   ci$send(msg      = message nci_macro.init( 	&suc,
						0,
						"conic",
						5,
						CVTEMP,
						&var,
						&MOD_ENV   ),
	   targetid = MAC1,
      	   targetos = MOD_ENV.md_id.osnum );

   if( suc == 0 ){
		write("placement of nci_macro \"conic\" failed\n");
		status("placement of nci_macro \"conic\" failed");
      		ci$send(msg = message Root.delete(0),
	      		targetid = MAC1,
	      		targetos = MOD_ENV.md_id.osnum );
   }

 }
}

wakeup(){
	message(mes_f);
}

