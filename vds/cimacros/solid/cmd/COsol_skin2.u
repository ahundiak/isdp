/* $Id: COsol_skin2.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/solid/cmd / COsol_skin2.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsol_skin2.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
	 92/07/27	Get rid of internal data (not used)
 */
   
#include "ciminimum.h"
#include "cimacros.h"

struct GRmd_env		MOD_ENV;
struct GRid 		TEMP[33];
GRobj 			MAC1;
IGRshort           	num_cross;
IGRint 			suc;
IGRchar            	txt[20], mes_f[80];


extern ASmake_source_from_env();

main()
{
  strcpy(mes_f,"<Assoc> Place skinning solid with 2 traces");

  if ( !ci$locate ( prompt       = "Identify first trace",
           	    owner_action = LC_RIGID_COMP  |
                                   LC_RIGID_OWNER | LC_FLEX_COMP |
                                   LC_FLEX_OWNER  | LC_REF_OBJECTS,
		    obj     	 = &(TEMP[0].objid),
		    osnum   	 = &(TEMP[0].osnum),
		    md_env       = &MOD_ENV   ) ) exit;
     	  ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	

  if ( !ci$locate ( prompt  = "Identify second trace",
           	    owner_action = LC_RIGID_COMP  |
                                   LC_RIGID_OWNER | LC_FLEX_COMP |
                                   LC_FLEX_OWNER  | LC_REF_OBJECTS,
		    obj     = &(TEMP[1].objid),
		    osnum   = &(TEMP[1].osnum),
		    md_env       = &MOD_ENV   ) ) exit;

     	  ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1] );	

  num_cross = 2;

  while(1)
  {
     strcpy(txt,"Identify cross ");
     strcat(txt,itoa(num_cross-1));

     if(!ci$locate( prompt  = txt,
  	            owner_action = LC_RIGID_COMP  |
          	                   LC_RIGID_OWNER | LC_FLEX_COMP |
                	           LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            obj     = &(TEMP[num_cross].objid),
                    osnum   = &(TEMP[num_cross].osnum),
		    md_env       = &MOD_ENV ) ) break;

     	  ASmake_source_from_env( &TEMP[num_cross],&MOD_ENV,&TEMP[num_cross] );	

     num_cross = num_cross + 1;
  }

  if( num_cross < 3 ) exit;

  MAC1		= NULL_OBJID;
  ci$get_module_info(md_env = &MOD_ENV);

  ci$send( msg	    = message nci_macro.init( 	&suc,
					     	0,
						"sol_skin2",
						num_cross,
						TEMP,
						NULL,
						&MOD_ENV ),
	   targetid = MAC1,
           targetos = MOD_ENV.md_id.osnum );
  if( suc == 0 ){
	write("placement of nci_macro \"sol_skin2\" failed\n");
	status("placement of nci_macro \"sol_skin2\" failed");
	ci$send(msg = message Root.delete(0),
	      		targetid = MAC1,
	      		targetos = MOD_ENV.md_id.osnum );
  }
}
wakeup(){
	message(mes_f);
}
