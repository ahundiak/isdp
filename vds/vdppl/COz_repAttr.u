/* $Id $ */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:        vds/vdppl/COz_repAttr.u
 *
 * Description:
 *	PPL to report the attributes of a macro.
 *
 * Dependencies:
 *
 * Revision History:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      11/29/00        Rama Rao        File Creation
 * -------------------------------------------------------------------*/

#include "VDppl.h"
#include "coparamac.h"

extern VDatReportAttrInfo(), ASstart_var_fence(), ASend_fence();

main( argc, argv )
  int     argc;
  char  **argv;
{
IGRlong			msg, sts;
IGRint			locNum, is_malloc, response;
IGRchar			inp_filename[40], out_filename[40];
struct GRmd_env		loc_env;
struct GRobj_env 	objOE, *locOEs;	

  message( "Print Attribute Data" );

  locNum = 0;
  locOEs = NULL;
  is_malloc = 0;

  if( argc == 1 )
  {
     ci$get( string = inp_filename,
             prompt = "Enter Input File Name" );
  }
  else strcpy( inp_filename, argv[1] );

  if( argc == 1 )
  {
     ci$get( string = out_filename,
             prompt = "Enter Output File Name" );
  }
  else if( argc == 3 )
  {
     strcpy( out_filename, argv[2] );
  }
  else out_filename[0] = '\0';

  ci$get_module_info( md_env = &loc_env);

  if( argc == 1 )
  {
    response = 0;
    sts = ci$locate(prompt  = "Locate Macros/Move on to process all",
                    classes = "ACcpx",
                    owner_action = LC_RIGID_OWNER |
                                   LC_RIGID_COMP  |
                                   LC_FLEX_COMP   |
                                   LC_FLEX_OWNER  |
                                   LC_REF_OBJECTS,
                    stackable    = 1,
                    response     = &response,
                    md_env       = &objOE.mod_env,
                    obj          = &objOE.obj_id.objid,
                    osnum        = &objOE.obj_id.osnum);
     if (!(sts & 1)) response = 0;

     switch( response ) 
     {
         case EX_OBJID:   // Object Set

         	/* Grab Located Objects */
      		as$start_fence(  set       = &objOE.obj_id,
				 set_env   = &objOE.mod_env,
				 nb_obj    = &locNum,
				 p_obj_env = &locOEs );

      		ASend_fence();
		is_malloc = 1;
      		break;

    	 case EX_DATA:    // Single Object
		locNum = 1;
		locOEs = &objOE;
      		break;

     } // Switch
  }

  VDatReportAttrInfo( 	&msg, locNum, locOEs, loc_env, 
			inp_filename, out_filename );

  if( is_malloc )
	if( locOEs ) 	free( locOEs );

  return 1;
}
