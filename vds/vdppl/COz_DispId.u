/* $Id: COz_DispId.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/vdppl / COz_DispId.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COz_DispId.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*****

	hilite the given GRid

******/

#include "ciminimum.h"
#include "cimacros.h"
#include "cilocate.h"
#include "DItypedef.h"
#include "DIdef.h"
#include "DIprims.h"
#include "dp.h"
#include "gr.h"
#include "AS_status.h"
#include "OMprimitives.h"

char			string[400];
char			class_name[100];
char			object_name[100];
char  			expname[80];
char			exp_str[100];
char			*c;
struct GRid		macro, obj;
enum GRdpmode   	DisplayMode; 
struct GRmd_env 	md_env ;
struct GRid 		display_info;
long			msg, stat;

extern int printf();
extern int strcat(),strcpy();

main() {
  while(1){
  
    ci$get(prompt="objid?", value = obj.objid );
    ci$get(prompt="osnum?", value = obj.osnum );

    ci$get_module_info( md_env  = &md_env);

    om$get_classname( objid     = obj.objid,
                      osnum     = obj.osnum,
                      classname = class_name  );
    sprintf(string,"%d %d %s", obj.objid, obj.osnum, class_name);

    /* add object name, if it exists */
    stat = di$untranslate(objname = object_name,
                          objid = obj.objid,
                          osnum = obj.osnum);
    if (stat == DIR_S_SUCCESS)
    {
        strcat(string," ");
        strcat(string,object_name);
    }

    if ( strcmp(class_name,"nci_macro") == 0 ||
	 strcmp(class_name, "ci_macro") == 0 )
    {
      stat =
      ci$send(msg = message ACcpx.find_macro(&macro),
              targetid = obj.objid,
              targetos = obj.osnum);
      if( stat&1 ){
        stat =
        ci$send(msg = message ACcpx_defn.ACgive_name( &c ),
              targetid = macro.objid,
              targetos = macro.osnum);
        if( stat&1 ) { strcat( string, " "); strcat( string, c ); }
      }
    }

    /* Add output of expression string, if it exists */
    if (strcmp(class_name,"expression")==0
     || strcmp(class_name,"Gexp")==0
     || strcmp(class_name,"text_exp")==0)
    {
        strcpy(exp_str,"");
        stat = ci$send(msg =  message expression.DIgive_output(exp_str),
                targetid = obj.objid,
                targetos = obj.osnum);
        if (stat == 1) strcat(string,exp_str);
    }

    printf(" OBJECT: %s \n", string );

    DisplayMode = GRhd;
           
    stat=
    ci$send( msg = message GRgraphics.GRdisplay( &msg,
                     &md_env.md_env.matrix_type,
                     md_env.md_env.matrix,
                     &DisplayMode, &md_env.md_id),
                     targetid = obj.objid,
                     targetos = obj.osnum);

    as$status(sts=stat);
  }
  return(1);
}
