/* $Id: COz_ShowId.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/vdppl / COz_ShowId.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COz_ShowId.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

#include "cieveryone.h"
#include "cimacros.h"

extern int printf();
extern	int	pr_mat();

main()
{
  struct GRid 		obj;
  struct GRmd_env 	mod_env;
  char			loc_mes[40];
  char			c_name[80];
  long			sts;
  
  extern int G_active_para_type; // share parameter

  // initialisation

  strcpy(loc_mes,"Show id");
  message(loc_mes);
  while(1)
  {
    // locate of the first line
    if(!ci$locate(prompt       = "Locate object",
                  owner_action = LC_RIGID_COMP
                               | LC_RIGID_OWNER | LC_FLEX_COMP
                               | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		  md_env       = &mod_env,
                  obj          = &obj.objid,
		  osnum	       = &obj.osnum)) break;

   sts = om$get_classname(	objid = obj.objid,
   				osnum = obj.osnum,
                                classname = c_name );
   
   printf("Identified object: %d, %d [%s]\n", obj.objid, obj.osnum, c_name);
   pr_mat("Matrix", 4, 4, mod_env.md_env.matrix );
   printf("md_id: %d,%d\n", mod_env.md_id.objid, mod_env.md_id.osnum );
   
 }
}
