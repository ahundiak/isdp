/* $Id: COz_tagcons.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $ */ 

/***************************************************************************
 * I/VDS
 *
 * File:        vdppl/COz_tagcons.u
 *
 * Description: Lists all OMTagCon objects in active space
 *
 * Dependencies:
 *
 * Revision History:
 * $Log: COz_tagcons.u,v $
 * Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 * Initial import to CVS
 *
# Revision 1.1  1998/11/05  16:53:12  pinnacle
# tags
#
 *
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 11/05/98  ah      Created
 ***************************************************************************/

#include "VDppl.h"
#include "VDobj.h"
#include "VDchn.h"
#include "VDvla.h"

extern calloc();
extern EX_findmod();
extern VDtagDumpTagCon();

extern VDclassid OPP_OMTagCon_class_id;

IGRint cnt;

/* -----------------------------------------
 * Print a OMTagCon object
 */
IGRstar VDtagPrintTagCon(tagConID)
TGRid *tagConID;
{
  IGRstat retFlag;
  IGRstat sts;

  retFlag = 0;

  // Verify
  sts = vdobj$IsAncestryValid(
    objID = tagConID, 
    superClassID = OPP_OMTagCon_class_id);
  if (!(sts & 1)) goto wrapup;

  // Use it's debug routine
  ci$send(msg = message OMTagCon.debug(),
          targetid = tagConID->objid,
          targetos = tagConID->osnum);

  cnt = cnt + 1;
  retFlag = 1;

wrapup:
  return retFlag;
}

/* -----------------------------------------
 * Locate and print tag con objects
 */
main()
{
  TGRid fileID;
  TGRid grpID;

  TVDvlaID *vlaID;

  IGRint  i;
  IGRchar buf[128];

  // Say Hi
  printf("========== OMTagCon Scanning =============\n");
  ex$get_cur_mod(osnum = &fileID.osnum);

  // Init
  vlaID = calloc(1,sizeof(TVDvlaID));
  if (vlaID == 0) {
    UI_status("Unable to allocate memory for vla");
    goto wrapup;
  }

  // Get the OMFiledOS object
  om$osnum_to_oso_objid(osnum=fileID.osnum,p_objid = &fileID.objid);
  if (fileID.objid == NULL_OBJID) {
    UI_status("Cannot get file object id!");
    goto wrapup;
  }

  // Unordered channel, need a vla
  vdchn$Get(il_objID  = &fileID,
            ic_NAME   = "OMObjSpace.to_GrpDscs",
            or_vlaID  = vlaID);

  // Cycle through
  cnt = 0;
  for(i = 0; VDvlaID_GetAt(vlaID,&grpID,i); i = i + 1) {
    VDtagPrintTagCon(&grpID);
  }

  sprintf(buf,"Dumped %d OMTagCon objects",cnt);
  UI_status(buf);

wrapup:

  if (vlaID) free(vlaID);

  return 1;
}


