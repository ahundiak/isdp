/* $Id: VDgetFileNm.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $  */

/***************************************************************************
 * I/VDS
 *
 * File:	vdppl/VDgetFileNm.u
 *
 * Description: Given an object id, returns the appropriate filename
 *		containing a list of attributes to be listed on form,
 *		VDdflValues.fm. This PPL file will be loaded when the
 *		"Read from file" button is selected when running the
 *		command, "Modify User Attributes".
 *		Called (loaded) from vds/vdattrib/cmd/VDCmdUsrAtti.I.
 *	
 * Dependencies: attribute files:
 *		 	expected under $PRODUCT/config/attrs path
 *			names To Be Determined
 *
 * Note: sample path search,  -S option searched first:
 *	 
 *	/net/isdp23/usr6/impd251/vds/config/attrs/equipAttrs
 *	/opt/ingr/vds/config/attrs/equipAttrs
 *	/opt/ingr/emsppp/config/attrs/equipAttrs
 *	/opt/ingr/ems/emsui02/config/attrs/equipAttrs
 *	/opt/ingr/model/config/attrs/equipAttrs
 *	/opt/ingr/grnucsrc/config/attrs/equipAttrs
 *	/opt/ingr/pdu/config/attrs/equipAttrs
 *	/opt/ingr/exnucdp/config/attrs/equipAttrs
 *	/opt/ingr/bspmathdp/config/attrs/equipAttrs
 *
 *	"config/attrs" added if "attrs" directory not found in initial path
 *
 * Revision History:
 *	$Log: VDgetFileNm.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1999/04/27  13:40:40  pinnacle
# CR_179900526: New file
#
 *
 * History:
 * MM/DD/YY  AUTHOR    DESCRIPTION
 * 04/15/99  ejm       CR_179900526	Creation of this file.
 *				   	Filenames not yet determined.
 ***************************************************************************/

#include "VDppl.h"
#include "VDobj.h"

/* Globals */
struct GRobj_env  OBJ_OE;
IGRchar		  OBJ_FILENAME[128];
IGRchar		  OBJ_PATH[128];

extern VDclassid    OPP_VDequipment_class_id;
extern int	    EX_getpath();
extern int	    strfind();



/* -------------------------------------------------------
 * Get the file name associated with the object class
 * If object has no attribute filename associated with it,
 *   OBJ_FILENAME will be empty.
 */
int GetAdditionalAttributesFileName()
{
  FILE		*fp;
  IGRchar 	path[128],
		path_file[257],
		stsstr[51],
		*sptr;
  IGRint	i, sts;


  OBJ_PATH[0]='\0';
  OBJ_FILENAME[0]='\0';
  stsstr[0]='\0';
  sptr=NULL;

  // vdobj$Print(objID = &OBJ_OE.obj_id);

  // If object not under any valid ancestries, OBJ_FILENAME remains NULL,
  // VDCmdUsrAtti.I will set placeholder name of "./usrAttr"

  if( vdobj$IsAncestryValid(objOE	   = &OBJ_OE,
                            superClassID   = OPP_VDequipment_class_id,
                            )){
     strcpy(OBJ_FILENAME,"equipAttrs");
  }
  /* >>> add other valid classes here <<< */
  else
    goto wrapup;

  // Macro, ex$get_path, searches -S path first,
  // then runs through product list (puts a slash at end of path)

  for( i=0; ;i=i+1 )
  {
    *path=0;
    sts = ex$get_path ( index=i,
                         path=path,
                          len=sizeof(path) );
    // no more paths
    if( sts == 0 ){
      sprintf( stsstr, 
		"File, %s, not found under any ./config/attrs/", OBJ_FILENAME); 
      status( stsstr );
      break;
    }

    // strstr returns NULL if "attrs" not a substring of path
    sptr = NULL;
    if( (sptr = strstr( path, "attrs" )) == NULL )
	strcat( path, "config/attrs/" );

    path_file[0]='\0';
    sprintf( path_file, "%s%s", path, OBJ_FILENAME );
    // printf("\tpath_file: %s\n", path_file);

    fp = fopen( path_file, "r" );
    if( fp == (FILE *) NULL ) continue;  // Try another path
    else{
      // Remove last slash - added in later code
      sptr  = strrchr( path, '/');
      *sptr = 0;
      strcpy( OBJ_PATH, path );
      fclose( fp );
      break;
    }
  }

wrapup:
  return 1;
}
