/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	*/
/*			"Test if Curve is on Surface"				*/
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	*/

#include <stdio.h>
#include <string.h>
#include "bserr.h"
#include "bsparameters.h"
#include "OMprimitives.h"
#include "cieveryone.h"
#include "cimacros.h" 	/*  includes cilocate.h */
#include "ci_mac_def.h"
#include "cievent.h"
#include "exdef.h"
#include "exmacros.h"
#include "go.h"
#include "v_geommacros.h"
#include "DItypedef.h"
#include "DIdef.h"
#include "DIprims.h"
#include "grdpbdef.h"
#include "grdpbmacros.h"

#include "vd_ve.h"
#include "v_edgedef.h"
#include "v_edgemacros.h"
#include "vdparmacros.h"
#include "vdsetmacros.h"
#include "v_dbgmacros.h"

extern  int     init_cnst_list();
extern  int	VDcurve_on_surface();
extern  int	GRdpb_get();
extern  	BSxtractpar();

main ()
{
  long			msg, rc, nret, nput;
  int			result;
  
  double		bastol, tol;
  struct GRobj_env	crv, srf ;

  init_cnst_list();
  get_symb();
/*
  BSxtractpar( &rc, BSTOLBASIS, &bastol );
  BSxtractpar( &rc, BSTOLCHRDHT, &tol );
*/
  nput = sizeof (double);
  
  gr$get_chord_height_tolerance(msg    = &msg,
				sizbuf = &nput,
				buffer = &tol,
				nret   = &nret);
  
  gr$get_basis_tolerance(	msg    = &msg,
				sizbuf = &nput,
				buffer = &bastol,
				nret   = &nret);

  printf ( "Basis_Tol = %lg, Chord_Height_Tol = %lg\n", bastol, tol );

  status(""); 
  while(1)
  {
    if( ! ci$locate(	prompt       = "Select the curve to test",
                    	owner_action =  LC_RIGID_COMP | LC_RIGID_OWNER |
					LC_FLEX_COMP  | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                      	classes      = "GRcurve",
                      	md_env       = &crv.mod_env,
                      	obj          = &crv.obj_id.objid,
                      	osnum        = &crv.obj_id.osnum ) ) continue;

    if( ! ci$locate(	prompt       = "Select the surface to test",
                    	owner_action =  LC_RIGID_COMP | LC_RIGID_OWNER |
					LC_FLEX_COMP  | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                      	classes      = "EMSsubbs",
                      	md_env       = &srf.mod_env,
                      	obj          = &srf.obj_id.objid,
                      	osnum        = &srf.obj_id.osnum ) ) continue ;

    result = VDcurve_on_surface( &msg, &crv, &srf, tol, &rc );

    if ( result )
    {
      printf ( "Curve is on surface\n" );
    }
    else
    {
      printf ( "Curve is NOT on surface\n" );
    }
  } 
}


init(){}

wakeup ()
{
  message("Test if Curve is on Surface");
  status (""); 
}

sleep()
{
  message("");
  status (""); 
}

delete ()
{
  message("");
  status (""); 
}
