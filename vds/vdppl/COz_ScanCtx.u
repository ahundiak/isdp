/* $Id: COz_ScanCtx.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $ */ 

/***************************************************************************
 * I/VDS
 *
 * File:        vdppl/COz_ScanCtx.u
 *
 * Description: List any GRcontext with non-identity internal matrix
 *
 * Dependencies:
 *
 * Revision History:
 * $Log: COz_ScanCtx.u,v $
 * Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 * Initial import to CVS
 *
# Revision 1.2  2000/02/18  19:11:18  pinnacle
# Replaced: vdppl/COz_ScanCtx.u for:  by impd252 for vds
#
# Revision 1.1  2000/01/17  14:36:54  pinnacle
# GRcontext
#
 *
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 01/17/00  ah      Created
 * 02/18/00  adz	 Updated for OS = 2;
 ***************************************************************************/
#include "VDppl.h"
#include "VDobj.h"

extern GRclassid OPP_GRcontext_class_id;
extern MAidmx();

resetContext(conID)
  TGRid *conID;
{
  IGRstat msg;
  
  TGRmd_env env;

  MAidmx(&msg,env.md_env.matrix);
  env.md_env.matrix_type = MAIDMX;

  ci$send(msg = message GRcontext.
	  GRupdatectx(&msg,
		      &env.md_env.matrix_type,
		       env.md_env.matrix),
	  targetid = conID->objid,
	  targetos = conID->osnum);

  return 1;
}


printContext(conID)
  TGRid *conID;
{
  IGRstat sts,msg;
  
  TGRmd_env env;
  
  IGRint i,j;
  
  IGRshort flag;
  TGRid    conxID;
  
 // printf(" OBJ: %d,%d\n", conID->objid, conID->osnum );

  sts = vdobj$IsAncestryValid(objID = conID,
			      superClassID = OPP_GRcontext_class_id);
  if (!(sts & 1)) goto wrapup;
  
  
  sts = ci$send(msg = message GRcontext.GRgetmodule_env(&msg,&env),
		targetid = conID->objid,
		targetos = conID->osnum);
  if (!(sts & msg & 1)) {
    printf("Problem getting enviroment.\n");
    goto wrapup;
  }
  sts = ci$send(msg = message GRcontext.
		GRgetinstance(&msg,
			      &env.md_env.matrix_type,
 			       env.md_env.matrix,
			      &env.md_id.osnum,
			      &flag,
			      &conxID),
		targetid = conID->objid,
		targetos = conID->osnum);

  if (env.md_env.matrix_type == MAIDMX) goto wrapup;
  
  printf("------------------------------------\n");
  vdobj$Print(objID =  conID);
  vdobj$Print(objID = &conxID);
  
  printf("Matrix osnum %d, type %d\n",env.md_id.osnum,env.md_env.matrix_type);
  for(i = 0; i < 4; i = i + 1) {
    for(j = 0; j < 4; j = j + 1) {
      printf("%22.19f ",env.md_env.matrix[(i*4)+j]);
    }
    printf("\n");
  }

wrapup:  
  return 1;
}

main()
{
  IGRstat sts,msg;
  
  TGRid  conID;
  IGRint index, max;

  printf("+-+-+-+ Starting Run ====================\n");
  
  // Cycle through
  max = OM_GA_OSDs[(OMuword)2]->CurSpaceMapSize;
  conID.osnum = (OMuword)2 ;

  printf(" MAX[%d]: %d\n", conID.osnum, max );

  for(index = 0; index < max; index = index + 1) {
	
	conID.objid = index ;
    printContext(&conID);
  }
 
wrapup:
  return 1;
}

	  
