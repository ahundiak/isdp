.SUFFIXES: .I .c .o

SRC = .

CC = acc -knr 

COPT =  \
	-g

IPATH =  \
	-I/usr/ip32/grnucsrc/include \
	-I/usr/ip32/bspmath/include \
	-I/usr/ip32/exnuc/include \
	-I/usr/ip32/exnuc/fi/include

opp = /usr/ip32/exnuc/bin/opp

omcpp = /usr/ip32/exnuc/bin/omcpp

OPPFLAGS =  \
	-I/usr/ip32/grnucsrc/include \
	-I/usr/ip32/bspmath/include \
	-I/usr/ip32/exnuc/include \
	-I/usr/ip32/exnuc/fi/include \
	-I/usr/include \
	-I/usr/ip32/exnuc/spec \
	-I/usr/ip32/grnucsrc/spec \
	-I. \
	-l

MOPT = -Dclipper=1 -D__clipper__=1


# Object files 

imp_objects = \
	TS3dptclipto.o

objects = \
	$(imp_objects) 


# src group targets

/usr/tmp/t.o: $(objects)
	@echo 
	ld -r -o /usr/tmp/t.o $(objects)
	@echo; rm -f opp.list cc.list
	@ls -ls /usr/tmp/t.o; echo

TS3dptclipto.o : \
	$(SRC)/TS3dptclipto.I \
	/usr/ip32/exnuc/include/exdef.h \
	/usr/ip32/exnuc/include/exmacros.h \
	/usr/ip32/grnucsrc/include/grdpbdef.h \
	/usr/ip32/grnucsrc/include/grdpbmacros.h \
	/usr/ip32/exnuc/include/msdef.h \
	/usr/ip32/grnucsrc/spec/GRnotify.S \
	/usr/ip32/exnuc/include/OMimport.h \
	/usr/ip32/exnuc/include/OMtypes.h \
	/usr/ip32/exnuc/include/OMminimum.h \
	/usr/ip32/exnuc/include/OMprimitives.h \
	/usr/ip32/exnuc/include/OMdeport.h \
	/usr/ip32/exnuc/spec/Root.S \
	/usr/ip32/exnuc/include/igrtypedef.h \
	/usr/ip32/exnuc/include/igetypedef.h \
	/usr/ip32/grnucsrc/include/igr.h \
	/usr/ip32/grnucsrc/include/igrdp.h \
	/usr/ip32/grnucsrc/include/gr.h \
	/usr/ip32/grnucsrc/include/dp.h \
	/usr/ip32/grnucsrc/include/godef.h \
	/usr/ip32/grnucsrc/include/go.h \
	/usr/ip32/exnuc/include/OMindex.h \
	/usr/ip32/exnuc/include/OMerrordef.h \
	/usr/ip32/exnuc/include/OMlimits.h \
	/usr/ip32/grnucsrc/include/igrdef.h \
	/usr/ip32/grnucsrc/include/maerr.h \
	/usr/ip32/grnucsrc/include/madef.h \
	/usr/ip32/exnuc/include/ex.h \
	/usr/ip32/grnucsrc/include/griodef.h \
	/usr/ip32/grnucsrc/include/grio.h \
	/usr/ip32/grnucsrc/include/lcdef.h \
	/usr/ip32/grnucsrc/include/lc.h \
	/usr/ip32/grnucsrc/include/dpstruct.h \
	/usr/ip32/exnuc/include/fidef.h \
	/usr/ip32/exnuc/include/fi.h \
	/usr/ip32/grnucsrc/include/report.h \
	/usr/ip32/grnucsrc/spec/GRgraphics.S \
	/usr/ip32/grnucsrc/spec/GRconnector.S \
	/usr/ip32/grnucsrc/include/EMmsg_obj.h \
	/usr/ip32/grnucsrc/include/emsdattyp.h \
	/usr/ip32/grnucsrc/include/emsinter.h \
	/usr/ip32/grnucsrc/spec/GRvg.S \
	/usr/ip32/grnucsrc/spec/GRcurve.S \
	/usr/ip32/grnucsrc/spec/GRbspline.S \
	/usr/ip32/grnucsrc/spec/GRlinear.S \
	/usr/ip32/grnucsrc/spec/GRpoint.S \
	/usr/ip32/grnucsrc/spec/GR3dpoint.S \
	/usr/ip32/grnucsrc/include/stdio.h \
	/usr/include/unistd.h \
	/usr/include/float.h \
	/usr/include/limits.h \
	/usr/include/math.h

$(imp_objects) :
	@if [ "$(WHY)" ]; then echo "\t$(SRC)/$(@F:.o=.I): $?"; fi
	@echo "\t$(SRC)/$(@:.o=.I) -> $(@:.o=.c)"
	@if [ -n "$(@D)" ]; then cd $(@D); fi; \
	 $(opp) $(OPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2) $(@:.o=.I)
	@if [ -n "$(@D)" ]; then cd $(@D); fi; \
	 if [ "$(FAST)" ]; \
	 then \
	     echo "\t$(@:.o=.c) -> cc.list\c"; \
	     echo "$(@:.o=.c)" >>cc.list; \
	 else \
	     echo "\t$(@:.o=.c) -> $(@)"; \
	     $(CC) $(COPT) $(IPATH) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $(@F:.o=.c); \
	     if [ "$(COPT)" != "-g" ]; \
	     then \
	         echo "\tremoving $(@:.o=.c)"; \
	         rm $(@F:.o=.c); \
	     else \
	         echo "\tleaving $(@:.o=.c)"; \
	     fi; \
	 fi
	@echo 

.I.o:
	@if [ "$(WHY)" ]; then echo "\t$<: $?"; fi
	@echo "\t$< -> $*.c"
	@$(opp) $(OPPOPT) $(OPPFLAGS) $(DOPT) $(DOPT1) $(DOPT2) $<
	@if [ "$(FAST)" ]; \
	 then \
	     echo "\t$*.c -> cc.list\c"; \
	     echo "$*.c" >>cc.list; \
	 else \
	     echo "\t$*.c -> $*.o"; \
	     $(CC) $(COPT) $(IPATH) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $*.c; \
	     if [ "$(COPT)" != "-g" ]; \
	     then \
	         echo "\tremoving $*.c"; \
	         rm $*.c; \
	     else \
	         echo "\tleaving $*.c"; \
	     fi; \
	 fi
	@echo 

.c.o:
	@if [ "$(WHY)" ]; then echo "\t$<: $?"; fi
	@echo "\t$< -> $*.o"
	@$(CC) $(COPT) $(IPATH) $(MOPT) $(DOPT) $(DOPT1) $(DOPT2) -c $*.c
	@echo 

