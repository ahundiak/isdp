# This is the input for the testcase of expressions
# Each line starts with a command identifier
# The following commands are tested
#
#     Command Id             Command Name
#
#        1                   Expression Create
#        2                   Modify Expr by Name
#        3                   Modify Expr by objid
#        4                   Delete Expr
#        5                   Create an expr by value
#        6                   Check old style expressions 
#        6                   Enter Initial Value
#        7                   Execute Batch
#
# The testcases below are for test cases 1, 2 and 4 for the 
# spring design problem
# 
1 C = 2*R/d 
1 Delta = 4*N*P*C^4/(G*R) 
1 E=2.5E7 
1 G=9.615E6 
1 K = P/Delta 
1 Kw = (4*C-1)/(4*C-4) + 0.615/C 
1 Lf = Delta + (N+2)*d 
1 N=12
1 Nu = sqrt((K*386.)/(W/3 + P)) 
1 P = 100 
1 PI = 3.1416 
1 R = 1 
1 Rho = 0.285 
1 Tau = (16 * SF * P * R * Kw)/(PI * d^3) 
1 Tau = 8.7e4 
1 U = 2*P^2*N*C^4/(G*R) 
1 V = PI/4*(2*R+d)^2*Lf 
1 W = Rho*PI^2*d^2*R*N /2 
1 d = 0.25 
#end of test case 1
#start of test case 2
2  P P = 60
3  d SF = 2
7 C 10.
7 Kw 3.
#end of testcase 2
#start of testcase 4
2 P Lf = 6
7 Delta 1.9
7 P 173
4 U
8
1 U = 2*P^2*N*C^4/(G*R)
# Test for expression creation by value
5 red  60
5 blue 90
# Test for old style expression (check against regression)
6 green red + blue / 2
# Test for inversion of unary and binary functions
1 cos(2* magenta) = 0
1 log(yellow^2) = 100
1 pow(cream, 3/2) = 8
1 pow(4, orange) = 8
1 atan2(3, brown) = 4
1 atan2(apple, 2.59) = 4
8
# end of test cases



