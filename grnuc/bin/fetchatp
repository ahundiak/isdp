# fetchatp - Allows certification to list/fetch atps generated by development
#
# Paul Wiersema       3/5/91
#
PROD=""
TYPE=""
ATP=""
LIST="n"
while [ $# != 0 ]
do
   case $1 in

      -p) PROD=$2
          shift 2;;

      -t) TYPE=$2
          shift 2;;

      -l) LIST=y
          shift;;

      -?) echo "Fetchatp [-p product] [-t type] ( [-l] | [atpname] )"
          echo "\nNote: files are placed in the present working directory.\n"
          exit;;

       *) ATP=$1
          shift;;

   esac
done

case $PROD in 
 GRNUC) ;;
 MODEL) ;;
 *) while (:) 
     do
      echo "Enter product <GRNUC, MODEL> [GRNUC]\b\b\b\b\b\b\c"
       read PROD; : ${PROD:="GRNUC"}
       if [ "$PROD" = "GRNUC" ] || [ "$PROD" = "MODEL" ]
        then
         break
       fi
     done
    ;;
esac

case $TYPE in
 macros) ;;
 rap) ;;
 *) while (:) 
     do
      echo "Enter product <macros, rap> [macros]\b\b\b\b\b\b\b\c"
       read TYPE; : ${TYPE:="macros"}
       if [ "$TYPE" = "macros" ] || [ "$TYPE" = "rap" ]
        then
         break
       fi
     done
    ;;
esac

. `dirname \`whence fetchatp\``/ATPinit -p $PROD

if [ "$ATP" = "" ] && [ "$LIST" = "n" ]
then
  echo "\nFetch a "$PROD"/"$TYPE" ATP\n\n"
  SClist -C atp/${TYPE}
  echo "\n\n   Enter ATP to fetch : NONE\b\b\b\b\c"
  read ATP; : ${ATP:="NONE"}
  if [ "$ATP" != "NONE" ]
  then
     findit=`SClist atp/${TYPE}/${ATP}`
     if [ "$findit" = "" ]
     then
        echo ${ATP}' not found.'
     else
        for file in $findit
        do
           SCfetch atp/${TYPE}/${ATP}/${file}
        done
     fi
  fi
else 
  if [ "$ATP" != "" ]
  then
     findit=`SClist atp/${TYPE}/${ATP}`
     if [ "$findit" = "" ]
     then
        echo ${ATP}' not found.'
     else
        SCfetch atp/${TYPE}/${ATP}
     fi
  else 
     SClist atp/${TYPE}
  fi
fi
