                         GRNUC BUILD DOCUMENT  version 1.0                 
                                 07/15/93

This document resides in the $GRNUC/integ directory as gr240integ.doc.


This document briefly describes the steps to successfully build grnuc 2.4.0 
for the clipper, sun and sgi workstations.

If you need more information than is contained in this document, send mail
to tgmckee@c10138.  

Important Variables:
 
    BS     - bspmathdp location
    EXNUC  - exnucdp location
    GRNUC  - grnuc source location (contains all source files)
    GRTARG - grnuc target location (contains all generated files)

Before starting a build cycle ask Tim or John to install new versions of system
software and/or the versions of Bspmath/Exnuc/Libxc that Grnuc built on. 

To build grnuc on the clipper 

1. Login to grdev as grnuc24

2. cd $GRNUC

3. run deliver20 and answer y to the following questions
     Get fixes?                                      [n] ---> y
      when in elm save all appropriate fixes to =fetch, delete fixes forms 
      saved
     Compile?                                        [n] ---> y
          Remove config/commands?                    [y] ---> y
          Remove ppl .e files?                       [y] ---> y
          Remove intermediate libraries              [y] ---> y
          Remake the makefiles?                      [n] ---> y
     answer n to all other questions



4. after the last question is answered, you will be put in the emacs editor 
   containing a list of files.  Verify lines listed contain filenames and ^X^C

5. you may be prompted if you want to delete a list of files, if the list
   contains valid files (no *, .. etc.) answer y

6. the fetching of files will begin, in large letters COMPILING will be 
   displayed on the screen, when this occurs it is safe to start the sun and
   sgi builds (see below)

7. After compilation deliver20 will exit. You may start the process over
   beginning with step 3 to pull build fixes only.  Under the compilation 
   prompt answer yes to compile and compile using dependencies.
   if there are no build fixes proceed to step 8

8. run deliver20 and answer yes to 
     Link the image?                                 [y] ---> y

9. If the image links correctly, test until you are satisfied the build is in
   order.  To test run $GRTARG/bin/Grnuc -cf /tmp/testfile.

10. Send mail to packagegrp@c10138 to when the build is ready to package.


     
To build a grnuc on the sun

1. After the COMPILING message is displayed from the clipper build, login to
   nextsun as grnuc24

2. cd $GRNUC

3. run deliver20 and answer yes to the following questions
     Compile?                                        [n] ---> y
          Remove config/commands?                    [y] ---> y
          Remove ppl .e files?                       [y] ---> y
          Remove intermediate libraries              [y] ---> y
          Total remake of dictionary files           [y] ---> y
          Remake the makefiles?                      [n] ---> y
   answer n to all other questions

4. After compilation deliver20 will exit. You may start the process over
   beginning with step 3 to pull build fixes only.  Under the compilation 
   prompt answer yes to compile and compile using dependencies.
   if there are no build fixes proceed to step 8

5. run deliver20 and answer yes to 
     Link the image?                                 [y] ---> y

6. if the image links correctly, test until you are satisfied the build is in
   order

7. Send mail to packagegrp@c10138 to when the build is ready to package.


To build grnuc on the sgi

1. After the COMPILING message is displayed from the clipper build, login to
   sgi3255 as grnuc24

2. cd $GRNUC

3. run deliver20 and answer y to the following questions
     Compile?                                        [n] ---> y
          Remove config/commands?                    [y] ---> y
          Remove ppl .e files?                       [y] ---> y
          Remove intermediate libraries              [y] ---> y
          Total remake of dictionary files           [y] ---> y
          Remake the makefiles?                      [n] ---> y
   answer n to all other questions

4. After compilation deliver20 will exit. You may start the process over
   beginning with step 3 to pull build fixes only.  Under the compilation 
   prompt answer yes to compile and compile using dependencies.
   if there are no build fixes proceed to step 8

5. run deliver20 and answer yes to 
     Link the image?                                 [y] ---> y

6. if the image links correctly, test until you are satisfied the build is in
   order

7. Send mail to packagegrp@c10138 to when the build is ready to package.


To build grnuc on the c400

1. After the COMPILING message is displayed from the clipper build, login to
   c400dev as grnuc24

2. cd $GRNUC

3. run deliver20 and answer y to the following questions
     Compile?                                        [n] ---> y
          Remove config/commands?                    [y] ---> y
          Remove ppl .e files?                       [y] ---> y
          Remove intermediate libraries              [y] ---> y
          Total remake of dictionary files           [y] ---> y
          Remake the makefiles?                      [n] ---> y
   answer n to all other questions

4. After compilation deliver20 will exit. You may start the process over
   beginning with step 3 to pull build fixes only.  Under the compilation 
   prompt answer yes to compile and compile using dependencies.
   if there are no build fixes proceed to step 8

5. run deliver20 and answer yes to 
     Link the image?                                 [y] ---> y

6. if the image links correctly, test until you are satisfied the build is in
   order

7. Send mail to packagegrp@c10138 to when the build is ready to package.



TOTAL RECOMPILE

1. To start a total recompile of all source, export ENABLE_RECOMPILE=on.

2. Follow the directions for the normal build listed above.  The exception
   is the prompts displayed for step 3, in a total recompile you will only
   be prompted to recompile all source (answer y to this prompt).

3. After deliver20 exits, export ENABLE_RECOMPILE=off.



IN CASE OF PROBLEMS/ERRORS

In case of problems with the integration scripts, contact Tim McKee or 
John Lewis.  If the problem prevents the build from finishing, immediate 
action will be taken.  If the problem does not prohibit the build from 
finishing, you may be asked to file a TR against GRNUCDP BUILDS.

In case of compilation errors, link errors, or runtime errors, contact
the appropriate development personnel.  Mail should be sent to c130c!johntgrp
to notify developers of errors.

Each build the contents of config/dload/init will be sent to you as an error.
Determine if the files listed are still needed, otherwise someone will need
to SCdelete the patch and send a fixes form.  OMprodinit.o and GRNUCver.o for
Clipper and SGI and GRNUCver.so for Sun are always valid.

In case of hardware/environment problems, contact Tim McKee or John Lewis.


EXPLANATION OF PROMPTS IN deliver20

Integrator Mail address  ->        
  The mail address entered will be used for sending error notification mail.
  Currently the only a bang path mail address works.  Sgi does not currently
  send error notification mail.

Notify node [grdev] -> grdev
  The node entered will receive a netmsg when compilation has finished

Get Fixes                                       [y] ---> 
  Select and pull fixes from RCS
  
Compile?                                        [n] ---> 
  Compile the source directories listed in integ/make.all

     Remove config/commands?                    [y] ---> 
       Remove the files in config/commands and touch all the .sl files   

     Remove ppl .e files?                       [y] ---> 
       Remove all .e files 

     Remove intermediate libraries              [y] ---> 
       Remove .o files in lib

     Remake the makefiles?                      [n] ---> 
       Remove and remake all makefiles  

Link the image?                                 [y] ---> 
   Link the Grnuc image

Verify package definition file ?                [y] ---> 
   Run through the package definition file and list files not found

Update product.def & README                     [y] ---> 
   Update the version number in product.def/README, add fixes info. to README
   To be used only by Tim or John

Package the GRNUC platform ? <y/n/m/f>          [y] ---> 
   Package the build to the newprod location 
   To be used only by Tim or John

