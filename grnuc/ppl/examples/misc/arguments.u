/************************************************************
 * FILE:  arguments.u
 *
 * PURPOSE:  This PPL program demonstrates how to use command
 *    line arguments.
 *
 * DESCRIPTION: This program lets the user enter the
 *    radius and color for a circle by typing the following
 *    at the command line:
 *
 *       ci=arguments radius color
 *
 *    The program then prompts for a center point and draws
 *    the circle.  The program also writes all the data it
 *    received from the command line.
 ************************************************************/

#include "ciminimum.h"
#include "cimacros.h"


main( argc, argv, info )

int argc;     /* argc - number of arguments on command line */
char **argv;  /* argv - array of pointers to strings which
                        contain the command line arguments  */
char **info;  /* info - array of three pointers to strings
                        which contain the following info:
                   info[0] = the command that executed this
                           PPL program
                   info[1] = the command_key of info[0]
                   info[2] = the name of the design file */
{
   if ( argc != 3 )
   {
     /* argc should be one more than the number of arguments
        the program needs.  This is because the name of the
        program itself is passed as an argument. */

      status( "This program needs a radius and a color" );
   }
   else
   {
   /*********************************************************
     Change the color.  argv[2] holds a string for the color.
    *********************************************************/
      /* "co" command */
      begincmd_key( "GRSCl" );

         ci$put( string = argv[2] );

      endcmd();

   /*********************************************************
     Let the user draw circles.  argv[1] holds a string for
     the radius.
    *********************************************************/
      /* "place circle by radius key in and center point" */
      begincmd_key( "GRPCrRKyCn" );

         ci$put( string = argv[1] );

         /* now the command will take over until the user
            terminates by double tapping the left button */         

      endcmd();

   /*********************************************************
     Write all information that the program received.
    *********************************************************/
      write( "Output of arguments PPL program:\n",

             "argc:\n",
             "    Number of arguments is ", argc, "\n\n",

             "argv:\n",
             "    PPL program is called ", argv[0], "\n",
             "    Radius is ",             argv[1], "\n",
             "    Color is ",              argv[2], "\n\n",

             "info:\n",
             "    command that executed is ", info[0], "\n",
             "    key of above command is ",  info[1], "\n",
             "    design file is called ",    info[2], "\n"  );
   }
}

