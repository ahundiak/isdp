/************************************************************************/
/*									*/
/*	Program: surfblendint.u	Macro:md$place_surface_blend_interior()	*/
/*									*/
/*	Defined in: ci_surface.h					*/
/*									*/
/*	Comments: 							*/
/*									*/
/************************************************************************/

#include "ciminimum.h"
#include "cimacros.h"
#include "ci_surface.h"				/* defined */

main()
{

        struct GRid     GRIDS[4];
        double          point[3];
        char            ele_name[255];
        message("blend surface interior");

        ci$locate( obj   = &GRIDS[0].objid,
                   osnum = &GRIDS[0].osnum,
                   classes = "EMSsubbs",
		   owner_action = LC_RIGID_COMP | LC_ASSOCIATIVE,
                   prompt= "Identify surface 1");

        ci$locate( obj   = &GRIDS[1].objid,
                   osnum = &GRIDS[1].osnum,
                   classes = "GRcurve",
                   prompt= "Identify curve 1");

        ci$locate( obj   = &GRIDS[2].objid,
                   osnum = &GRIDS[2].osnum,
                   classes = "EMSsubbs",
		   owner_action = LC_RIGID_COMP | LC_ASSOCIATIVE,
//		   owner_action = LC_NO_RIGID_COMP | LC_RIGID_OWNER,
                   prompt= "Identify surface 2");

        ci$locate( obj   = &GRIDS[3].objid,
                   osnum = &GRIDS[3].osnum,
                   classes = "GRcurve",
                   prompt= "Identify curve 2");

        ci$get( point = point, prompt="identify blend point");
        strcpy(ele_name, "blend");
        md$place_surface_blend_interior
                        (GRids_in = GRIDS,
                        point1 = point, 
                        option1 = 3,
                        option2 = 3,
                        GRid_out = &TEMP_GRID, 
                        name = ele_name, 
                        disp = DRAW);
}
