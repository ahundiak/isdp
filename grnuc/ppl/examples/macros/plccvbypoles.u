/************************************************************************/
/*                                                                      */
/*      Program: plccvbypoles.u	   Macro:gr$place_curve_by_poles	*/
/*                                                                      */
/*      Defined in: grwireframe.h					*/
/*                                                                      */
/*      Comments:___________________________________________________    */
/*                				                        */
/*									*/
/************************************************************************/
#include "stdio.h"
#include "ciminimum.h"
#include "cimacros.h"
#include "grwireframe.h"
#include "DIdef.h"

extern GRcreate_curve_by_option();

main()
 {	
	struct GRid	object,linear_object;
	struct GRmd_env env;
	IGRdouble	points[100], p2[3];
	IGRint		i,msg1,num_points,option;
 	IGRchar 	objects_name[DI_PATH_MAX];

	message("place curve by poles");

    while(1) 
    {
      ci$get(prompt = "enter option: object (1), points (0)",
	       value = option);
        strcpy(objects_name,"pole curve");

      if (!option)
      {
	msg1 = 1;
	num_points=0;

	for(i=0; msg1==1; i=i+3)
	{
 	    ci$get(point=p2 ,prompt="Enter point",rc=msg1);
	    if (msg1)
	    {
	      	points[i+0] = p2[0];
	      	points[i+1] = p2[1];
	      	points[i+2] = p2[2];
		num_points = num_points + 1;
	     }
	}


	gr$place_curve_by_poles( 
		    msg = &msg1,
		    num_points  = num_points,
		    points   = points,
		    order = 4,
		    periodic = 0,
		    new_id = &object,
		    name     = objects_name,
		    display_flag     = 1);
      }
      else
      {
	ci$locate( obj = &linear_object.objid,
	   	osnum = &linear_object.osnum,
		md_env = &env,
		prompt= "Identify object");

	gr$place_curve_by_poles( 
		    msg = &msg1,
		    object_id = &linear_object,
		    object_env = &env,
		    order = 4,
		    periodic = 0,
		    new_id = &object,
		    name     = objects_name,
		    display_flag     = 1);
     }
   }
}
