A character mapping file is made up of a CharMapHeader structure followed
by a number of CharMapSpec structures.  All structures are packed when
written to the file (i.e., no padding between structure elements).


typedef struct
{
    Int32	magic;		/* magic number				*/
    CharMapId	charMapId;	/* character mapping id			*/
    Int32	numChar;	/* total # of chars in char mapping	*/
    Char16	missingChar;	/* missing character id			*/
    Int32	flags;		/* #defined in FS.h			*/
    char	pad[14];	/* pad out to 32 packed bytes total	*/
}   CharMapHeader;

typedef struct
{
    CharId	charId;
    Char16	bsNbr;
}   CharMapSpec;



Routines to read the parts of the file:

/************************************************************************/
/*									*/
/*	SYNOPSIS							*/
/*	  static int _FSReadCharMapHeader (file, header)		*/
/*									*/
/*	  FILE		*file;		- char. map file descriptor	*/
/*	  CharMapHeader	*header;	- char. map header		*/
/*									*/
/*	DESCRIPTION							*/
/*	  This routine reads the header of a character mapping file.	*/
/*									*/
/*	RETURN VALUE							*/
/*	  Non-zero iff one of the following occurs:			*/
/*		- An error occurred while reading the file		*/
/*									*/
/************************************************************************/

static int _FSReadCharMapHeader (file, header)
FILE		*file;
CharMapHeader	*header;
{
    int numItems;

    numItems = fread (&(header->magic), sizeof (Int32), 1, file);
    numItems += fread (&(header->charMapId), sizeof (CharMapId), 1, file);
    numItems += fread (&(header->numChar), sizeof (Int32), 1, file);
    numItems += fread (&(header->missingChar), sizeof (Char16), 1, file);
    numItems += fread (&(header->flags), sizeof (Int32), 1, file);
    numItems += fread (&(header->pad[0]), sizeof (char), 14, file);

    if (numItems == 19)
	return (FS_NO_ERROR);
    else
	return (FS_ERROR);
}

/************************************************************************/
/*									*/
/*	SYNOPSIS							*/
/*	  static int _FSReadCharMapChars (file, charMap, numChar)	*/
/*									*/
/*	  FILE		*file;		- char. map file descriptor	*/
/*	  CharMapSpec	*charMap;	- char. map			*/
/*	  int		numChar;	- number of characters in map	*/
/*									*/
/*	DESCRIPTION							*/
/*	  This routine reads the character pairs of a character		*/
/*	  mapping file.							*/
/*									*/
/*	RETURN VALUE							*/
/*	  Non-zero iff one of the following occurs:			*/
/*		- An error occurred while reading the file		*/
/*									*/
/************************************************************************/

static int _FSReadCharMapChars (file, charMap, numChar)
FILE		*file;
CharMapSpec	*charMap;
int		numChar;
{
    int numItems;

    /** Just read it in, since CharMapSpec structs are already packed **/
    numItems = fread (charMap, sizeof (CharMapSpec), numChar, file);

    if (numItems == numChar)
	return (FS_NO_ERROR);
    else
	return (FS_ERROR);
}
