#!/bin/ksh
#
#	NAME:		newprod.funcs
#	AUTHOR:		Surjit Sahoo
#	PURPOSE:	collection of subroutines used for packaging RIS Servers
#
wsprod()
{
	case $TARGET in
		c100|c400)
			TARGET=CLIX
			TARGET1=c100 TARGET2=c400
			;;
		*)
			TARGET1=$TARGET
			TARGET2="REMOVE THIS LINE"
			;;
	esac

	# this is where all template files are located
	TEMPLATE=$RISDEVDIR/riscom/newprod/rissrv

	# read in product-specific environment variables
	if [ ! -f $TEMPLATE/$PRODNAME.parms ]
	then
		print "\n======> ERROR: Missing $TEMPLATE/$PRODNAME.parms\n"
		exit 1
	fi
	. $TEMPLATE/$PRODNAME.parms

	# add shared library for informix 7.1
	if [ "$TARGET" = Soli ] && [ "$PRODNAME" = risinfds -o "$PRODNAME" = risinfns ] 
	then
	   	NEW_FILES="$NEW_FILES iasfs07a.so"
		if [ "$PRODNAME" = risinfns ]
		then
			NEW_FILES="$NEW_FILES msg/*.* etc/sqlhosts"
			NEW_DIRS="$NEW_DIRS msg etc"
		fi
	fi

	# add the configuration files are from different location for  oracle 7.3.2 
	# -kmreddy

	if [ "$TARGET" = "Soli" ] && [ "$PRODNAME" = risorads -o "$PRODNAME" = risorans ] 
	then
		NEW_DIRS="$NEWDIRS config/Solaris"
		NEW_FILES="bin/risinstl.ksh \
		config/english/messages/net.msg bin/cre_sch.ksh \
		config/langs \
		config/Solaris/env0.ora config/Solaris/env1.ora \
		config/Solaris/env2.ora config/Solaris/env3.ora"
		if [ "$PRODNAME" = risorads ]
		then
			NEW_FILES="$NEW_FILES bin/risorads.ksh"
	    else
			NEW_FILES="$NEW_FILES bin/risorans.ksh"
		fi
	fi


	WSPROD=$RISDEVDIR/riscom/newprod/ws_s/$TARGET/$PRODNAME

	# read in package-specific environment variables
	if [ ! -f $WSPROD/parameters ]
	then
		print "\n======> ERROR: Missing $WSPROD/parameters\n"
		exit 1
	fi
	. $WSPROD/parameters

	print
	print "\t------------------------------------------------"
	print "\t${IDNAME} ${IDNUMBER}-${RIS_MAJ}${RIS_MIN}A \c"
	print "${PRODDATE} ${PRODVERSION}"
	print "\t------------------------------------------------"
	print
}

link()
{
	#-----------------------------------------------------
	# Create temporary links for executables and scripts
	#-----------------------------------------------------

	cd $RISDEVDIR/rissrv

	#
	# Generate the $PRODNAME.ksh file
	#
	$RISDEVDIR/riscom/build/crescrip.ksh $PRODNAME U

	print "\tLinking files from other sub-systems"

	$LN $RISDEVDIR/riscom/build/risinstl.ksh bin/risinstl.ksh
	$LN $RISDEVDIR/riscom/config/langs config/langs

	$MKDIR -p config/english/messages
	$LN $RISDEVDIR/riscom/config/english/messages/net.msg \
		config/english/messages/net.msg
	[ -f doc/external/$PRODNAME.doc ] &&
	pr -e4 -t < doc/external/$PRODNAME.doc > doc/$PRODNAME.doc

	if [ $TARGET = "CLIX" ]
	then
		$LN $RISDEVDIR/riscom/bin/c100/ristcpsr bin/c100/ristcpsr
		$LN $RISDEVDIR/riscom/bin/c400/ristcpsr bin/c400/ristcpsr

		# to compute the size of the executables, we need to pick
		# up one set of executables from c100 and c400 and link them
		# to the "bin" directory. we pick up "c400".

		$LN bin/c400/ristcpsr bin/ristcpsr
		$LN bin/c400/$PRODNAME bin/$PRODNAME

	#
	# other UNIX platforms
	#
	else
		$LN $RISDEVDIR/riscom/bin/$TARGET/ristcpsr bin/ristcpsr
		$LN bin/$TARGET/$PRODNAME bin/$PRODNAME
		[ "$PRODNAME" = rissybds ] && $LN config/ctlib.loc ctlib.loc
		[ "$PRODNAME" = risinfds -o "$PRODNAME" = risinfns ] && cp /usr/lib/iasfs07a.so iasfs07a.so
	fi

	if [ "$TARGET" = Soli -a "$PRODNAME" = risinfns ] 
	then
		$MKDIR msg etc
		cp $INFORMIXDIR/msg/*.* msg
		cp $INFORMIXDIR/etc/sqlhosts etc 
	fi

}

verify()
{
	cd $RISDEVDIR/rissrv

	print "\n\tVerifying existence of all components"
	for file in $NEW_FILES $BIN_FILES
	do
		if [ ! -f $file ]
		then
			print "\n======> ERROR: File $file missing"
			unlink # cleaning up
			cd $WSPROD
			$RM -f README *.prod *.$DOT_EXTENSION *.sh *.def
			print "\n\tPackaging $PRODNAME aborted."
			exit 1
		fi
	done
}

generate()
{
	cd $RISDEVDIR/rissrv

	DELSIZE=`$LS -s $NEW_FILES $BIN_FILES | awk '{ s+=$1 } END { print s }'`

	sed -e s!IDNAME!$IDNAME! \
		-e s!IDTITLE!"$IDTITLE"! \
		-e s!IDDESC15!"$IDDESC15"! \
		-e s!IDDESC14!"$IDDESC14"! \
		-e s!IDDESC13!"$IDDESC13"! \
		-e s!IDDESC12!"$IDDESC12"! \
		-e s!IDDESC11!"$IDDESC11"! \
		-e s!IDDESC10!"$IDDESC10"! \
		-e s!IDDESC9!"$IDDESC9"! \
		-e s!IDDESC8!"$IDDESC8"! \
		-e s!IDDESC7!"$IDDESC7"! \
		-e s!IDDESC6!"$IDDESC6"! \
		-e s!IDDESC5!"$IDDESC5"! \
		-e s!IDDESC4!"$IDDESC4"! \
		-e s!IDDESC3!"$IDDESC3"! \
		-e s!IDDESC2!"$IDDESC2"! \
		-e s!IDDESC1!"$IDDESC1"! \
		-e s!PRODVERSION!"$PRODVERSION"! \
		-e s!PRODDATE!"$PRODDATE"! \
		-e /"REMOVE THIS LINE"/d \
		$TEMPLATE/README.tplt > $WSPROD/README

    sed -e s!IDNUMBER!$IDNUMBER-${RIS_MAJ}${RIS_MIN}A! \
        -e s!IDASSOC!$IDASSOC! \
        -e s!IDNAME!$IDNAME! \
        -e s!IDTITLE!"$IDTITLE"! \
        -e s!DELBASE!$DELBASE! \
        -e s!DELSIZE!$DELSIZE! \
        -e s!DELATTR!$DELATTR! \
        -e s!DELARCH!$DELARCH! \
        -e s!PRODNAME!$PRODNAME! \
        -e s!PRODVERSION!"$PRODVERSION"! \
        -e s!PRODDATE!"$PRODDATE"! \
        -e s!DOT_EXTENSION!"$DOT_EXTENSION"! \
		-e s!TARGET1!"$TARGET1"! \
		-e s!TARGET2!"$TARGET2"! \
		-e /"REMOVE THIS LINE"/d \
		$TEMPLATE/product.tplt > $WSPROD/product.def

	sed -e s!PRODNAME!$PRODNAME! \
		-e s!IDNAME!$IDNAME! \
		-e s!NEW_DIRS!"$NEW_DIRS"! \
		-e s!NEW_FILES!"$NEW_FILES"! \
		-e s!BIN_FILES!"$BIN_FILES"! \
		-e s!OLD_PRODUCT_NAME!"$OLD_PRODUCT_NAME"! \
		-e s!DOT_EXTENSION!"$DOT_EXTENSION"! \
		-e s!INSTALL1!"$INSTALL1"! \
		-e s!INSTALL2!"$INSTALL2"! \
		-e s!INSTALL3!"$INSTALL3"! \
		-e s!INSTALL4!"$INSTALL4"! \
		-e s!INSTALL5!"$INSTALL5"! \
		-e s!INSTALL6!"$INSTALL6"! \
		-e s!INSTALL7!"$INSTALL7"! \
		-e s!INSTALL8!"$INSTALL8"! \
		-e /"REMOVE THIS LINE"/d \
		-e s!ris_platform!$RIS_PLATFORM! \
		-e s!cur_arch!$TARGET! \
		$TEMPLATE/install.tplt > $WSPROD/install.$DOT_EXTENSION

	sed -e s!PRODNAME!$PRODNAME! \
		-e s!PRODDATE!"$PRODDATE"! \
		-e s!IDTITLE!"$IDTITLE"! \
		-e s!IDNAME!$IDNAME! \
		-e s!BIN_FILES!"$BIN_FILES"! \
		-e s!DOT_EXTENSION!"$DOT_EXTENSION"! \
		-e s!OLD_PRODUCT_NAME!"$OLD_PRODUCT_NAME"! \
		-e s!ris_platform!$RIS_PLATFORM! \
		$TEMPLATE/postinst.tplt > $WSPROD/postinstall.sh

	sed -e s!BIN_FILES!"$BIN_FILES"! \
		-e s!NEW_DIRS!"$NEW_DIRS"! \
		-e s!NEW_FILES!"$NEW_FILES"! \
		-e s!OLD_FILES!"$OLD_FILES"! \
        -e s!PRODNAME!$PRODNAME! \
        -e s!PRODVERSION!$PRODVERSION! \
		-e s!OLD_DIRS!"$OLD_DIRS"! \
		-e s!OLD_PRODUCT_NAME!"$OLD_PRODUCT_NAME"! \
		-e s!IDNAME!$IDNAME! \
    	-e s!IDNUMBER!$IDNUMBER-${RIS_MAJ}${RIS_MIN}A! \
		-e s!DOT_EXTENSION!"$DOT_EXTENSION"! \
		-e s!ris_platform!$RIS_PLATFORM! \
		$TEMPLATE/remove.tplt > $WSPROD/remove.$DOT_EXTENSION
}

package()
{
	cd $RISDEVDIR/rissrv

	print "\n\tMaking cpio file postinst.prod"
	(cd $WSPROD; $LS postinstall.sh | cpio -oc 2> $STDERR) |
	compress > $WSPROD/postinst.prod 2> $STDERR

	print "\n\tMaking cpio file $PRODNAME.prod"
	$LS $NEW_FILES | cpio -oc 2> $STDERR |
	compress > $WSPROD/$PRODNAME.prod 2> $STDERR

	#
	# CLIX stuff
	#
	if [ $TARGET = "CLIX" ] 
	then
		print "\n\tMaking cpio file c400bin.prod"
		$LS $BIN_FILES | cpio -oc 2> $STDERR |
		compress > $WSPROD/c400bin.prod 2> $STDERR

		# remove c400 and link the c100 executables
		$RM -f $BIN_FILES
		$LN bin/c100/ristcpsr bin/ristcpsr
		$LN bin/c100/$PRODNAME bin/$PRODNAME

		print "\n\tMaking cpio file c100bin.prod"
		$LS $BIN_FILES | cpio -oc 2> $STDERR |
		compress > $WSPROD/c100bin.prod 2> $STDERR

	#
	# other UNIX platforms
	#
	else
		print "\n\tMaking cpio file ${TARGET}bin.prod"
		$LS $BIN_FILES | cpio -oc 2> $STDERR | 
		compress > $WSPROD/${TARGET}bin.prod 2> $STDERR
	fi
}

unlink()
{
	#-------------------------------------------------
	# Removing links and files from other sub-systems
	#-------------------------------------------------

	cd $RISDEVDIR/rissrv

	print "\n\tRemoving files from other sub-systems"

	[ $TARGET = "CLIX" ] && ($RM -f bin/c[14]00/ristcpsr)

	$RM -f $BIN_FILES bin/risinstl.ksh bin/$PRODNAME.ksh
	# execute in subshell
	(cd doc; [ -f $PRODNAME.doc ] && $RM -f $PRODNAME.doc)
	(cd config; $RM -rf langs english/messages)
	[ "$PRODNAME" != rissybds ] || $RM -f ctlib.loc
    if [ "$TARGET" = Soli ]
	then
		[ "$PRODNAME" != risinfns -a "$PRODNAME" != risinfds ] || $RM -f iasfs07a.so
		[ "$PRODNAME" != risinfns ] || $RM -rf msg 
		[ "$PRODNAME" != risinfns ] || $RM -rf etc 
    fi
}
