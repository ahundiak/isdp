/* Do not alter this SPC information: $Revision: 1.1.53.1 $ */
/*
**	NAME:							uldtime.rc
**	AUTHORS:						Hitesh Patel
**	CREATION DATE:					8th July 1991
**	ABSTRACT:
**		To calculate and log execution time of each session of load.
**	
**	REVISION HISTORY:
*/
 
/*
**	DEFINES
*/

/*
**	INCLUDES
*/
#include <sys/types.h>
#include <time.h>

#ifdef MM
#include "unlod.h"
#endif

exec sql include "unlod.h";

/*
**	VARIABLES
*/

/*
**	FUNCTIONS
*/

/*
**      FUNCTION PROTOTYPES
*/
#define uldtime_rc
#include "sys.prt"
#include "comdebug.prt"
#include "comjmp.prt"
#include "comumsg.prt"
#include "uldermsg.prt"
#include "uldtime.prt"

static void RISuld_calc_time(
	time_t i1,
	time_t i2,
	char	*date_and_time)
{
	int diff;
	int hour;
	int min;
	int sec;

	ULD_DBG(("RISuld_calc_time: i1 %d i2 %d date_and_time %s\n", i1,i2,date_and_time));
	diff = i2 - i1;

	hour = diff/3600;
	diff -= hour * 3600;

	min = diff/60;
	diff -= min * 60;

	sec = diff;

	RISuld_print_msg(MSG(RISUTL_E_RUN_STARTED), date_and_time);
	RISuld_print_msg(MSG(RISUTL_E_ELAPSED_TIME), hour, min, sec);

	ULD_DBG(("1. RISuld_calc_time: end.\n"));

}

static void RISuld_process_timer(
	int action)
{
	static  int		timer_running = 0;
	static  time_t	start_time = 0;
	static  time_t	stop_time = 0;
	static  char 	*date_and_time;

	switch(action)
	{
		case START:
			if (timer_running)
			{
				return;
			}
			start_time = time((long *)0);
			date_and_time = ctime(&start_time);
			timer_running = 1;
			break;

		case STOP:
			if (!timer_running)
			{
				return;
			}
			stop_time = time((long *)0);
			RISuld_calc_time(start_time, stop_time, date_and_time);
			timer_running = 0;
			break;

		default:
			RISuld_unload_err_handler(RISUTL_E_ILLEGAL_PARAMETER_TIMER);
			TERMINATE_RISUNLOAD
			break;
	}
}


extern void RISuld_start_timer()
{
	RISuld_process_timer(START);
}

extern void RISuld_stop_timer()
{
	RISuld_process_timer(STOP);
}
