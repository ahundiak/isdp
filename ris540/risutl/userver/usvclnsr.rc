/* Do not alter this SPC information: $Revision: 1.1.53.1 $ */
/*
**	NAME:							usvclnsr.rc
**	AUTHORS:						Terrence D. McIntyre
**	CREATION DATE:					2/94
**	ABSTRACT:

	The routine RISusv_clean_server() should preform whatever functionality
	the server group want to be performed by the risclnsrv utility.

	You can assume that a connection to the schema has already established.
	You will be passed the schema name and the database type.
	
	If an error occurs, RISusv_clean_server should return 1, leaving the
	error information in SQLCODE, risca and dbca.
	RISusv_clean_server should return 0 on success.

**	
**	REVISION HISTORY:
*/
 
/*
**	INCLUDES
*/
#include "userver.h"

/*
**	DEFINES
*/

/*
**	TYPES
*/

/*
**	FUNCTION PROTOTYPES
*/
#define usvclnsr_rc
#include "comdebug.prt"
#include "usvclnsr.prt"
#include "usvgetdb.prt"
#include "ris.prt"
#include "sys.prt"

/*
**	VARIABLES
*/

/*
**	FUNCTIONS
*/

/******************************************************************************/

static int delete_from_table(
	char *database,
	char *tname)
{
	int return_sts = 0;
exec sql begin declare section;
	char sqlstring[80];
exec sql end declare section;

	USV_DBG(("delete_from_table(database:<%s> tname:<%s>)\n", STRING(database),
		STRING(tname)));

	sprintf(sqlstring,"exec %s delete from %s", database, tname);
	exec sql execute immediate :sqlstring;
	if (SQLCODE != RIS_SUCCESS)
	{
		return_sts = 1;
	}

	USV_DBG(("delete_from_table:returning:%d\n", return_sts));
	return return_sts;
}

/*****************************************************************************/

extern int RISusv_clean_server(
	char *schname,
	char dtype)
{
	int return_sts = 0;
	char *database = NULL;

	USV_DBG(("RISusv_clean_server(schname:<%s> dtype:%c)\n", STRING(schname)));

	database = RISusv_get_database_string(dtype);
	if (delete_from_table(database, "ri05_t13"))
	{
		return_sts = 1;
	}
	else if (delete_from_table(database, "ri05_t09"))
	{
		return_sts = 1;
	}
	else if (delete_from_table(database, "ri05_t07"))
	{
		return_sts = 1;
	}

	USV_DBG(("RISusv_clean_server:returning:%d\n", return_sts));
	return 0;
}

/*****************************************************************************/
