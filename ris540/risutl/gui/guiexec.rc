/* Do not alter this SPC information: $Revision: 1.1.54.1 $ */
/*
**	NAME:							guiexec.rc
**	AUTHORS:						Terrence McIntyre
**	CREATION DATE:					5/93
**	ABSTRACT:
**	
**	REVISION HISTORY:
*/
 
/*
**	INCLUDES
*/
#include "gui.h"
#include "rislimit.h"
#include "ris_err.h"

/*
**	DEFINES
*/

/*
**	TYPES
*/

/*
**	FUNCTION PROTOTYPES
*/
#define guiexec_rc
#include "guiexec.prt"
#include "guiosusr.prt"
#include "guipswd.prt"
#include "guiuspw.prt"
#include "ucosqlca.prt"
#include "comdebug.prt"
#include "ris.prt"
#include "sys.prt"

/*
**	VARIABLES
*/

/*
**	FUNCTIONS
*/

/******************************************************************************/

extern int RISgui_execute_command(
	char *command)
{
exec sql begin declare section;
	virtual char * command as command;
exec sql end declare section;

	GUI_DBG(("RISgui_execute_command()\ncommand:\n%s",command));

	CLEAR_ERROR;

	exec sql execute immediate :command;

	GUI_DBG(("RISgui_execute_command: returning %d\n", SQLCODE));
	return SQLCODE;
}

/******************************************************************************/

extern void RISgui_set_default_schema(
	char *schname, 
	unsigned char dtype)
{
	int sts;
	char passwd[RIS_MAX_ID_SIZE];
	char secure_username[RIS_MAX_ID_SIZE];
	char secure_password[RIS_MAX_ID_SIZE];
	char os_username[RIS_MAX_ID_SIZE];
	char os_password[RIS_MAX_ID_SIZE];
	char default_command[80];
	char declare_command[255];

	GUI_DBG(("RISgui_set_default_schema()\n"));

	passwd[0] = '\0';
	secure_username[0] = '\0';
	secure_password[0] = '\0';
        os_username[0] = '\0';
	os_password[0] = '\0';

	sprintf(default_command, "default schema %s", schname);
	RISgui_execute_command(default_command);
	
	if (SQLCODE == RIS_E_NEED_DECLARE_SCHEMA)
	{
          if ((dtype == 'X') ||
               ((dtype == 'I')))
          {
                sts = RISgui_get_username_password(secure_username,
                      secure_password);
                if (sts && secure_username[0])
                {
                        if (secure_password[0])
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s.%s",
                                schname, secure_username, secure_password);
                        }
                        else
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s",
                                        schname, secure_username);
			}
                }
          }
          else
          {
                sts = RISgui_get_os_username_password(secure_username,
                      secure_password, os_username, os_password);
                if (sts && secure_username[0])
                {
                        if (secure_password[0] && os_password[0])
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s.%s osuser %s.%s",
                                schname, secure_username, secure_password,
                                os_username, os_password);
                        }
                        else if ((secure_password[0]) && (os_password[0] == 0))
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s.%s osuser %s",
                                schname, secure_username,
                                secure_password, os_username);
                        }
                        else if ((secure_password[0] == 0) && os_password[0])
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s osuser %s.%s",
                                schname, secure_username,
                                os_username, os_password);
                        }
                        else
                        {
                                sprintf(declare_command,
                                "declare schema %s user %s osuser %s",
				schname, secure_username, os_username );
                        }

                }
          }
	  RISgui_execute_command(declare_command);
	  RISgui_execute_command(default_command);
        }


        if (SQLCODE == RIS_E_SCHPASS_NOT_SAME)
        {
          sts = RISgui_get_password(passwd);

          if ((dtype == 'X') ||
               ((dtype == 'I')))
          {
                if (sts && secure_username[0])
                {
                        if (secure_password[0])
                        {
                                sprintf(declare_command,
                                "declare schema %s.%s user %s.%s",
                                schname, passwd, secure_username, 
                                secure_password);
                        }
                       else
                        {
                                sprintf(declare_command,
                                "declare schema %s.%s user %s",
                                schname, passwd, secure_username);
                        }

                }
               else
                {
                     sprintf(declare_command,
                     "declare schema %s.%s", schname, passwd);
                }


          }
else
          {
                if (sts && secure_username[0])
                {
                        if (secure_password[0] && os_password[0])
                        {
                                sprintf(declare_command,
                                "declare schema %s.%s user %s.%s osuser %s.%s",
                                schname, passwd, secure_username,
                                secure_password, os_username, os_password);
                        }
                        else if ((secure_password[0]) && (os_password[0] == 0))
                        {
                                sprintf(declare_command,
                                "declare schema %s.%s user %s.%s osuser %s",
                                schname, passwd, secure_username, 
                                secure_password, os_username);
			}
                        else if ((secure_password[0] == 0) && (os_password[0]))
                        {
                                sprintf(declare_command,
                                "declare schema %s.%s user %s osuser %s.%s",
                                schname, passwd, secure_username,
                                os_username, os_password);
                        }
                	else
                	{
                  		 sprintf(declare_command,
                  		 "declare schema %s.%s user %s osuser %s",
                  		 schname, passwd, secure_username, os_username);
                 	}
		}
                else
                {
                   sprintf(declare_command,
                   "declare schema %s.%s", schname, passwd);
                 }
	  }
             RISgui_execute_command(declare_command);
             RISgui_execute_command(default_command);
	}

	if (SQLCODE != RIS_SUCCESS)
	{
		if (SQLCODE == RIS_E_BAD_LOGIN)
		{
			RISuco_push_risca_dbca();

			sprintf(declare_command, "undeclare schema %s", schname);
			RISgui_execute_command(declare_command);

			RISuco_pop_risca_dbca();
		}
	}

	GUI_DBG(("RISgui_set_default_schema_field:returning\n"));
}

/*****************************************************************************/
