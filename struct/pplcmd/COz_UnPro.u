/* $Id: COz_UnPro.u,v 1.1.1.1 2001/01/04 21:10:02 cvs Exp $  */

/***************************************************************************
 * I/STRUCT
 *
 * File:	pplcmd/COz_UnPro.u
 *
 * Description: Unprotects old struct seed files
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COz_UnPro.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:10:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/30  10:08:06  pinnacle
# STRUCT 2.5.1
#
# Revision 1.1  1998/03/06  19:57:16  pinnacle
# CR179800790
#
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 03/06/98  ah      CR179800790 - Creation
 *
 ***************************************************************************/

#include <stdio.h>
#include <string.h>
#include "cieveryone.h"
#include "cimacros.h"
#include "ci_easy.h"
#include "igrtypedef.h"
#include "igetypedef.h"
#include "exmacros.h"
#include "ex.h"
#include "gr.h"

#include "DItypedef.h"
#include "DIdef.h"
#include "DIglob.h"
#include "DIprims.h"
#include "GRprims.h"

extern EX_findmod();

extern OMuword OPP_DIrectory_class_id ;

#define NEW_GRP "usr"
#define OLD_PSW "IGE"

main()
{
  long sts,msg;
  char startDir[DI_PATH_MAX];
  char strDir  [DI_PATH_MAX];

  DIgrid  *entries ;  /* Entries' ids		*/
  char    **lines ;   /* Entries' names	*/
  int     i,count;    /* Loop-on-entries index*/
  OMuword classid ;   /* Of one entry		*/

  struct GRid strId;

  GRspacenum osnum;

  ex$get_cur_mod(osnum = &osnum);

  di$give_pathname(osnum = osnum, pathname= startDir ) ;

  sprintf(strDir,"%s:%s", startDir,"struct");

  di$translate(
    objname = strDir,
    p_osnum = &strId.osnum,
    p_objid = &strId.objid
  );

  GRDisableValidate();

  // Change struct directory
  sts = gr$change_group (
    osnum   = strId.osnum,
    objid   = strId.objid,
    new_gr_name = NEW_GRP,
    old_passwd  = OLD_PSW
  );
  if (!(sts & 1)) printf("Change Group Failed: %s\n",strDir);
  else            printf("Change Group Worked: %s\n",strDir);

  sts = di$find(
    start_dir = strDir,
    grids = &entries,
    ptr	  = &count,
    lines = &lines,
    options = 0 
  ) ;

  if( sts == DIR_W_NAME_NOT_FOUND ) {
    printf("No Struct Cache Directory\n");
    return 1;
  }

  for(i = (count - 1); i >= 0; i = i - 1) {
    om$get_classid(
      objid = entries[i].objid,
      osnum = entries[i].osnum,
      p_classid	= &classid 
    );

    sts = om$is_ancestry_valid(
      superclassid  = OPP_DIrectory_class_id,
      subclassid    = classid 
    );
    if (sts == OM_S_SUCCESS ) {

      // Change Group
      sts = gr$change_group (
        objid = entries[i].objid,
        osnum = entries[i].osnum,
        new_gr_name = NEW_GRP,
        old_passwd  = OLD_PSW
      );
       if (!(sts & 1)) printf("Change Group Failed: %s\n",lines[i]);
       else            printf("Change Group Worked: %s\n",lines[i]);
    }
  }

  GREnableValidate();

  if( count ) {
    if( lines ) di$free( lines = lines, count = count ) ;
    if( entries ) free( entries ) ; 
  }

  return 1;
}


