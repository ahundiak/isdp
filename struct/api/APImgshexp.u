/***************************************************************************
 * I/STRUCT
 *
 * File:	api/APImgshexp.u
 *
 * Description:
 * 
 * This ppl two shell expansion using the API vs$merge_shell_expansion().
 *
 * Dependencies:
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *			i-paris		creation date
 *
 ***************************************************************************/

#include "OMminimum.h"
#include "cieveryone.h"
#include "cievent.h"
#include "cilocate.h"
#include "cisend.h"
#include "vsAPImacros.h"

extern void printf() ;

/*----------------------------------------------------------------------------*/
wakeup() { message( "API: Merge Shell Expansion" ) ; }
/*----------------------------------------------------------------------------*/
main() {
	long		 sts,
			 msg ;
	struct GRid	 frXpansId,
			 toXpansId,
			 mgXpansId ;
	struct GRmd_env  frXpansEnv,
			 toXpansEnv ;

	while( TRUE ) {
	ci$locate(
		prompt		= "Identify FROM shell expansion",
		classes 	= "VSshellExp",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &frXpansId.objid,
		osnum		= &frXpansId.osnum,
		md_env		= &frXpansEnv ) ;

	ci$locate(
		prompt		= "Identify TO shell expansion",
		classes 	= "VSshellExp",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &toXpansId.objid,
		osnum		= &toXpansId.osnum,
		md_env		= &toXpansEnv ) ;

	sts = vs$merge_shell_expansion(	msg		= &msg,
					frXpansId	= &frXpansId,
					toXpansId	= &toXpansId,
					mgXpansId	= &mgXpansId ) ;

	if( !( sts & 1 & msg ) ) 
		printf( "Error to create merge shell expansion\n" ) ;
	else 
		printf( "Constructed merged shell expansion : [%d,%d]\n", 
							mgXpansId.osnum,
						        mgXpansId.objid ) ;
	}
}
/*----------------------------------------------------------------------------*/
