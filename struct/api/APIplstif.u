/***************************************************************************
 * I/STRUCT
 *
 * File:	api/APIplstif.u
 *
 * Description:
 * 
 * This ppl places a stiffener using the two APIs :
 *		vs$place_stiffener_axis() and
 *		vs$place_stiffener().
 *
 * Dependencies:
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *			i-paris		creation date
 *
 ***************************************************************************/

#include "OMminimum.h"
#include "cieveryone.h"
#include "cievent.h"
#include "cilocate.h"
#include "cisend.h"
#include "vsAPImacros.h"

extern void printf() ;

extern OMuword	OPP_GRcurve_class_id,
		OPP_EMSplane_class_id ;

/*----------------------------------------------------------------------------*/
wakeup() { message( "API: Place Stiffener" ) ; }
/*----------------------------------------------------------------------------*/
main() {
	long		 sts,
			 msg ;
	int		 response,
			 have_limit ;
	struct GRid	 inputId[4],
		         stiffener_axisId,
			 stiffenerId ;
	struct GRmd_env  inputEnv[4] ;
	OM_S_CLASSLIST	 eligibleClasses ;
	OMuword		 cutterClasses[2] ;

	while( TRUE ) {
	LOCATE:
	ci$locate(
		prompt		= "Identify plate support",
		classes 	= "VSplate",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &inputId[0].objid,
		osnum		= &inputId[0].osnum,
		md_env		= &inputEnv[0] ) ;

	cutterClasses[0] = OPP_GRcurve_class_id ;
	cutterClasses[1] = OPP_EMSplane_class_id ;

	eligibleClasses.w_count   = 2 ;
	eligibleClasses.w_flags   = OM_CLST_subclass ;
	eligibleClasses.p_classes = cutterClasses ;

	ci$locate(
		prompt		= "Identify surface/curve for axis direction",
		eligible_classes= &eligibleClasses,
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &inputId[1].objid,
		osnum		= &inputId[1].osnum,
		md_env		= &inputEnv[1] ) ;

	ci$locate(
		prompt		= "Identify start surface limit / Move-on",
		classes 	= "EMSsubbs",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &inputId[2].objid,
		osnum		= &inputId[2].osnum,
		md_env		= &inputEnv[2],
		response	= &response ) ;

	if( response == EX_RJT_MOVEON ) have_limit = FALSE ;
	else have_limit = TRUE ;

	if( have_limit ) {
		ci$locate(
		prompt		= "Identify end surface limit",
		classes 	= "EMSsubbs",
		properties	= LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action	= LC_RIGID_COMP  |
				  LC_RIGID_OWNER | LC_FLEX_COMP |
				  LC_FLEX_OWNER  | LC_REF_OBJECTS,
		obj		= &inputId[3].objid,
		osnum		= &inputId[3].osnum,
		md_env		= &inputEnv[3] ) ;

	} else {
		inputId[2].objid = NULL_OBJID ;
		inputId[3].objid = NULL_OBJID ;
	}

	sts = vs$place_stiffener_axis( msg		= &msg,
			               inputId		= inputId,
			               inputEnv		= inputEnv,
			               axisId		= &stiffener_axisId ) ;

	if( !( sts & 1 & msg ) ) {
		printf( "Error in construction of stiffener axis\n" );
		goto LOCATE;
	} else 
		printf( "Constructed stiffener axis : [%d,%d]\n", stiffener_axisId.osnum, 
								  stiffener_axisId.objid );

	sts = vs$place_stiffener( msg		= &msg,
				  axisId	= &stiffener_axisId,
				  representation= AC_3D_REP,
				  basename	= "S",
				  matType	= "aluminium",
				  matGrade	= "1100",
				  partFam	= "AAS_I_beam",
				  partNum	= "I2x0.577",
				  stiffenerId	= &stiffenerId ) ;

	if( !( sts & 1 & msg ) ) printf( "Error in placement of stiffener\n" ) ;
	else printf( "Constructed stiffener : [%d,%d]\n", stiffenerId.osnum,
							  stiffenerId.objid ) ;
	}
}
/*----------------------------------------------------------------------------*/
