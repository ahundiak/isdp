/***************************************************************************
 * I/STRUCT
 *
 * File:        api/APIretgrcopy.u
 *
 * Description:
 *
 *  This ppl returns the 3d-solid graphical representation objects of
 *		a beam/stiffener or plate in the active file, 
 *		using the API vs$return_gr_copy().
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      india           creation date
 *
 ***************************************************************************/


#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "vsAPImac.h"

extern long  	VSreturn_gr_copy();
extern printf();

extern OMuword OPP_VSplate_class_id;
extern OMuword OPP_VSbeam_class_id;


main() 
{
	long			sts, msg;
	struct GRid		pl0,pl1;
	GRmd_env		pl0Env;
	GRclassid		fromClass[2];
	OM_S_CLASSLIST		locate_eligible_thing;


	locate_eligible_thing.w_count  = 2;
        locate_eligible_thing.w_flags  = 1;	/* SUB_CLASS objects */


	fromClass[0] = OPP_VSplate_class_id;
	fromClass[1] = OPP_VSbeam_class_id;

	locate_eligible_thing.p_classes  = fromClass;

	if( !ci$locate(
       		prompt       = "Identify Plate/Beam",
		eligible_classes= &locate_eligible_thing,
		properties   =	LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		owner_action =	LC_RIGID_COMP | LC_RIGID_OWNER | LC_FLEX_COMP |
				LC_FLEX_OWNER,
		obj          = &pl0.objid,
		osnum        = &pl0.osnum,
		md_env       = &pl0Env ) ) exit ;

	pl1.objid = NULL_OBJID ;
	sts =
	vs$return_gr_copy(	msg 		= &msg,
				strEnv 		= &pl0Env,
				strElement 	= pl0,
				solidRep	= &pl1 );
	if(! (sts & msg & 1 ) ){
		printf("vs$return_gr_copy Failed \n");
	}
	else{
		printf("Solid  = %d %d \n",pl1.objid,pl1.osnum);
	}
}


