/* $Id: COetable.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/obsolete/cmd / COetable.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COetable.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
	 92/08/13	This file is OBSOLETE
 */
   
#include "cieveryone.h"
#include "cimacros.h"
#include "ci_mac_def.h"
#include "DIdef.h"
#include "DItypedef.h"
#include "DIglob.h"
#include "DIprims.h"
#include "DImacros.h"



struct GRmd_env		MOD_ENV;
struct GRid 	 	TEMP,TABLE;
GRobj 			MAC1;


char			loc_mes[80],loc_prompt[80],table_name[80],wrk_name[80], 
			tname[80];
int             	suc,sts;
struct ret_struct	temp_rts;
#define P_MAX 1023
char	pmpath[1+P_MAX]	,
	pmexpn[1+P_MAX]	,
	she[4+P_MAX]		,
	*dirpath		;


#define DEBUG 1

extern int	CIexpand()	;
extern char	*strtok()	;
extern int	print()		;
extern int	sprint()	;
extern char 	*getenv()	;	
extern int	DImain(), DIreport_error(),DIpwd() ;
extern int	DIfast_trans(),CO_xlate_from_user_mode() ;

main()
{
 ci$get_module_info(md_env = &MOD_ENV);

 strcpy(loc_mes,"Edit Parametric Table");
 message(loc_mes);

 while(1)
 {
step0:
      strcpy(loc_prompt,"Enter name of a table occurence");
      ci$get(	prompt	= loc_prompt,
			rc     =  suc,
           		string =  wrk_name);
      if( suc != 1 ) break;

      di$cvt_name_from_input(u_path = wrk_name,
                            s_path = table_name);


      sts = di$translate(	objname = table_name,
			p_objid	= &TABLE.objid, 
			p_osnum = &TABLE.osnum ) ;

      if( !( sts & SUCC ) ) {
          status("No table with that name");
	  write("No table with that name",'\n');
	}
      else
        {
  	ci$send( msg      = message  ACcpx.ACfind_exp_temp_struct
		           (&suc, 1, (char *)&(temp_rts),&MOD_ENV ),
	   	 targetid = TABLE.objid,
	   	 targetos = TABLE.osnum );
  	 if( suc != 1 ){
	  write("cant find expression",'\n');break;}

        strcpy(tname,temp_rts.var.text_st.text_string);

	dirpath = getenv("TABLE_PATH");
#if DEBUG
	write("Table directory path =",dirpath,'\n');
#endif
	strcpy( pmpath,dirpath			) ;
	strcat(pmpath,"/"			) ;
	strcat( pmpath,tname 			) ;
	strcat( pmpath, ".t"			) ;
	CIexpand( pmpath, pmexpn, 1 + P_MAX ) ;
	strcpy(she,"me ");
	strcat(she,pmexpn);
	sh(she);
        }	

 }
}

wakeup(){
	message(loc_mes);
}
