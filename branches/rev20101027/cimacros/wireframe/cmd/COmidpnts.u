/* $Id: COmidpnts.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COmidpnts.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COmidpnts.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 		ci_mac_bib_FileId;
IGRint		resp_exp;

#define  LOW_RNG		0.0
#define  HIG_RNG		1.0

char		loc_mes[80],loc_prompt[80], exp_prompt[80];
int		suc, stat;
GRobj		MAC1;
struct GRid	TEMP[5];
struct GRmd_env MOD_ENV;
double		exp_default, expr;



extern ASmake_source_from_env();
extern	printf();


main()
{


 while(1)
 {
step0:
     	resp_exp = 0;
     	status("Reset to create expressions for u v parameters");

exp1:

        while(1)
	{

		ci$locate(     prompt	    = "select graphical object",
			       obj	    = &(TEMP[0].objid),
			       osnum	    = &(TEMP[0].osnum),
                               properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                               owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                               classes      = "GRgraphics",
		   	       response     = &M_response,
                               md_env       = &MOD_ENV   );
 		status("");
		if( (M_response == EX_RJT_MOVEON) && (resp_exp == 0) ){
			resp_exp = 1;
			ask_expressions();
			goto exp1;
		}
		else if( (M_response == EX_DATA)   ){
			if(  resp_exp == 0 ) cre_default_expressions();
	   		ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0]);	
		}
		else if( M_response == EX_BACK_UP ){ 
		       resp_exp = 1;
		       ask_expressions();
		       goto exp1;
		}
		else exit;


   		ci$get_module_info(md_env = &MOD_ENV);

		MAC1 = NULL_OBJID;

#ifdef	DEBUG
		printf(" TEMP[0]: %d, %d\n", TEMP[0].objid, TEMP[0].osnum );
		printf(" TEMP[1]: %d, %d\n", TEMP[1].objid, TEMP[1].osnum );
		printf(" TEMP[2]: %d, %d\n", TEMP[2].objid, TEMP[2].osnum );
		printf(" TEMP[3]: %d, %d\n", TEMP[3].objid, TEMP[3].osnum );
		printf(" TEMP[4]: %d, %d\n", TEMP[4].objid, TEMP[4].osnum );
#endif

		ci$send(msg      = message nci_macro.init( &suc,
							   0,
							   "midpnts",  
							   5,
							   TEMP,
							   0,
							   &MOD_ENV ),
			targetid = MAC1,
	      		targetos = MOD_ENV.md_id.osnum );

   		if( suc == 0 ){
			write("placement of nci_macro \"midpnts\" failed\n");
			status("placement of nci_macro \"midpnts\" failed");
      			ci$send(msg = message Root.delete(0),
	      			targetid = MAC1,
	      			targetos = MOD_ENV.md_id.osnum );
   		}

     		status("Reset to create expressions for point position ");
	}
 }
}
wakeup(){
	message(loc_mes);
}

/*==========================================================================*/
init(){

  	strcpy(loc_mes,"<Assoc> Place mid point of graphical object");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;

}


ask_expressions()
{

ask0:
	strcpy(loc_prompt,"enter expression for pos [0-8]");
	strcpy(exp_prompt,"enter pos value");
	exp_default = 4.0;

	push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[1];
	ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
	if( suc != 1 ) exit;

	ci$send( msg = message expression.NDgive_value(&expr),
                 targetid = TEMP[1].objid,
		 targetos = TEMP[1].osnum );

	if( expr < 0.0 || expr > 8.0  ){
	  status("pos from 0 - 8");
	  goto ask0;
	}

	push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[2];
	ci$run( file_id = &ci_mac_bib_FileId,
 	       entry   = "CreDefUnExp" );
	if( suc != MSSUCC ) exit;

	push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[3];
	ci$run( file_id = &ci_mac_bib_FileId,
                entry   = "CreDefUnExp" );
	if( suc != MSSUCC ) exit;

	push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[4];
        ci$run( file_id = &ci_mac_bib_FileId,
 	        entry   = "CreDefUnExp" );
        if( suc != MSSUCC ) exit;
}

cre_default_expressions()
{

         push (char *)&suc, (IGRdouble)4.0, (char *)&TEMP[1];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

	 /* 
	  * Set default (x,y,z) vector values. 
	  */
         push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[2];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

         push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[3];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

         push (char *)&suc, (IGRdouble)0.0, (char *)&TEMP[4];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

}
/*==========================================================================*/






