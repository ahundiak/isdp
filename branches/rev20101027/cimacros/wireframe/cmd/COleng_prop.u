/* $Id: COleng_prop.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COleng_prop.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COleng_prop.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.2  1996/08/26  08:35:02  pinnacle
# Replaced: cimacros/wireframe/cmd/COleng_prop.u for:  by ksundar for vds.241
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"


double		pnt[3];
struct GRid 	TEMP[3];
GRobj 		MAC1;
int		num_temp;
int 		suc,rt,i;
char		loc_mes[80],loc_prompt[80], exp_prompt[80];
double		exp_default;
struct GRmd_env	MOD_ENV;

extern ASmake_source_from_env();


main()
{
  strcpy(loc_mes,"Associative Measure Element Length");
  message(loc_mes);
  while(1)
  {

step0:
	num_temp = 1;

     	if(!ci$locate( prompt       = "Locate element to measure ",
		    classes      = "GRcurve",
                    properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                    owner_action = LC_RIGID_COMP
                                   | LC_RIGID_OWNER | LC_FLEX_COMP
                                   | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            obj          = &(TEMP[0].objid),
                    osnum        = &(TEMP[0].osnum ),
		    data_point   = pnt,
		    md_env  = &MOD_ENV  )) break;
     	ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	

  	if(!ci$locate( prompt       = "Identify from point to measure/Move on",
                       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[1].objid),
                       osnum        = &(TEMP[1].osnum),
		       md_env       = &MOD_ENV  )) goto step1;

	ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]);	

        if(!ci$locate( prompt       = "Identify end point to measure",
                       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[2].objid),
                       osnum        = &(TEMP[2].osnum),
		       md_env       = &MOD_ENV  )) goto step0;

	ASmake_source_from_env( &TEMP[2],&MOD_ENV,&TEMP[2]);	
  
        num_temp = 3;

step1:
   	    ci$get_module_info(md_env = &MOD_ENV);

       	    MAC1 = NULL_OBJID;
      	    ci$send(msg     = message nci_macro.init( 
						     &suc,
						     0,
						     "leng_prop",
						     num_temp,
						     TEMP,
						     NULL,
						     &MOD_ENV ),
	      	   targetid = MAC1,
		   targetos = MOD_ENV.md_id.osnum );

   	    if( suc == 0 ){
			write("placement of nci_macro \"leng_prop\" failed\n");
			status("placement of nci_macro \"leng_prop\" failed");
      			ci$send(msg      = message Root.delete(0),
	      			targetid = MAC1,
	      			targetos = MOD_ENV.md_id.osnum );
            }

 }
}
wakeup(){
	message(loc_mes);
}

