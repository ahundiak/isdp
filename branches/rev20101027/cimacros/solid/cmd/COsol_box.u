/* $Id: COsol_box.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/solid/cmd / COsol_box.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsol_box.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "EMSmsgdef.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 			ci_mac_bib_FileId;


GRobj 		MAC1;
int 		suc, i;
char		loc_mes[80],loc_prompt[80], exp_prompt[80];
double		exp_default;
struct GRmd_env	MOD_ENV;
struct GRid 	TEMP[7];


extern ASmake_source_from_env();

main()
{
 while(1)
 {


p0:  if(!ci$locate( prompt       = "Identify coordinate system ",
                    properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
		    classes      = "GRcoords",
                    owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            obj          = &TEMP[0].objid,
                    osnum        = &TEMP[0].osnum,
		    md_env       = &MOD_ENV )) break;

     ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	

/*********************************************************************/

p1:    strcpy(loc_prompt,"enter expression for the start x");
       strcpy(exp_prompt,"enter value");
       exp_default = 0.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[1];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

p2:    strcpy(loc_prompt,"enter expression for the length of x");
       strcpy(exp_prompt,"enter value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[2];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

/*********************************************************************/

p3:    strcpy(loc_prompt,"enter expression for the start y");
       strcpy(exp_prompt,"enter value");
       exp_default = 0.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[3];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

p4:    strcpy(loc_prompt,"enter expression for the length of y");
       strcpy(exp_prompt,"enter value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[4];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

/*********************************************************************/

p5:    strcpy(loc_prompt,"enter expression for the start z");
       strcpy(exp_prompt,"enter value");
       exp_default = 0.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[5];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

p6:    strcpy(loc_prompt,"enter expression for the length of z");
       strcpy(exp_prompt,"enter value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[6];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto p0;

/*********************************************************************/
      ci$get_module_info(md_env = &MOD_ENV);

      MAC1 = NULL_OBJID;
      ci$send(msg = message 
                    nci_macro.init(&suc,0, "sol_box", 7, TEMP, 0, &MOD_ENV),
	      targetid = MAC1,
	      targetos = MOD_ENV.md_id.osnum );
      if( suc == 0 ){
		write("placement of nci_macro \"sol_box\" failed\n");
		status("placement of nci_macro \"sol_box\" failed");
      		ci$send(msg = message Root.delete(0),
	      		targetid = MAC1,
	      		targetos = MOD_ENV.md_id.osnum );
      }
 }
}


/*==========================================================================*/
init(){

 	strcpy(loc_mes,"<Assoc> Place Box by Coordinate System and Expressions");


 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;
}

wakeup(){
	message(loc_mes);
}

/*==========================================================================*/


