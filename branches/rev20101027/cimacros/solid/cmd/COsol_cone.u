/* $Id: COsol_cone.u,v 1.1.1.1 2001/01/04 21:07:20 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/solid/cmd / COsol_cone.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsol_cone.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:20  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 		ci_mac_bib_FileId;

struct GRid 	TEMP[4];
GRobj 		MAC1;
int 		suc,keyrad;
GRobj 		RAD,DIR;
char            txt[20],parname[80],dirname[80],name[80];
double		number;
double		exp_default;
char		loc_mes[80],loc_prompt[80], exp_prompt[80], exp_class[40];
struct GRmd_env	MOD_ENV;

extern ASmake_source_from_env();

main()
{

 while(1)
 {

pt1:    if(!ci$locate( prompt       = "Identify base point",
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[0].objid),
                       osnum        = &(TEMP[0].osnum),
		       md_env	    = &MOD_ENV)) exit;

	 ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0]);	

pt2:     if(!ci$locate( prompt       = "Identify height point",
		        classes      = "GRpoint",
                        properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                        owner_action = LC_RIGID_COMP
                                       | LC_RIGID_OWNER | LC_FLEX_COMP
                                       | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	                obj          = &(TEMP[1].objid),
                        osnum        = &(TEMP[1].osnum),
		       md_env	     = &MOD_ENV)) goto pt1;

	 ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]);	


pt3:	
         strcpy(loc_prompt,"enter expression base diameter");
         strcpy(exp_prompt,"enter base diameter value");
         exp_default = 1.0;
         push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[2];
         ci$run(  file_id  = &ci_mac_bib_FileId,
 	          entry    = "loc_exp" );
         if( suc != 1 ) goto pt1;

         strcpy(loc_prompt,"enter expression height diameter");
         strcpy(exp_prompt,"enter height diameter value");
         exp_default = 0.0;
         push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[3];
         ci$run(  file_id  = &ci_mac_bib_FileId,
 	          entry    = "loc_exp" );

       ci$get_module_info(md_env = &MOD_ENV);

       MAC1 = NULL_OBJID;

       ci$send(msg = message nci_macro.init( &suc,
					     0, 
					     "sol_cone",
					     4,
					     TEMP,
					     NULL,
					     &MOD_ENV ),
	       targetid = MAC1,
	       targetos = MOD_ENV.md_id.osnum );
      	if( suc == 0 ){
		write("placement of nci_macro \"sol_cone\" failed\n");
		status("placement of nci_macro \"sol_cone\" failed");
      		ci$send(msg = message Root.delete(0),
			targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );
      	}

 }
}

/*==========================================================================*/
init(){

    	strcpy(loc_mes,"<Assoc> Place Solid Cone by Axis and Diameters");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;
}

wakeup(){
	message(loc_mes);
}
/*==========================================================================*/

