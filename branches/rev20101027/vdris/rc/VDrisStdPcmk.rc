/* $Id: VDrisStdPcmk.rc,v 1.1 2001/11/09 14:57:23 ahundiak Exp $  */

/***************************************************************************
 * I/VDS
 *
 * File:        vdris/rc/VDrsxBlob.rc
 *
 * Description: Std Pcmk Geom Blob Routines
 *
 * Dependencies:
 *
 * Revision History:
 * $Log: VDrisStdPcmk.rc,v $
 * Revision 1.1  2001/11/09 14:57:23  ahundiak
 * ah
 *
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 10/31/01  ah      Creation
 *
 ***************************************************************************/

#include "VDtypedefc.h"
#include "VDsys.h"
#include "VDrisc.h"

#define BLOB_LEN 8000

/* -----------------------------------------------
 * Insert std geom record
 */
IGRstat VDrisInsertStdGeom2(IGRint geom_sts, IGRchar *geom_key, IGRchar *geom_txt)
{
  IGRstat retFlag = 0;

  exec sql begin declare section;

    char     sqlx[256];
    char    *err_ptr;
    ris_text geom_txtx;
    char     geom_keyx[128];
    int      geom_stsx;

  exec sql end   declare section;

  /* General error handling */
  exec sql whenever sqlerror goto :error;

  /* Basic statement */
  sprintf(sqlx,"Insert into %s values(?,?,?);","std_geom2");
  geom_stsx = geom_sts;
  strcpy(geom_keyx,geom_key);

  exec sql prepare stmt_insert_std_geom from :sqlx;

  /* Blob stuff */
  geom_txtx.filename   = NULL;
  geom_txtx.file_used  = 0;
  geom_txtx.array      = geom_txt;
  geom_txtx.array_size = strlen(geom_txt) + 1;

  exec sql execute stmt_insert_std_geom using :geom_stsx, :geom_keyx, :geom_txtx;

  exec sql clear stmt_insert_std_geom;

  return 1;

error:
  exec sql whenever sqlerror continue;
  exec sql report error into :err_ptr;
  puts(err_ptr);

  return 0;
}
/* -----------------------------------------------
 * Select std geom record
 */
IGRstat VDrisSelectStdGeom2(IGRchar *geom_key, IGRchar **geom_txt)
{
  IGRstat retFlag = 0;

  exec sql begin declare section;
    sqlda    out_desc;
    char     sqlx[256];
    char    *err_ptr;
  exec sql end   declare section;

  IGRchar *buf = NULL;

  ris_blob textx;
  sqlvar   sqlvars[3];
  long     long0,long1,long2;

  /* General error handling */
  exec sql whenever sqlerror goto :error;
  exec sql whenever not found goto :not_found;

  /* Init */
  if (geom_txt == NULL) return 0; *geom_txt = NULL;
  if (geom_key == NULL) return 0;

  /* Room for the buffer */
  buf = malloc(BLOB_LEN);
  if (buf == NULL) return 0;

  /* Basic statement */
  sprintf(sqlx,
          "Select geom_data from std_geom2 where geom_key='%s';",
	  geom_key);       

  exec sql prepare stmt_select_geom2 from :sqlx;

  /* Ris fills in number of output columns */
  out_desc.sqld   = 0;
  out_desc.sqln   = 0;
  out_desc.sqlvar = 0;

  exec sql describe output stmt_select_geom2 using descriptor out_desc;

  /* Need room of descriptions of output columns */
  out_desc.sqlvar = sqlvars;
  out_desc.sqln   = out_desc.sqld;
  exec sql describe output stmt_select_geom2 using descriptor out_desc;

  out_desc.sqlvar[0].sqldata = (char*)&textx;
  out_desc.sqlvar[0].sqlind  = &long2;
  out_desc.sqlvar[0].sqlnull = 1;

  /* Blob stuff */
  textx.filename   = NULL;
  textx.file_used  = 0;
  textx.array      = buf;
  textx.array_size = BLOB_LEN;

  /* Open cursor */
  exec sql declare curs_select_geom2 cursor for stmt_select_geom2;
  exec sql open    curs_select_geom2;

  /* Query, expect only one response? */
  exec sql fetch curs_select_geom2 using descriptor out_desc;
  *geom_txt = buf;
  buf = NULL;

  /* Clear it */
not_found:
  exec sql whenever not found continue;
  exec sql clear stmt_select_geom2;
  if (buf) free(buf);
  if (*geom_txt) return 1;
  return 0;

error:

  if (buf) free(buf);

  exec sql whenever sqlerror continue;
  exec sql report error into :err_ptr;
  puts(err_ptr);
	
  return 0;
}

#if 0
/* -----------------------------------------------
 * For testing
 */
IGRstat VDrisDeleteBlobRecordX(IGRint key, void (*showStatus)(IGRchar *msg))
{
  IGRchar sql[128];
  IGRchar msg[128];
  
  /* The query */
  sprintf(sql,"Delete from %s where %s=%d;",
	  VDRIS_TBLN_BLOBS,
          VDRIS_FLDN_BLOBS_KEY,
          key);

  if (showStatus) {
    sprintf(msg,"Deleting blob record %d ...",key);
    (*showStatus)(msg);
  }

  VDrisExecute(sql);

  if (showStatus) {
    sprintf(msg,"Deleted blob record %d",key);
    (*showStatus)(msg);
  }

  return 1;
}
#endif
