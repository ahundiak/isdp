
-- $ID$
--**************************************************************************
-- I/VDS
--
-- File:	vds/vddb/vds /VDSupdate.ddl
--
-- Description:
--    Table definitions for VDS applications.                              --
--                                                                         --
-- History:
--
-- Rev  By   Chk  Date      Description                                    --
-- ---  ---  ---  --------  ---------------------------------------------- --
-- 0    SLJ       05/14/96  Initial version.                               --
--                                                                         --
-- Notes:                                                                  --
--  1. RIS does not like TABS in this file.                                --
--  2. Tables are generated by inputing this file to RIS as follows:       --
--     RIS> default schema schema.passwd;                                  --
--     RIS> read vds.ddl;                                                  --
--                                                                         --
--*************************************************************************--

create table VDSCATALOGS
(
 CATALOG_NAME   char(18),
 DYNAMIC_TABLE  char(18),
 SCH_DYN_TABLE  char(18),
 CIT_TABLE      char(18),
 PRODUCT        char(10),
 EQUIP_PPL      char(14)
);

create table HVAC_NOZ_DYNAMIC               -- Hvac Nozzle dynamic data --
(
 COMP_SEQNO     integer     NOT NULL,
 ASSEMBLY_CAT   char(20)    NOT NULL,
 ASSEMBLY_NAM   char(30)    NOT NULL,
 ASSEMBLY_VER   char(12)    NOT NULL,
 EQP_NUMBER     char(12),
 EQP_ID_NO      integer,
 WIDTH_G        real,
 DEPTH_G        real,
 TAG_NUMBER     char(12),
 SYSTEM_NAME    char(12),
 ZONE_NUMBER    char(4),
 MATERIAL       char(12),
 INSUL_TYPE     char(4),
 INSUL_THK      real,
 LINING_TYPE    char(4),
 LINING_THK     real,
 WEIGHT_GRP     smallint,
 SHOCK_GRADE    char(8),
 MAX_FRICT      real,
 MAX_VELOC      real,
 MIN_VELOC      real,
 CONST_DIM      smallint,
 APPRV_STAT     char(8),
 CONSTR_STAT    char(8),
 CHG_NO         smallint,
 SIZE_METHOD    char(8),
 FLOW_RATE      real,
 VELOC_CALC     real,
 PRESS_DROP     real,
 EQUIV_DIA      real,
 LOC_X          double,
 LOC_Y          double,
 LOC_Z          double,
 PRI_X          double,
 PRI_Y          double,
 PRI_Z          double,
 SEC_X          double,
 SEC_Y          double,
 SEC_Z          double,
 ERR_CMP_FLG    char(1)
);

-- Added for VDS 2.4 --

alter table PIPING_DYNAMIC add        -- Piping dynamic attributes --
 FUNCTIONAL_ID  char(20);

alter table PID_SYM_CODE add         -- Equivalence table for P&ID symbols --
 ID_CATEGORY     smallint;
alter table PID_SYM_CODE add         -- Equivalence table for P&ID symbols --
 ID_BEHAVIOUR    smallint;

alter table HVAC_DYNAMIC add           -- Hvac component dynamic data --
 SEQ_NUMBER     char(8);
alter table HVAC_DYNAMIC add           -- Hvac component dynamic data --
 FUNCTIONAL_ID  char(20);

alter table RWAY_DYNAMIC add           -- Raceway component dynamic data --
 FUNCTIONAL_ID  char(20);

--*************************************************************************--
--                                                                         --
-- Table definitions for VDS drawing support                               --
--                                                                         --
--     OPE_FMT_*     - Table layouts                                       --
--     OPE_SUM_*     - Summarization criteria                              --
--     OPE_SORT_*    - Sort criteria                                       --
--     OPE_ADS_*     - Attribute driven symbology                          --
--                                                                         --
--*************************************************************************--

create table OPE_FMT_TABLE        -- table layout master --
(
 TABLE_NAME       char(12),
 TABLE_TYPE       char(12),
 TABLE_DIRECT     smallint,
 TIMESTAMP_0      char(24),
 USERID_0         char(12),
 TABLE_DESC       char(80),
 SUM_FILE         char(12),
 SORT_FILE        char(12),
 LC_UNIT          smallint
);

create table OPE_FMT_ALIGN         -- Coordinate alignment table --
(
 TABLE_NAME       char(12),
 GROUP_TYPE       smallint,
 ALIGN_CODE       smallint,
 ALIGN_VALUE      real
);

create table OPE_FMT_COL            -- data column declarations --
(
 TABLE_NAME       char(12),
 COL_SEQNO        smallint,
 COL_CHARS        smallint,
 COL_WDT          real,
 COL_HGT          real,
 COL_CHARWDT      real,
 COL_CHARSPC      real,
 COL_CHARHGT      real,
 COL_LINSPC       real,
 LTOP_STYLE       smallint,
 LTOP_WGT         smallint,
 LBOT_STYLE       smallint,
 LBOT_WGT         smallint,
 LLFT_STYLE       smallint,
 LLFT_WGT         smallint,
 LRGT_STYLE       smallint,
 LRGT_WGT         smallint,
 TL_BR            smallint,
 BL_TR            smallint
);

create table OPE_FMT_HDTR            -- header/trailer field declarations --
(
 TABLE_NAME       char(12),
 GROUP_TYPE       smallint,
 FIELDID          char(12),
 FLD_CHARS        smallint,
 FLD_CHARWDT      real,
 FLD_CHARSPC      real,
 FLD_CHARHGT      real,
 FLD_LINSPC       real,
 ALG_LCOL         smallint,
 ALG_RCOL         smallint,
 ALG_TOP          smallint,
 ALG_BOT          smallint,
 LTOP_STYLE       smallint,
 LTOP_WGT         smallint,
 LBOT_STYLE       smallint,
 LBOT_WGT         smallint,
 LLFT_STYLE       smallint,
 LLFT_WGT         smallint,
 LRGT_STYLE       smallint,
 LRGT_WGT         smallint,
 TL_BR            smallint,
 BL_TR            smallint
);

create table OPE_FMT_FILL         -- Data fill field (columns and headers) --
(
 TABLE_NAME       char(12),
 GROUP_TYPE       smallint,
 LIN_SEQNO        smallint,
 COL_SEQNO        smallint,
 FIELDID          char(12),
 FLD_TYPE         smallint,
 DATA_TYPE        smallint,
 DEC_PLACES       smallint,
 JUSTIF           smallint,
 ID_WEIGHT        smallint,
 ID_FONT          char(12),
 ID_NAME          char(80),
 ID_TEXT          char(240)
);


create table OPE_SUM_TABLE        -- summarization table master --
(
 TABLE_NAME       char(12),
 TIMESTAMP_0      char(24),
 USERID_0         char(12),
 TABLE_DESC       char(80)
);

create table OPE_SUM_QTY           -- summarization table quantities --
(
 TABLE_NAME       char(12),
 TABLE_CAT        char(12),
 TABLE_SUBCAT     char(12),
 QTY_FLAG         smallint,
 QTY_EXP          char(80)
);

create table OPE_SUM_MATCH         -- summarization table attributes --
(
 TABLE_NAME       char(12),
 TABLE_CAT        char(12),
 TABLE_SUBCAT     char(12),
 TABLE_INDEX      smallint,
 SUM_ATTR         char(24),
 SUM_REL          smallint,
 SUM_VAL          smallint,
 SUM_EXP          char(80)
);

create table OPE_SORT_TABLE        -- sorting table master --
(
 TABLE_NAME       char(12),
 TIMESTAMP_0      char(24),
 USERID_0         char(12),
 TABLE_DESC       char(80)
);

create table OPE_SORT_KEYS         -- sorting table keys --
(
 TABLE_NAME       char(12),
 SORT_INDEX       smallint,
 SORT_ORDER       smallint,
 SORT_TYPE        smallint,
 SORT_ATTR        char(24)
);

create table OPE_ADS_TABLE        -- ads table master --
(
 TABLE_NAME       char(12),
 TIMESTAMP_0      char(24),
 USERID_0         char(12),
 TABLE_DESC       char(80),
 LC_UNIT          smallint
);

create table OPE_ADS_REC           -- ads table records --
(
 TABLE_NAME       char(12),
 ADS_SYMBOL       char(12),
 ADS_ATTNAM       char(80),
 ADS_DATTYP       smallint,
 ADS_REL          smallint,
 ADS_DATTVAL      real,
 ADS_CATTVAL      char(80),
 ADS_SIDE         smallint,
 ADS_OFFSET       real,
 ADS_CHHGT        real,
 ADS_CHWDT        real,
 ADS_CHSPC        real,
 ADS_CHWGT        smallint,
 ADS_FONT         char(12)
);


-- Indexes added for performance --
create index VDS_PDMPARAM1 on PDMPARAMETERS (N_CATALOGNAME);
create index VDS_PDMPARAM2 on PDMPARAMETERS (N_CATALOGNAME, P_IOTYPE);

create index V_PDMPARAMLOC1 on PDMPARAMLOC
        (P_MACROCAT, P_MACROPARTNO, P_MACROREV);
create index V_PDMPARAMLOC2 on PDMPARAMLOC (N_CATALOGNAME);

-- The following indexes cannot be created until the mat_and_fam --
-- table is defined in the database.  If it is not defined an error message --
-- will be displayed saying the index cannot be created. --
create index V_MAT_AND_FAM1 on MAT_AND_FAM (N_ITEMNAME);
create index V_MAT_AND_FAM2 on MAT_AND_FAM (N_ITEMNAME, VS_TYPE);

create index VDS_PCODE1 on PIPING_COMMOD_CODE
      (SI_COMM_CODE, SIZE_G, SIZE_R, SCH_THK_G);
create index VDS_PCODE2 on PIPING_COMMOD_CODE
      (SI_COMM_CODE, SIZE_G, SIZE_R, SCH_THK_R);
create index VDS_PCODE3 on PIPING_COMMOD_CODE
      (SI_COMM_CODE, SIZE_G, SIZE_R);

create index VDS_PIPE_SPEC1 on PIPING_SPEC (spec_name);
create index VDS_PIPE_SPEC2 on PIPING_SPEC (spec_no);

 create index V_PIPE_COMPS1 on PIPING_COMPS (SPEC_NO);
 create index V_PIPE_COMPS2 on PIPING_COMPS (COMP_CODE);
 create index V_PIPE_COMPS3 on PIPING_COMPS (SHORT_CODE);
 create index V_PIPE_COMPS4 on PIPING_COMPS (OPT_CODE);
 create index V_PIPE_COMPS5 on PIPING_COMPS
     (SPEC_NO, COMP_CODE, SIZE_G_LOW, SIZE_G_HIGH, SIZE_R_LOW,
      SIZE_R_HIGH, OPT_CODE);

create unique index PCTYPE_LOOKUP on PIPING_COMP_TYPE (COMP_CODE, COMP_SHCODE);
create index V_PIPE_CTYPE1 on PIPING_COMP_TYPE (COMP_CODE);

create index PIPE_CODLST_LOOKUP on PIPING_CODELIST (LIST_NUM,
                                                    CODE_NUM);
create index V_PIPE_CLIST3 on PIPING_CODELIST (LONG_TXT);
