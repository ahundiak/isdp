/* $Id: COsrf_fillet.u,v 1.1.1.1 2001/01/04 21:07:21 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/surface/cmd / COsrf_fillet.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsrf_fillet.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:21  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "OMminimum.h"
#include "cimacros.h"
#include "cieveryone.h"

#include "DItypedef.h"
#include "DIdef.h"
#include "DIglob.h"
#include "DIprims.h"
#include "EMSmsgdef.h"
#include "msdef.h"
#include "ciexec.h"

extern int	DImain(), DIfast_trans();

GRobj 			ci_mac_bib_FileId;


struct GRmd_env		MOD_ENV;
struct GRid 		TEMP[9];
GRobj 			MAC1;
int             	num_ent;
int 			suc;
char			loc_mes[80],loc_prompt[80], exp_prompt[80];
double			exp_default;
double			number;

extern ASmake_source_from_env();

main()
{

  while(1)
  {

sf1:       if(!ci$locate( prompt       = "Identify surface 1",
		   	  classes      = "EMSsubbs",
                          properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                   	  owner_action = LC_RIGID_COMP
                                         | LC_RIGID_OWNER | LC_FLEX_COMP
                                         | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	                  obj          = &(TEMP[0].objid),
                          osnum        = &(TEMP[0].osnum),
                          md_env       = &MOD_ENV  )) exit;
     	    ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	

sf2:        if(!ci$locate( prompt       = "Identify surface 2 ",
		   	   classes      = "EMSsubbs",
                           properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                   	   owner_action = LC_RIGID_COMP
                                          | LC_RIGID_OWNER | LC_FLEX_COMP
                                          | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               	   obj          = &(TEMP[1].objid),
                       	   osnum        = &(TEMP[1].osnum),
                           md_env       = &MOD_ENV  )) goto sf1;
     	    ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1] );	

pt1:        if(!ci$locate( prompt       = "Identify fillet starting point ",
                           properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                   	   owner_action = LC_RIGID_COMP
                                          | LC_RIGID_OWNER | LC_FLEX_COMP
                                          | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	                   obj          = &(TEMP[2].objid),
                           osnum        = &(TEMP[2].osnum),
		           classes      = "GRpoint"      ,
                           md_env       = &MOD_ENV ) ) goto sf2;

     	    ASmake_source_from_env( &TEMP[2],&MOD_ENV,&TEMP[2] );	


//***************************************************************************

n1:    strcpy(loc_prompt,"Expr name for the side of surface 1");
       strcpy(exp_prompt,"enter side value for surface 1");
       exp_default = 0.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[3];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto pt1;

//***************************************************************************

n2:    strcpy(loc_prompt,"Expr name for the side of surface 2");
       strcpy(exp_prompt,"enter side value for surface 2");
       exp_default = 0.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[4];
       ci$run( file_id = &ci_mac_bib_FileId,
 	        entry     = "loc_exp" );
       if( suc != 1 ) goto n1;

//***************************************************************************

       strcpy(loc_prompt,"Expr name for starting radius of fillet");
       strcpy(exp_prompt,"enter starting radius value");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[5];
       ci$run( file_id = &ci_mac_bib_FileId,
  	        entry     = "loc_exp" );
       if( suc != 1 ) goto n2;


//***************************************************************************

pt2:   if(!ci$locate( prompt  = "Identify fillet end point/ moveon ",
                      owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	              	  obj     = &(TEMP[8].objid),
                      	  osnum   = &(TEMP[8].osnum),
	           	  classes      = "GRpoint",
                          md_env       = &MOD_ENV ) )
	{
	   num_ent = 7;

	}
	else
	{
		ASmake_source_from_env( &TEMP[8],&MOD_ENV,&TEMP[8] );	


       		strcpy(loc_prompt,"Expr name for ending radius of fillet");
       		strcpy(exp_prompt,"enter ending radius value");
       		exp_default = 1.0;
       		push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            	     (char *)&TEMP[7];
       		ci$run( file_id = &ci_mac_bib_FileId,
  	        	 entry     = "loc_exp" );
       		if( suc != 1 ) exit;
		num_ent = 9;
	}

//***************************************************************************

         di$translate (objname = "rho", 
                        p_objid = &(TEMP[6].objid),
                        p_osnum = &(TEMP[6].osnum) );

          if ( (TEMP[6].objid) == NULL_OBJID )
	{
//	write("rho not found\n");
	send expression.place ( "rho", "0.4142" ) to TEMP[6].objid;
	status("");
	}

//***************************************************************************

   	ci$get_module_info(md_env = &MOD_ENV);

        MAC1 = NULL_OBJID;

        ci$send(msg      = message nci_macro.init
		( &suc,  0,  "srf_fillet", num_ent, TEMP, NULL, &MOD_ENV ),
	        targetid = MAC1,
		targetos = MOD_ENV.md_id.osnum );

	   if( suc == 0 ){
		write("placement of nci_macro \"srf_fillet\" failed\n");
		status("placement of nci_macro \"srf_fillet\" failed");
      		ci$send(msg = message Root.delete(0),
			targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );
	   }

  }
}


/*==========================================================================*/
init(){

  	strcpy(loc_mes,"<Assoc> Place Fillet Surface");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;
}

wakeup(){
	message(loc_mes);
}


/*==========================================================================*/

