/* $Id: COcrv_bend.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COcrv_bend.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COcrv_bend.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"


struct GRid 	TEMP[3];
GRobj 		MAC1;
short           num_pole;
int 		suc,stat;
char            txt[20];
double		value,number;
char		loc_mes[80],loc_prompt[80], exp_prompt[80];
double		exp_default;
struct GRmd_env	MOD_ENV;

extern ASmake_source_from_env();

main()
{
  strcpy(loc_mes,"<Assoc> Place Arc Bend by 3 points");

  while(1)
  {

step1:
     num_pole = 0;
  
     while(num_pole < 3)
     {
        message(loc_mes);
        strcpy(txt,"Identify Point ");
        strcat(txt,itoa((num_pole+1) ));

        if(!ci$locate( prompt       = txt,
		       classes      = "GRpoint",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[num_pole].objid),
                       osnum        = &(TEMP[num_pole].osnum),
		       md_env       = &MOD_ENV)) break;

     	ASmake_source_from_env( &TEMP[num_pole],&MOD_ENV,&TEMP[num_pole] );	

	status("");
        num_pole = num_pole + 1;
      }

      if( num_pole < 3){
	status(" bad number of points ");
	goto step1;
      }

      MAC1 = NULL_OBJID;

      ci$get_module_info(md_env = &MOD_ENV);


      ci$send(msg      = message nci_macro.init(  &suc,
						  0, 
						  "crv_bend", 
						  3, 
						  TEMP, 
						  NULL, 
						  &MOD_ENV ),
	      targetid = MAC1,
	      targetos = MOD_ENV.md_id.osnum );

      if( suc == 0 ){
		write("placement of nci_macro \"crv_bend\" failed\n");
		status("placement of nci_macro \"crv_bend\" failed");
      		ci$send(msg = message Root.delete(0),
			targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );
      }

  }
}

wakeup(){
        message(loc_mes);
}
