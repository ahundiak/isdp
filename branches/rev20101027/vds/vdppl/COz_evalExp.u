/* $Id $  */

/*************************************************************************
 * I/LOFT
 *
 * File:        src/vdppl/COz_evalExp.u
 *
 * Description: evaluate the expressions available in the system for all the
 *		nodes under a given node 
 *
 * Dependencies: VDexpNodeEvaluate() in VDexpvalue.I  does the job
 *
 * Revision History:
 *      $Log $
 *
 * History:
 *      MM/DD/YY   AUTHOR       DESCRIPTION
 *      02/11/00   Jayadev      File Creation
 *************************************************************************/

#include "VDppl.h"
#include "VDobj.h"

/* some of the header file dependencies have function pointers in them; 
 * this was causing problems for the ppl compilation; hence all the code
 * was written in a function in a VDexpvalue.I file
 */

extern IGRint VDexpNodeEvaluate();
extern sleep();

main()
{
  IGRint retCode;
  struct GRid treeNode;
  IGRchar expName[128],exp_txt[512];
 
  retCode = 0;
 
  ci$get( string = exp_txt,
          prompt = "Enter Object ID" );
  treeNode.objid = atoi( exp_txt );

  ci$get( string = exp_txt,
          prompt = "Enter Object OS" );
  treeNode.osnum = atoi( exp_txt );

  ci$get( string = expName,
          prompt = "Enter expression name" );

  retCode = VDexpNodeEvaluate(treeNode,expName);

  if(!retCode) {
    UI_status("Expression evaluation failed");
    sleep(1);
  }

  return 1;
}


