/* $Id: batdrw.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vdppl/batdrw.u
 *
 * Description:	Execution of batch processing per file processing.
 *
 * Dependencies:
 *		Batch scipt and nqs setups.
 *
 * Revision History:
 *	$Log: batdrw.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.5  1995/08/24  18:31:50  pinnacle
# Replaced: vdppl/batdrw.u for:  by tlbriggs for vds.240
#
# Revision 1.4  1995/08/04  06:57:04  pinnacle
# Replaced: vdppl/batdrw.u for:  by msbraju for vds.240
#
# Revision 1.3  1995/08/04  05:07:12  pinnacle
# Replaced: vdppl/batdrw.u for:  by msbraju for vds.240
#
# Revision 1.2  1995/08/03  15:47:42  pinnacle
# Replaced: vdppl/batdrw.u for:  by azuurhou for vds.240
#
# Revision 1.1  1995/07/25  20:59:48  pinnacle
# Created: vdppl/batdrw.u by azuurhou for vds.240
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *      07/15/95	adz		creation date
 *	08/24/95	tlb		modify includes - drop v_miscmacros.h
 *
 * -------------------------------------------------------------------*/

#include <stdio.h>
#include "cieveryone.h"
#include "cimacros.h"
#include "dp.h"
#include "dpmacros.h"
#include "vddrwattr.h"
#include "vdbatdrw.h"
#include "v_dbgmacros.h"

extern	int	printf();

/*
 *  used external functions.
 */
extern	long	VDdrw_BatchControl();

main()
{
IGRint			sts ;
IGRlong			msg ;
struct	GRmd_env 	mod_env;
FILE			*f;

	ci$get_module_info( md_env = &mod_env);

	sts = VDdrw_BatchControl( &msg, &mod_env );

	if( sts & msg & 1 ){
		ci$put(response = CLEAR_STACK);
		ci$put(cmd_key = "EXSvFl");     //"EXSvFl" "Save"
		ci$put(string = "y");
	}

	/*
	 * Inform the batch shell script about the proper ending
	 * of process.
	 */
	f = NULL;
	f = fopen ("/usr/tmp/batdrw.sts", "w" );
	if( f == NULL ){
		printf( "Unable to open file /usr/tmp/batdrw.sts\n" );
		return 1 ;
	}

	if ( sts & msg & 1 )
		fprintf( f, "1" );
	else
		fprintf( f, "0" );
	fclose (f);
}
