/* $Id: COz_UsrAtt.u,v 1.1.1.1 2001/01/04 21:09:02 cvs Exp $  */

/* I/VDS
 *
 * File:        vdppl / COz_UsrAtt.u
 *
 * Description:
 *      This ppl gets the user attributes of an object, and prints 
 *      their names, values and types on the UNIX window.
 *
 * Revision History:
 *	$Log: COz_UsrAtt.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:09:02  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *      08/15/94        R.Manem         Creation   
 *
 */


#include "cieveryone.h"
#include "cimacros.h"
#include "cilocate.h"

#include "OMprimitives.h"
#include "OMmacros.h"
#include "OMerrordef.h"
#include "exproto.h"

#include "igetypedef.h"
#include "igrtypedef.h"
#include "gr.h"

#include "igr.h"
#include "igrdp.h"
#include "go.h"
#include "grio.h"
#include "ex.h"
#include "ACrg_collect.h"
#include "ACattrib.h"

#include "vdparmacros.h"

extern int printf();
extern double strtod();
extern IGRlong VDgetUsrAttrs();

main()
{
     IGRint           nbAttrs, i;
     IGRlong          msg, status;
     IGRchar          loc_mes[40];
     struct GRid      obj;
     struct ACrg_coll *att;

     strcpy(loc_mes, "Get user attributes");
     message(loc_mes);

     while(1)
     {

          if( !ci$locate( prompt       = "Locate object",
                          owner_action = LC_RIGID_COMP | LC_RIGID_OWNER | 
                                         LC_FLEX_COMP | LC_FLEX_OWNER  | 
                                         LC_REF_OBJECTS,
                          classes      = "VDSroot",
                          obj          = &obj.objid,
                          osnum        = &obj.osnum) ) 
               break;

          printf("\nObject : < %d, %d>", obj.osnum, obj.objid);

          status = vd$getUsrAttributes( sts     = &msg, 
                                        object  = obj, 
                                        nbAttrs = &nbAttrs, 
                                        att     = &att );
          if( status == OM_W_UNKNOWN_MSG )
          {
               printf("\n\nInvalid Object\n\n");
               UI_status( "Invalid Object" );
               continue;
          }

          if( !(status & 1) )
          {
               printf("\n\nMacro vd$getUsrAttributes failed\n\n");
               continue;
          }

          printf( "\n\nNo of user attributes = %d\n", nbAttrs );

          if( nbAttrs == 0 )
               continue;

          printf( "\n  No.  %-30s %-20s  TYPE\n\n", "NAME", "VALUE" );

          for( i = 0 ; i < nbAttrs ; i = i + 1 )
          {
               printf("\n  %-3d  %-30s ", i+1, att[i].name );

               if( att[i].desc.type == AC_ATTRIB_TEXT )
                    printf("%-20s   TEXT", att[i].desc.value.att_txt );
               else if( att[i].desc.type == AC_ATTRIB_DOUBLE )
                    printf("%-20g   DOUBLE", att[i].desc.value.att_exp );
               else if( att[i].desc.type == AC_ATTRIB_TYPE_NOT_DEF )
                    printf("%-20s   UNDEFINED", "" );
          }
          printf("\n\n");
     }
}
