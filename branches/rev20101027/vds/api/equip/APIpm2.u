/***************************************************************************
 * I/VDS
 *
 * File:        api/equip/APIpm2.u
 *
 * Description:
 *		
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      10/29/96        i-paris         creation date
 *
 ***************************************************************************/

#include	<stdio.h>
#include	"OMprimitives.h"
#include	"cieveryone.h"
#include	"cimacros.h"
#include	"AS_status.h"
#include	"growner.h"

#include	"vdAPIequips.h"

main () {

	IGRlong		sts, msg, cnt;
	IGRint		rsp;
struct	VDcollector	*Tpl;

	/* Initialize */
	Tpl = NULL;

	/* Get <srf_comp> collector */
	sts = vd$getMacDefCollector ( msg    = &msg,
                                      MacLib = "PPMmacro",
                                      MacDef = "srf_comp",
                                      TplNum = &cnt,
                                      TplCol = &Tpl );
	as$status ( sts	   = sts,
		    msg	   = "vd$getMacDefCollector(srf_comp)",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	/* Set 1st template */
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 0,
				   Col = Tpl,
				   Txt = "srf1" );
	as$status ( sts	   = sts,
		    msg	   = "vd$collectorSetRow(<srf1>)",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	/* Set 2nd template */
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 1,
				   Col = Tpl,
				   Txt = "srf2" );
	as$status ( sts	   = sts,
		    msg	   = "vd$collectorSetRow(<srf2>)",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	/* Set 3rd template */
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 2,
				   Col = Tpl,
				   Txt = "srf3" );
	as$status ( sts	   = sts,
		    msg	   = "vd$collectorSetRow(<srf3>)",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

	/* Place <srf_comp> CImacro */
vd$collectorPrint ( Num = 3, Col = Tpl, msg = "<srf_comp> placement" );
	sts = vd$place_macro ( msg	= &msg,
			       TplNum	= 3,
			       TplCol	= Tpl,
                               MacLib	= "PPMmacro",
                               MacDef	= "srf_comp",
			       layer    = VD_LAY_D_A,
                               color    = VD_COL_ACT,
                               weight   = VD_WEI_ACT,
                               style    = VD_STY_ACT,
                               delOne   = VD_ONE_YES,
                               delAll   = VD_ALL_YES,
                               DirPath  = "COMPOSITE",
                               RootName = "SURFACE");
	as$status ( sts	   = sts,
		    msg	   = "vd$place_macro(srf_comp)",
		    test   = (!(sts & 0x00000001 & msg)),
		    action = GOTO_VALUE,
		    value  = wrapup );

wrapup:
	vd$collectorFree (Col = Tpl);
	return (sts);
}
