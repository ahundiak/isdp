/* $Id: VDdrwgrMacro.h,v 1.1.1.1 2001/01/04 21:08:51 cvs Exp $  */

/* I/VDS
 *
 * File:	vdinclude/VDdrwgrMacro.h
 *
 * Description:
 *
 * Dependencies:
 *	$Log: VDdrwgrMacro.h,v $
 *	Revision 1.1.1.1  2001/01/04 21:08:51  cvs
 *	Initial import to CVS
 *	
 * Revision 1.1  1998/04/29  16:27:20  pinnacle
 * VDS 2.5.1
 *
 * Revision 1.1  1997/05/08  13:20:44  pinnacle
 * New project VDS 250
 *
 * Revision 1.1  1996/07/19  20:33:52  pinnacle
 * Create VDS 241 project
 *
 * Revision 1.1  1995/03/08  22:14:56  pinnacle
 * Created: vdinclude/VDdrwgrMacro.h by azuurhou r#
 * rno
 *
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *	03/08/95	mf		creation data
 */

#ifndef	VDdrwgrMacro_include
#define	VDdrwgrMacro_include

/* -----------------------------------------------------------------------------
	The include file <VDdrwgrProto.h> not included in this file because
	of PPL poor understanding of prototype files (generated by mkptypes).
	You can include it before this one in your own program (if it's not
	a stupid PPL program ...).

	vd$placeBOMline() macro allows to place lines only.
	vd$placeBOMtext() macro allows to place texts only.
	vd$placeBOMelem() macro allows to place lines and texts.

	These 3 om$macros call the same function and vd$placeBOMelem() is
	the more generic of them.
----------------------------------------------------------------------------- */

/* ========================================================================== */
/*			vd$placeBOMline()				      */
/*									      */
/*	Marc Fournier (COC shipbuilding Paris)		03-Mar-1995	      */
/* ========================================================================== */

/*
Abstract :	This macro constructs line-segment(s) from BOM new 
		data structure, defined in VDdrwlo.h include file.

Arguments :	IN		IGRint		count	data structures' number
		IN	struct	VDdrwlo_apifix	*array	data structures' array
		IN	struct	GRmd_env	*p_env	construction module
		IN	struct	GRid		*p_rcs	reference coord. syst.
		IN		IGRdouble	z_gap	gap along <p_rcs> Z axis
		IN		IGRboolean	l_opt	line minimization flag
		OUT		IGRint		*p_nln	number of objects
		OUT	struct	GRid		**p_lin	array of objects
		OUT		IGRlong		*p_msg	completion code

Beware :	The 7th argument <p_lin> is internaly allocated and must be
		deallocated by the caller using om$dealloc() for example.
*/

#omdef	vd$placeBOMline (	count,
				array,
				p_env,
				p_rcs,
				z_gap = 0.0,
				l_opt = FALSE,
				p_nln,
				p_lin,
				p_msg	)

	VDdrwgrCreateLineText ( (count), (array), (p_env), (p_rcs), (z_gap),
			        (l_opt), (p_nln), (p_lin), NULL, NULL, (p_msg) )

#endomdef

/* ========================================================================== */
/*			vd$placeBOMtext()				      */
/*									      */
/*	Marc Fournier (COC shipbuilding Paris)		03-Mar-1995	      */
/* ========================================================================== */

/*
Abstract :	This macro constructs text(s) from BOM new 
		data structure, defined in VDdrwlo.h include file.

Arguments :	IN		IGRint		count	data structures' number
		IN	struct	VDdrwlo_apifix	*array	data structures' array
		IN	struct	GRmd_env	*p_env	construction module
		IN	struct	GRid		*p_rcs	reference coord. syst.
		IN		IGRdouble	z_gap	gap along <p_rcs> Z axis
		OUT		IGRint		*p_ntx	number of objects
		OUT	struct	GRid		**p_txt	array of objects
		OUT		IGRlong		*p_msg	completion code

Beware :	The 7th argument <p_txt> is internaly allocated and must be
		deallocated by the caller using om$dealloc() for example.
*/

#omdef	vd$placeBOMtext (	count,
				array,
				p_env,
				p_rcs,
				z_gap = 0.0,
				p_ntx,
				p_txt,
				p_msg	)

	VDdrwgrCreateLineText ( (count), (array), (p_env), (p_rcs), (z_gap),
			        FALSE, NULL, NULL, (p_ntx), (p_txt), (p_msg) )

#endomdef

/* ========================================================================== */
/*			vd$placeBOMelem()				      */
/*									      */
/*	Marc Fournier (COC shipbuilding Paris)		03-Mar-1995	      */
/* ========================================================================== */

/*
Abstract :	This macro constructs line-segment(s) and text(s) from BOM new 
		data structure, defined in VDdrwlo.h include file.

Arguments :	IN		IGRint		count	data structures' number
		IN	struct	VDdrwlo_apifix	*array	data structures' array
		IN	struct	GRmd_env	*p_env	construction module
		IN	struct	GRid		*p_rcs	reference coord. syst.
		IN		IGRdouble	z_gap	gap along <p_rcs> Z axis
		IN		IGRboolean	l_opt	line minimization flag
		OUT		IGRint		*p_nln	number of lines
		OUT	struct	GRid		**p_lin	array of lines
		OUT		IGRint		*p_ntx	number of text
		OUT	struct	GRid		**p_txt	array of text
		OUT		IGRlong		*p_msg	completion code

Beware :	The 7th argument <p_lin> and the 9th argument <p_txt> are
		internaly allocated (if not NULL) and must be deallocated			by the caller using om$dealloc() for example.
*/

#omdef	vd$placeBOMelem (	count,
				array,
				p_env,
				p_rcs,
				z_gap = 0.0,
				l_opt = FALSE,
				p_nln = NULL,
				p_lin = NULL,
				p_ntx = NULL,
				p_txt = NULL,
				p_msg	)

VDdrwgrCreateLineText ( (count), (array), (p_env), (p_rcs), (z_gap), (l_opt),
		        (p_nln), (p_lin), (p_ntx), (p_txt), (p_msg) )

#endomdef

#endif
