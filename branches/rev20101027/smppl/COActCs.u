/* $Id: COActCs.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COActCs.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COActCs.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/


#include "cieveryone.h"
#include "cimacros.h"

#include "SMdef.h"

extern int printf();
extern int GRfindcontext();

main()
{
  struct GRid 		cs;
  struct GRmd_env 	md_env, MOD_ENV;
  char			loc_mes[45];
  struct GRid 		new, TmpId;
  IGRlong		sts,msg;
  struct GRid 		context;

  extern int G_active_para_type; // share parameter

 
  strcpy(loc_mes,"Define Active Ship Coordinate System");
  message(loc_mes);
  // locate of the first line
    if(!ci$locate(prompt       = "Identify a Coordinate System",
		  owner_action = LC_RIGID_COMP
                               | LC_RIGID_OWNER | LC_FLEX_COMP
                               | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		  classes      = "GRgencs",
                  obj          = &cs.objid,
		  osnum	       = &cs.osnum,
		  md_env      = &md_env)) exit;

    printf("Identified cs: %d, %d\n", cs.objid, cs.osnum);

    sts= GRfindcontext(&msg,&md_env.md_env.matrix_type,md_env.md_env.matrix,
		       &md_env.md_id.osnum,&context);
    if(!(sts & msg & 1)) context.objid = NULL_OBJID;
    
    // If it is not a go get it.
    // It is not a really nice way of doing it but will see later on ....


    sts = ci$send(msg = message NDmacro.ACreturn_foot(&msg, "",
                        &TmpId, &md_env.md_env.matrix_type, md_env.md_env.matrix),
                        targetid = cs.objid,
                        targetos = cs.osnum );
    if(sts & msg & 1) cs = TmpId;

    printf("Identified cs: %d, %d\n", cs.objid, cs.osnum);

    ci$get_module_info(md_env = &MOD_ENV);
    new.objid = NULL_OBJID;
    new.osnum = MOD_ENV.md_id.osnum;

    sts = ci$send(msg = message SMShipCs.SMconnect
		  (&msg,&cs,&context),    
		  construct = 1,
		  targetid = new.objid, 
		  targetos = new.osnum,
		  verbose = 1);
    if(!(sts & msg & 1))
      {printf("SMShipCs pas cree\n"); exit;}
   
    sts = ci$send(msg = message SMmgr.SMSetState
		  (SM_NEW | SM_ACT),
		  targetid = new.objid, 
		  targetos = new.osnum);
    if(!(sts &1)) printf("Problem with state\n");
 
}


