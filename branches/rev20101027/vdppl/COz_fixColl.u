/* $Id: COz_fixColl.u,v 1.1 2001/02/06 23:12:58 ramarao Exp $  */
/*************************************************************************
 * I/VDS
 *
 * File:        vds/vdppl/COz_fixCol.u
 *
 * Description: Fix the corrupted ACrg_collectors for Table Row objects.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_fixColl.u,v $
 *      Revision 1.1  2001/02/06 23:12:58  ramarao
 *      Fixed TR# 4330.
 *
 *
 * History:
 *      MM/DD/YY   AUTHOR       DESCRIPTION
 *      02/06/01   Rama Rao     File Creation
 *************************************************************************/

#include "VDppl.h"
#include "VDobj.h"

extern int		VDpms_findall_ancestryobjects();
extern GRclassid	OPP_VDdrwTblRow_class_id;

extern IGRint     GRconfirm_box();

main()
{
IGRlong               msg, sts;
IGRint                i, nb_class, loc_cnt;
GRclassid	      classid[1];
OM_S_OBJID            *loc_list;
struct GRid	      obj_chk, rg_coll;
struct GRmd_env       cur_env;

   message( "Fix Corrupted ACrg_collect objects" );

   loc_cnt    = 0;
   nb_class   = 1;
   loc_list   = NULL;
   sts = MSSUCC;
   msg = MSSUCC;

   if( !GRconfirm_box( "WARNING: This will remove revision data for the Update Table and Drawing command." ) )
   {
	return 1;
   }

   /* Get all the Table Row Objects in the current design file */
   classid[0] = OPP_VDdrwTblRow_class_id;

   ci$get_module_info( md_env = &cur_env );

   loc_cnt = 0;
   VDpms_findall_ancestryobjects( cur_env.md_id.osnum, nb_class, 
				  classid, &loc_cnt, NULL );
   if( !loc_cnt ) goto wrapup;

   loc_list = ( OM_S_OBJID * ) malloc( sizeof(OM_S_OBJID)*loc_cnt );
   VDpms_findall_ancestryobjects(  cur_env.md_id.osnum, nb_class,
                                   classid, &loc_cnt, loc_list );
                                     
   for( i=0; i<loc_cnt; i=i+1 )
   {
       obj_chk.objid = loc_list[i];
       obj_chk.osnum = cur_env.md_id.osnum;

       // Get the ACrg_collector parent
       vdobj$GetParent( objID    = &obj_chk,
			idx      = 0,
			parentID = &rg_coll );
       if( rg_coll.objid == NULL_OBJID ) continue;

       // Reset the collector
       sts = ci$send(  msg = message ACrg_collect.ACset_list_attribute
                                      ( &msg, 0, NULL ),
                       targetid = rg_coll.objid,
                       targetos = rg_coll.osnum );
   }

wrapup:
   status( "Done" );
   if( loc_list   ) { free( loc_list   ); loc_list   = NULL; }

   return 1;
}
