# $Id: vd_slic,v 1.1.1.1 2001/01/04 21:07:29 cvs Exp $
#!/bin/ksh
# -------------------------------------------------------------------
# I/VDS
#
# File:	vds/etc/bin/vd_slic
#
# Description:
#
# Dependencies:
#
# Revision History:
#	$Log: vd_slic,v $
#	Revision 1.1.1.1  2001/01/04 21:07:29  cvs
#	Initial import to CVS
#	
# Revision 1.1  1995/12/21  22:59:46  pinnacle
# Created: etc/bin/vd_slic by v240_int for vds.240
#
#
# History:
#	MM/DD/YY	AUTHOR		DESCRIPTION
#
# -------------------------------------------------------------------
#

export resp_all=$1
TMP=/tmp/VD${RANDOM}
#----------------------------------------------------------------------------
function cleanup {
	/bin/rm /tmp/VD* > /dev/null 2>&1 ;
	return 0
}
#----------------------------------------------------------------------------
function FileExec {
	if [ ! -f "$*" ] ; then echo "Missing File  : $*" ; exit 2; fi
	if [ ! -x "$*" ] ; then echo "Non Executable: $*" ; exit 3; fi 
	$*
} # FileChecking
#----------------------------------------------------------------------------
function FileExist {
	if [ ! -f "$*" ] ; then echo "Missing: $*" ; exit 2; fi
} # FileExist
#----------------------------------------------------------------------------
function checkResult {

	list="${VDS}/config/vds.cmp"
	list="$list ${VDS}/config/sman.cmp"
	list="$list ${VDS}/config/hrd.cmp"

	for file in $list
	do
	  if [ ! -s $file ] ; then echo "Invalid Result: $file" ; exit 2; fi
	done

} # checkResult
#----------------------------------------------------------------------------
function checkFiles {

	list="${VDS}/vddraw/drw/grmake"
	list="$list ${VDS}/config/english/menus/gen_pantbl"
	list="$list ${VDS}/vddb/source/strip.sh"
	list="$list ${VDS}/bin/cci.vds"

	for file in $list
	do
		if [ ! -f $file ] ; then echo "Missing: $file" ; exit 2; fi
		if [ ! -x $file ] ; then chmod a+x $file ; fi
		if [ ! -x $file ] ; then echo "Change Mode: $file" ; exit 4 ; fi
	done

	list="${VDS}/config/vds.cmd"
	list="$list ${VDS}/config/sman.cmd"

	for file in $list
	do
	  if [ ! -w $file ] ; then echo "Write Protected: $file" ; exit 2; fi
	done

} # checkFiles
#----------------------------------------------------------------------------
#----------------------------------------------------------------------------
trap "cleanup ; tput smso ; echo '- INTERRUPT -' ; tput rmso ; exit 2" 2 3

#----------------------------------------------------------------------------
# First reconstruct message file if needed (vdmsgbuild test it)
# Now that SMAN and VDS merge, make a smanmsgbuild too (Jean 3/3/93)
#
${VDS}/etc/bin/msgbuild

#----------------------------------------------------------------------------
# remove the spec files (will be linked)
cd ${VDS}/spec
rm -f *

#----------------------------------------------------------------------------
# Check files are set before any execution.
checkFiles


FileExist "${VDS}/etc/bin/vd_reports"
${VDS}/etc/bin/vd_reports 1

ERROR=""
SLIC="${EXNUC}/bin/slic -C -p${VDS}/spec"
sequence="vdlocate vdequip vdpocket"
sequence="$sequence vdtbl/mgr vdtbl/imp vdtbl/set vdtbl"
sequence="$sequence smmgr vd* sm*"

cd ${VDS}
for dir in `find $sequence -type d -print | uniq`
do
	cd ${VDS}/$dir
        if /bin/ls *.S > /dev/null 2>&1 ; then
           	echo "---------: $dir ------------- link"
		ln ${VDS}/$dir/*.S ${VDS}/spec > /dev/null 2>&1
        fi

	if /bin/ls *.sl > /dev/null 2>&1 ; then

          echo "---------: $dir ------------- grmake sl"

	  for file in *.sl 
	  do
	    TMP=/tmp/VD${RANDOM}
	    echo "$SLIC $file"
	    if $SLIC $file | /bin/tee ${TMP} ; then

	      if /bin/grep "Cannot find file" ${TMP} /dev/null ; then
		ERROR=${ERROR}" \t--> Slic failed in ${dir}/${file}\n"

	      elif /bin/grep "Couldn't open" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "cannot execute" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "Cannot load" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "*** Error code" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "Don't know how to make" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make problem in ${dir}\n"

	      else
		ln ${VDS}/$dir/*.S ${VDS}/spec > /dev/null 2>&1
	      fi

	    else
		ERROR=${ERROR}" \t--> Slic failed in ${dir}\n"
	    fi
	    cleanup
	  done
	fi

	if /bin/ls *.t > /dev/null 2>&1 ; then

          echo "---------: $dir ------------- grmake t"

	  for file in *.t 
	  do
	    TMP=/tmp/VD${RANDOM}
	    echo "$SLIC $file"
	    if $SLIC $file | /bin/tee ${TMP} ; then
		
	      if /bin/grep "Cannot find file" ${TMP} /dev/null ; then
		ERROR=${ERROR}" \t--> Makemake failed in ${dir}\n"

	      elif /bin/grep "Couldn't open" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "cannot execute" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "Cannot load" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "*** Error code" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make failed in ${dir}\n"

	      elif /bin/grep "Don't know how to make" ${TMP} > /dev/null ; then
		ERROR=${ERROR}" \t--> Make problem in ${dir}\n"

	      else
		ln ${VDS}/$dir/*.S ${VDS}/spec > /dev/null 2>&1
	      fi

	    else
		ERROR=${ERROR}" \t--> Make failed in ${i}\n"
	    fi
	    cleanup
          done
	fi
done

${VDS}/etc/bin/vd_reports 0

if [ "blob${ERROR}" != "blob" ] ; then
	/bin/echo "\n${ERROR}"
	/usr/bin/tput bel
	exit 1 ;
fi

#----------------------------------------------------------------------------
# Link the specification files again for safety reasons.
cd ${VDS}
find vd* sm* -name \*.S -exec ln {} ${VDS}/spec/. > /dev/null 2>&1 \;

exit 0

