/* $Id: prevtest.u,v 1.1.1.1 2001/01/04 21:09:27 cvs Exp $  */
/*************************************************************************
 * I/VDS
 *
 * File:        vdtbl/func/prevtest.u
 *
 * Description:
 *   prevtest.u is a ppl file used for testing "preview table layout" 
 *   function
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: prevtest.u,v $
 *      Revision 1.1.1.1  2001/01/04 21:09:27  cvs
 *      Initial import to CVS
 *
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1995/06/07  20:20:16  pinnacle
# Created: vdtbl/func/test/* by tdumbach for vds.240
#
# Revision 1.2  1995/04/25  17:04:10  pinnacle
# Replaced: vdtbl/func/test/prevtest.u by yzhu r#
#
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      04/20/95        yzhu            creation date
 ************************************************************************/
#include "cieveryone.h"
#include "cimacros.h"
#include "cilocate.h"
#include "dpmacros.h"
#include "godef.h"
#include "gr.h"
#include "igr.h"
#include "igrdp.h"
#include "go.h"
#include "grio.h"
#include "ex.h"
#include "ACrg_collect.h"
#include "ACattrib.h"
#include "vdparmacros.h"

#include "igewindef.h"
#include "VDdrwlo.h"
#include "VDdrwtbl.h"
#include "VDdrwgrMacro.h"
/* #include "VDdrwlo_pr.h"  ppl don't know it*/
/* #include "VDdrwgrProto.h" ppl don't know this prototype */

extern  int printf();
extern  char *malloc();
extern	int free();
extern  VD_matchRE();

extern  VD_drwlo_getid();
extern  long VD_drwlo_preview();

main()
{

  IGRlong            msg;
  struct GRid 	     ownerId;
  struct GRid 	     window;
  struct GRid        tblLayoutId;
  struct GRid        csId;
  struct GRid        *graphId0; 
  IGRint             nbgraphId;
  IGRint             dis_type;
  IGRint             win_type;
  IGRint             xmin;
  IGRint             ymin;
  IGRint             width;
  IGRint             height;
  IGRint             screen;
  char               tabnam[80];
  char               tabtyp[80];
  IGRint             i;
  struct GRmd_env    mod_env;
  IGRlong            status;

  

  /* input from select command */
  ci$get(      prompt  = "Give layout name",
               string  = tabnam );
  printf(" tabnam : %s \n", tabnam );
/*
  ci$get(      prompt  = "Give layout type",
               string  = tabtyp );
  printf(" tabtyp : %s \n", tabtyp );
*/
/*
  while( 1 ) {
  if(ci$locate(prompt       = "Locate CS",
                  owner_action = LC_RIGID_COMP
                               | LC_RIGID_OWNER | LC_FLEX_COMP
                               | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                  classes      = "GRgencs",
                  md_env       = &mod_env,
                  obj          = &csId.objid,
                  osnum        = &csId.osnum)) break;
   }

  printf(" csId : id = %d os = %d \n", csId.objid, 
                                       csId.osnum );

*/

  /* get GRid of layout table */
   
  VD_drwlo_getid( &msg, tabnam, tabtyp, &tblLayoutId); 

  printf(" tblLayoutId : id = %d os = %d \n", tblLayoutId.objid, 
                                                tblLayoutId.osnum );

  /* test case  revisions1 */
  /* set other arguments */ 
  /* dis_type = VD_DRWLO_EN_HEADER;     */
   dis_type = VD_DRWLO_EN_ALL;       
  /*   dis_type = VD_DRWLO_EN_BRKTRLR; */    
  /*  dis_type = VD_DRWLO_EN_BRKHDR;   */    
  /*    dis_type = VD_DRWLO_EN_TRAILER; */    
  /* dis_type = VD_DRWLO_EN_DATA;       */ 
  /*   dis_type =  100;                 */ 
  printf(" dis_type = %d\n", dis_type);
 
  win_type = BORDER;               /* window boundary BORDER/NO_BORDER */
  xmin     = 50;
  ymin     = 50;  
  width    = 700;
  height   = 400;

  /* how to get screen: need to check */

  screen = 0;

  /* call function VD_drwlo_preview */ 

  graphId0 = NULL;                 /* graphId0 is allocated in called function
                                      user should free it in calling function
                                   */ 
 
  status = 
  VD_drwlo_preview( &msg, &window, tblLayoutId, 
                    dis_type, win_type, xmin, ymin, width, height, screen
                    ,&ownerId);

  printf(" owner Id  : id = %d os = %d \n", ownerId.objid, 
                                            ownerId.osnum );

  printf(" window Id : id = %d os = %d \n", window.objid, 
                                            window.osnum );
}
