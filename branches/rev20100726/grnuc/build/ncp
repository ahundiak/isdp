# ncp - script to copy and verify the copy of files
# 
#    Usage  : ncp [-q] <source file> <target file|target directory>
#    Inputs : $1 source file or -q=quiet mode (no success echo)
#             $2 target file|directory
#    Output : error / success messages
#    Return : successful = 0
#      Code   failure    = 1
#
#    Tim McKee  02/13/93
# $Log: ncp,v $
# Revision 1.1.1.1  2001/12/17 22:40:07  hans
# Initial import to CVS
#
# Revision 340.0  1997/05/27  22:07:22  root
# COMMENT : Initial checkin to 3.4.0 RCS from 3.3.0 src
#
# Revision 330.0  1996/01/11  20:23:01  root
# COMMENT : Initial checkin to 3.3.0 RCS from 3.2.0 src
#
# Revision 320.0  1994/12/12  16:57:28  root
# COMMENT : Initial checkin to 3.2 RCS from 3.1 src
#
# Revision 240.1  1993/03/04  14:21:48  grnuc20
# COMMENT : baselining fixes made by the build commandos
#
# Revision 220.1  1993/02/16  15:33:04  model22
# COMMENT : fixing problems in integration scripts due to modulizing them
#
# Revision 220.0  1993/02/13  22:52:03  tim
# COMMENT : initial creation of verification and error reporting utilities
#
#

if [ "$1" = "-q" ]
 then 
   QUIET=on
   shift
fi

# check number of arguments - should be 2
if [ $# != 2 ]
 then
   errrpt $0 "incorrect number of arguments"
   exit 1
fi

# make sure $1 is a file
if [ ! -f $1 ]
 then
   errrpt $0 "$1 is not a file"
   exit 1
fi

# check to see if dirname of $2 is writable
if [ ! -f $2 -a ! -d $2 ] 
 then
  if [ ! -w `dirname $2` ]
    then
      errrpt $0 "$2 is not writable"
      exit 1
  fi
fi


# perform the copy
cp $1 $2  
if [ "$?" != "0" ]
 then
   errrpt $0 "copy failed"
   exit 1
fi

# if $2 is a directory append filename to it and list target file
# if $2 is a file list target file
if [ -d $2 ]
 then
   ls $2/`basename $1` > /tmp/cp.$$ 2>/tmp/cp.err.$$
else
   ls $2 > /tmp/cp.$$ 2>/tmp/cp.err.$$
fi

# if the list returned the filename
if [ -s /tmp/cp.$$ ]
 then
  if [ "$QUIET" != "on" ]
    then
      echo " copy successful .... $1 -> $2"
  fi
  rm /tmp/cp.$$ /tmp/cp.err.$$
else
  echo "$0 : *ERROR* \c"
  cat /tmp/cp.err.$$
  rm /tmp/cp.$$ /tmp/cp.err.$$
  exit 1
fi
exit 0
