/************************************************************
 * FILE:  file_output.u
 *
 * PURPOSE:  This PPL program demonstrates how to write to
 *    files.
 *
 * DESCRIPTION: This program prompts the user for a filename.
 *    It then prompts the user for a part name, a price and
 *    a reference point.  The program writes this information
 *    to the file.  The program continues to prompt for new
 *    information until the user types 'q' or 'Q' for the
 *    part name.
 ************************************************************/

#include "ciminimum.h"
#include "cimacros.h"

#include "stdio.h"  /* required file for C standard I/O */

extern fprintf();   /* c standard io function              */
                    /* fopen() and fclose() are not extern */

main()
{
   char   name[40];   /* local variables */
   double price;
   double point[3];

   char filestat[40];  /* string to display filename status */
   char filename[40];

   short done; /* flag to end writing to file */

   FILE *file; /* file pointer from stdio.h */

/************************************************************
  Get the filename from the user.
 ************************************************************/

  /* set up a loop to get a valid filename */
   do
   {
     /* ask user for a filename */
      ci$get( prompt = "Enter a filename",
              string = filename );

     /* open the file for writing. */
      file = fopen( filename, "w" );

     /* always check for a file error */
      if ( file == NULL )
      {
        /* put the filename in the error message */
         strcpy( filestat, "Could not open " );
         strcat( filestat, filename );
         strcat( filestat, " for writing. " );

        /* display the error message in the status field */
         status( filestat );
      }

  /* loop again if the filename was not successfully opened */
   } while ( file == NULL );


  /* put the filename in the success message */
   strcpy( filestat, "Writing to file " );
   strcat( filestat, filename );

  /* display the success message in the message field */
   message( filestat );

/************************************************************
  Get the data and write it to a file.
 ************************************************************/

  /* set up a loop to get data and write it to the file */
   do
   {
      status( "Part names must not contain spaces" );
      ci$get( prompt = "Enter a part name to save (or q to quit)",
              string = name );

     /* set done to TRUE if user entered "q" or "Q" to quit */
      done =  ! strcmp( name, "q" )  ||  ! strcmp( name, "Q" );

      if ( ! done )
      {
         ci$get( prompt = "Enter a price to save",
                 value  = price );

         ci$get( prompt = "Enter a reference point to save",
                 point  = point );

         fprintf( file, "%s %lf %lf %lf %lf\n", name,
                                                price,
                                                point[0],
                                                point[1],
                                                point[2]  );
      }
   } while ( ! done );

/************************************************************
  Close the file.
 ************************************************************/
   fclose( file );
}

