/************************************************************************/
/*                                                                      */
/*      Program: getconic.u         Macro: gr$get_conic			*/
/*                                                                      */
/*      Defined in: grwireframe.h					*/
/*                                                                      */
/*      Comments: _____________________________________________________ */
/*									*/
/*                                                                      */
/************************************************************************/
#include "ciminimum.h"
#include "cimacros.h"
#include "igr.h"
#include "grwireframe.h"

extern GRgetconic_struct();

main()
{
    int		i;
    short	type;
    long 	msg1;
    struct GRid	conic_obj, new_id;
    struct IGRarc	conic;
    struct GRmd_env	env;
    double mtx[16];

    message("Get conic object information");

    while(1)
    {   
	ci$locate( obj = &conic_obj.objid,
	   	osnum = &conic_obj.osnum,
		classes = "GRconic",
		md_env = &env,
		prompt= "Identify conic");

	gr$get_conic(
		msg = &msg1,
		object_id =&conic_obj,
		conic = &conic,
		md_env = &env);

	if (1 & msg1)	
	{

	    write("conic information\n");
	    write("start angle=",conic.start_angle);
	    write("\nsweep angle=",conic.sweep_angle);
	    write("\nprimary axis=",conic.prim_axis);
	    write("\nsecondary axis=",conic.sec_axis);
	    write("\norigin");
	    write(conic.origin[0],conic.origin[1],conic.origin[2],'\n');
	    write("rotation matrix\n");

	    for (i=0; i<16; i=i+4)
	    {
	       write(conic.rot_matrix[i],conic.rot_matrix[i+1],conic.rot_matrix[i+2],conic.rot_matrix[i+3],'\n');
	    }


	}
    }
}
