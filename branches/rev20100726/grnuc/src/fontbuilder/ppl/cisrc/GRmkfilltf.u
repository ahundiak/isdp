/*       
 
     GRmkfilltf(tfname,fillable);
 
     Function to read a typeface file and make the font fillable

     two arguments are expected:
     tfname) the typeface file name (including path)
     fillable) number indicating if the fillable bit is to be turned on or off
     (1 or 0, respectively)
    

     Tim McKee  4/92  Creation
     Mrudula   11/92  Fixed crash on C4 and Sun. Removed all Form calls.
*/

#include "FS.h"
#include "FSTypeface.h"
#include <stdio.h>

#define SIZE_BH sizeof(TFBlockHeader)   /* # bytes in block header record */

GRmkfilltf(tfname,fillable)
    char *tfname;
    unsigned char     fillable;
{
    FILE              *file;
    short             flag2;
    int   file_increment, write_back, sts;
    short fmnr;
    char  format_buf[5];


        if (fillable > 1)
        {
            printf("Invalid fillable flag (should be 1 or 0)\n");
        }

        /* determine if the font is currently marked as fillable or not
         */

        if ((file = fopen (tfname, "r+")) != NULL)
        {

            fseek(file, SIZE_BH, 0);

            if (fread (format_buf, 1, 5, file) != 5)
                printf("Invalid typeface file\n");

            /* determine the typeface format which will affect data position */

            fmnr = 100 * (format_buf[1] - '0') + 10 * (format_buf[3] - '0');

            if ((format_buf[4] >= '0') && (format_buf[4] <= '9'))
                fmnr = fmnr + (format_buf[4] - '0');

            file_increment = 241;

            if (fmnr >= 232)
                file_increment = file_increment + 2;

            fseek(file, file_increment, 1);

            if (fread (&flag2, 1, 2, file) != 2)
                printf("Invalid typeface file\n");
            write_back = 0;

            if (flag2 & FS_NOPOLYS)
            {
                if (fillable)
                {
                    flag2 = flag2 & ~FS_NOPOLYS;
                    write_back = 1;
                }
            }
            else  /* font is currently fillable */
            {
                if (! fillable)
                {
                    flag2 = flag2 | FS_NOPOLYS;
                    write_back = 1;
                }
            }

            if (write_back)
            {
                fseek(file, -2, 1);

                if (fwrite((char *) &flag2, 1, 2, file) != 2)
                   printf("Error writing flag\n");

            }
            fclose(file);
        }
        else
            printf("Could not open file\n");

}
