TEST SYNOPSIS: UMS Certification Tests
These tests generate new files from the same data used to create a
control set of files and then compares them. Results are shown in test
1, 3 and 4 with byte-by-byte match of files indicating success.  In test
2, the compiler error test, no match indicates success.  In all cases,
the test fails if the expected files are not generated.  Any deviation
from expected results indicates failure.

********************************************************************
1. UMS Compiler Functionality Test
The test starts with a message source file, (test.txt) and creates an 
include file, (test.h) and a compiled message file, (test.msg.)  Then
the created files are compared with standard.h and standard.msg. A
byte-by-byte match indicates success.  No match and not creating
'test.h' or 'test.msg' indicates failure. 
----------------------------------------------------------
umscompile test.txt
----------------------------------------------------------
test.h IS SAME as standard.h
test.msg IS SAME as standard.msg

*** SUCCESS:  umscompile test.txt
********************************************************************
2. UMS Compiler Error Test
Takes a message source file: test.txt, and creates a compiled message
file: test.msg.  The generated file is compared with expected results
file: standard.msg.  Exact match of these files indicates SUCCESS.  If
test.h is generated, a FAILURE is indicated.  Creation of a wrong
test.msg file, indicates a failure and is shown by 'IS NOT THE SAME'
notation.  No match and not creating 'test.msg' indicates failure. 
----------------------------------------------------------
umscomptxt test.txt
----------------------------------------------------------
umcomptxt CORRECTLY did not generate test.h
test.msg IS SAME as standard.msg

*** SUCCESS:  umscomptxt test.txt
********************************************************************
3. UMS Compiler Argument -p and -m Test
-p generates an include file with a specific name,  (TEST.h)
-m generates a compiled message file by specific name, (TEST.msg)

Starts with a message source file, generates a named include file 
and a named compiled message file.  A comparison is made between the
content of the generated files and the control files.  Results are shown
with exact match of file content indicating success and any deviation of
content indicating failure. Not creating 'TEST.h' 'TEST.msg' indicates
failure.
----------------------------------------------------------
umscompile -p TEST.h -m TEST.msg test.txt
----------------------------------------------------------
TEST.h IS SAME as standard.h
TEST.msg IS SAME as standard.msg

*** SUCCESS:  umscompile -p TEST.h -m TEST.msg test.txt
********************************************************************

4. UMS Compiler Argument -F and -m Test
-F generates a FORTRAN include file: (test.inc)
-m generate a compiled message file by specific name, (TEST.msg)

Starts with a message source file, generates a FORTRAN include file 
and a named compiled message file.  A comparison is made between the
content of the generated files and the control files.  Results are shown
with exact match of file content indicating success.  No match and
not creating 'test.inc' and 'TEST.msg' indicates failure.
----------------------------------------------------------
umscompile -m TEST.msg -F test.txt
----------------------------------------------------------
test.inc IS SAME as standard.inc
TEST.msg IS SAME as standard.msg

*** SUCCESS:  umscompile -m TEST.msg -F test.txt
********************************************************************

