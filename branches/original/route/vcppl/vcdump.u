
/* $Id: vcdump.u,v 1.1.1.1 2001/01/04 21:12:36 cvs Exp $  */

/*************************************************************************
 * I/CABLE
 *
 * File:        vcppl/vcdump,u
 *
 * Description:
 *      service ppl program to print instance data
 *
 * Dependencies:
 *
 * Revision History:
 *        $Log: vcdump.u,v $
 *        Revision 1.1.1.1  2001/01/04 21:12:36  cvs
 *        Initial import to CVS
 *
# Revision 1.1  1998/04/30  10:52:34  pinnacle
# ROUTE 2.5.1
#
# Revision 1.1  1997/10/30  05:22:40  pinnacle
# Integ into Route 02040304
#
# Revision 1.1  1997/05/22  15:52:50  pinnacle
# Created: vcppl/vcdump.u by hverstee for cabling
#
 *
 * History:
 *        07/10/96        hv        Initial
 *
 *************************************************************************/

#include "ciminimum.h"
#include "cieveryone.h"
#include "cilocate.h"
#include "cisend.h"
#include "cimacros.h"
#include "asmacros.h"
#include "macro.h"
#include "AS_status.h"

extern int printf();
extern int ASmake_source_from_env();

main()
{
	struct GRid	CurveId;
	struct GRmd_env	MdEnv;
	IGRlong	retmsg;
	IGRint	status;
        IGRdouble     rpars[3];
        IGRint  ival;

  while (1)
  {
        prompt("enter objid (-1 to locate)");
        ci$get(value = ival);

    if (ival < 0)
    {

	ci$locate ( 	obj	= &CurveId.objid,
			osnum	= &CurveId.osnum,
			prompt	= "Identify object",
			owner_action	 = LC_RIGID_COMP,
			acc_prompt	= "Accept with point",
			md_env	= &MdEnv,
			accept_point	= rpars);
    }
    else
    {

        CurveId.objid = ival;

        prompt("enter os number");
        ci$get(value = ival);

        CurveId.osnum = ival;
    }


	status =
	ci$send ( msg = message VCRoot.VCDUMP (&retmsg),
		targetid = CurveId.objid,
		targetos = CurveId.osnum );
	as$status();
  }


}
