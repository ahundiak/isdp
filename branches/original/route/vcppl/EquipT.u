
/* $Id: EquipT.u,v 1.2 2001/02/20 01:10:59 build Exp $ */

/* I/CABLE
 *
 * File:  vcppl/VCEqTerm.u
 *
 * Description:
 *
 *  This ppl has to be assigned to each equipment macro created with
 *  terminals embedded.
 *  To assign it :
 *     edit the macro definition ( Modify Macro Definition )
 *     add under "Placement Options" : "~~post_placement"
 *     set the equivalent value to the name of this ppl.
 *
 *  Hence the "post_placement" function will be activated each time
 *  an occurrence of this macro will be placed.
 *
 *  This will generate extermal terminals from the embedded
 *      VCTembed object each time an equipment instance is placed.
 *
 * Revision History:
 *      $Log: EquipT.u,v $
 *      Revision 1.2  2001/02/20 01:10:59  build
 *      Replaced v_dbgmacros.h with product specific dbgmacros.h
 *
 *      Revision 1.1.1.1  2001/01/04 21:12:35  cvs
 *      Initial import to CVS
 *
# Revision 1.1  1998/04/30  10:52:34  pinnacle
# ROUTE 2.5.1
#
# Revision 1.1  1997/11/30  15:40:14  pinnacle
# Created: vcppl/EquipT.u by r250_int for route
#
# Revision 1.1  1997/11/09  06:57:00  pinnacle
# initial revision
#
 *
 * History:
 *  MM/DD/YY  AUTHOR    DESCRIPTION
 *  11/09/97  Alwin     The post_placement function which is in the file
 *                      VCTexpandi.I is being called to execute this placement
 *                      process. Previous file which(VCEqTerm.u) is not being
 *                      used currently.
 */

#include "ciminimum.h"
#include "cieveryone.h"
#include "vrdbgmacros.h" 

/*
#define MY_DEBUG 1
*/

/* The following variables are set in the file "COm_place3.I" in 
$GRNUC/src/assoc/nmacro_co". That's where the place_macro method is implemented
and in that it checks whether is there any placement_options specified. So that
to execute the post_placement function and execute it. During this process
in that method these variables will be set to the respective values. 
added by alwin for TR179701970 */

extern VC_termexpand();

struct GRid        MACRO_ID;
struct GRmd_env    MOD_ENV;

int post_placement()
{
  IGRlong       retmsg;
  IGRint        status, ict; 

  __DBGpr_com( " Entered post_placement " );

  __DBGpr_com( " Calling the Fn VC_termexpand " );
  status = VC_termexpand( &retmsg, &ict, &MACRO_ID, &MOD_ENV );
  
  if (ict > 0)
  {
//    printf ("%d terminals externalized\n",ict);
      __DBGpr_int( "terminals externalized ", ict );
  }

  __DBGpr_com( " Exiting the post_placement " );
  return OM_S_SUCCESS;
}
