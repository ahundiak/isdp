# This file is used by remote_newprod to define the nodes, products, model,
# and other information required for remote_newprod.

# All blank lines and lines starting with a '#' character are considered as
# comments by remote_newprod.

# Remote_newprod accepts several keywords that define specific information.
# The syntax is:
# KEYWORD	definition
# if you supply a keyword with no definition, then remote_newprod will revert
# that keyword's definition back to the default (if any).

# The SERVER keyword is used to establish the nodename.username.password of the
# system that acts as the newprod delivery node (should be the current node
# you are logged into). Note: the nodename can be substituted by the server's
# address. Remote_newprod will abort unless the SERVER keyword is defined. You
# can specify several SERVER keywords throughout the file. Remote_newprod will
# use the most recent definition.
# SERVER	nodename.username.password

# The MEDIA keyword is used to specify the type of newprod connection that the
# target node will make to the SERVER. The two valid values are CDROM and DISK,
# where CDROM indicates that the products are available from remote CDROM (a
# CDROM drive attached to the SERVER) and DISK indicates that the products are
# available from a delivery structure (constructed by makenode) on the SERVER.
# If MEDIA is not defined, then DISK will be used. The MEDIA option can also
# be specified several times throughout the file.
# MEDIA		DISK

# The LOGWHERE keyword is the directory on the SERVER node which will be where
# remote_newprod will deposit log information of each installation. If LOGWHERE
# is not defined, then remote_newprod will deposit the log files in the home
# directory of the SERVER defined above. The LOGWHERE keyword can also be
# defined several times.
# LOGWHERE	/path/dirname
#	or
# LOGWHERE	emailpath!user

# The MAX keyword is used to define the maximum number of systems that
# remote_newprod will update at the same time. In other words, if you have 18
# systems to upgrade, but your network and/or server can handle only 8 at a
# time, then specify 8 for the MAX keyword. Remote_newprod will ensure that no
# more than MAX upgrade processes are invoked at any given time. If the MAX
# is not defined, then MAX will default to 8. The MAX keyword can also be
# defined several times.
# MAX	number_of_systems

# The MODEL keyword is used to define the nodename.username.password (or
# filename on the server)) of the "defaults" file used to define the
# installation prompt answers. If a nodename.username.password is defined,
# then remote_newprod will
# fetch the /usr/ip32/.defaults file (updated there by "getanswer", a tool used
# for prompting within newprod installation scripts) from the node and transfer
# it to the target node. This allows you to upgrade a workstation and answer the
# newprod prompts the way you want them, then use remote_newprod to do the same
# with the other nodes on the network. If you prefer, you may transfer the
# .defaults file here and maintain it locally. If the MODEL keyword is not
# defined, then installation prompts will be answered with the responses from
# previous newprod runs on the target node. If no previous answers are
# defined, then product install scripts will default to hard-coded answers.
# The MODEL keyword can also be defined several times.
# MODEL	nodename.username.password
#	or 
# MODEL	/path/filename

# The PRODUCTS keyword specifies the products loaded by newprod. If a "u"
# appears in the list, then newprod will expand it to mean all currently
# out-of-date products. The PRODUCTS keyword can be product numbers or product
# names. If the PRODUCTS keyword is not defined, remote_newprod will load all
# products that are out-of-date for the target node. Again, the PRODUCTS
# keyword may be specified several times.
# PRODUCTS	u mstation

# The TARGET keyword defines the target nodename.root.password combinations for
# remote_newprod. Note: you must specify the "root" user and password.
# Remote_newprod cannot install software properly without root permissions on
# the target node. When remote_newprod encounters a TARGET keyword, it will
# submit an installation process on that target node, using all KEYWORDS
# defined up to that point. Remote_newprod will abort if no TARGET keyword
# appears within this file. Again, several TARGET keywords may be defined within
# this file.
# TARGET		nodename.root.password

# The REBOOT keyword specifies whether you want remote_newprod to reboot the
# target workstation after the installation process is complete. The default
# value for REBOOT is NO.
# REBOOT	YES
#	or
# REBOOT	NO

# The EXIT keyword allows you to terminate the remote_newprod process before
# the rest of input is read. This is great for debugging or loading one system
# without having to delete/comment-out several lines of your file.
# EXIT

# An example (appearing as comments):
# SERVER	server.wsdel
# MEDIA		CDROM
# LOGWHERE	server!mylogin
# MODEL		ip220.sys.syspass
# MAX		4
# PRODUCTS	u
# REBOOT	YES
# TARGET	ip220A.root.220Apass
# TARGET	ip220B.root.220Bpass
# PRODUCTS	MSTATION u
# TARGET	ip220C.root.220Cpass
# MODEL		ip6040.sys.syspass
# PRODUCTS
# TARGET	ip6040A.root.6040Apass
# TARGET	ip6040B.root.6040Bpass
# TARGET	ip6040C.root.6040Cpass
# TARGET	ip6040D.root.6040Dpass
# TARGET	ip6040E.root.6040Epass
