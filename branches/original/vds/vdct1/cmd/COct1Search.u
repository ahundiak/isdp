#include "VDppl.h"
#include "VDobj.h"
#include "VDct1.h"
//extern VDct1SearchForNodeInTree();


TGRid setID;
TGRid nodeID;
TGRid treeID;

TVDctBaseInfo setInfo;
TVDctBaseInfo nodeInfo;
TVDctNodeType nodeType;

TVDfld fld;

#if 0
  // Set some attributes
  fld.type = VDFLD_TYPE_TXT;
  strcpy(fld.name,"tpart_ops_mino");
  strcpy(fld.val.txt,mino);
  // vdcol$UpdAttrs(objID = &partID, cnt = 1, fld = &fld);
#endif

main()
{
  // Say hi
  printf("--------------------------\n");
  
  // Locate tree
  strcpy(setInfo.setType,"PARTS");
  strcpy(setInfo.setName,"OPS");
  
  VDct1FindSetByName(&setInfo,&setID,&treeID);
  if (treeID.objid == NULL_OBJID) {
    printf("*** Set not found\n");
    goto wrapup;
  }
  // vdobj$Print(objID = &treeID);
  
  // Find a part
  strcpy(fld.name,"tpart_ops_mino");
  strcpy(fld.val.txt,"700023047xxx");
  strcpy(fld.val.txt,"700023067");
  strcpy(nodeType,"PART");

  VDct1SearchForNodeInTree(&treeID,nodeType,&fld,1,&nodeID);
  if (nodeID.objid == NULL_OBJID) {
    printf("*** %s not found\n",fld.val.txt);
    goto wrapup;
  }
  printf("MINO %s, ",fld.val.txt);
  vdcol$GetAttr(objID = &nodeID, name = "tpart_ops_desc", fld = &fld);
  printf("DESC %s\n",fld.val.txt);
  
  // Done
wrapup:
  return 1;
}






