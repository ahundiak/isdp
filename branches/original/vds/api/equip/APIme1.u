/***************************************************************************
 * I/VDS
 *
 * File:        api/equip/APIme1.u
 *
 * Description:
 *		
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      10/29/96        i-paris         creation date
 *
 ***************************************************************************/

#include	<stdio.h>
#include	"OMprimitives.h"
#include	"cieveryone.h"
#include	"cimacros.h"
#include	"AS_status.h"
#include	"growner.h"

#include	"vdAPIequips.h"

main () {

	IGRlong		sts, msg, cnt;
	IGRint		i, rsp, nTpl, nDyn;
struct	VDcollector	*Occ, *Tpl, *Dyn;
	IGRdouble	pnt[3], val;

	/* Initialize */
	Occ = NULL;
	Tpl = NULL;
	Dyn = NULL;

	/* Get <desk_000> descriptor */
	sts = vd$collectorConstruct ( msg = &msg, Num = 1, Col = &Occ );
        as$status ( sts    = sts,
                    msg    = "vd$collectorConstruct()",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );
        sts = vd$collectorSetRow ( msg = &msg,
				   idx = 0,
                                   Col = Occ,
                                   Txt = "desk_000" );
        as$status ( sts    = sts,
                    msg    = "vd$collectorSetRow(Txt 0)",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );
	sts = vd$getEqpOccCollector ( msg    = &msg,
				      OccCol = Occ,
				      TplNum = &nTpl,
				      TplCol = &Tpl,
				      DynNum = &nDyn,
				      DynCol = &Dyn );
        as$status ( sts    = sts,
                    msg    = "vd$getEqpOccCollector()",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

	/* Create CS */
	pnt[0] = 100.0;
	pnt[1] = 150.0;
	pnt[2] =  80.0;
	sts = vd$createCoordinateSystem ( msg	= &msg,
					  Cpnt  = pnt,
					  Wname = VD_WIN_TOP_NAM,
					  name  = "CS2" );
        as$status ( sts    = sts,
                    msg    = "vd$createCoordinateSystem()",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

	/* Set CS2 in templates */
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 2,
				   Col = Tpl,
				   Txt = "CS2" );
        as$status ( sts    = sts,
                    msg    = "vd$collectorSetRow(Tpl 2)",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

	/* Change 2nd dynamic attribute */
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 1,
				   Col = Dyn,
				   Txt = "CBA" );
        as$status ( sts    = sts,
                    msg    = "vd$collectorSetRow(Dyn 1)",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

	/* Change 8th dynamic attribute */
	val = 666.0;
	sts = vd$collectorSetRow ( msg = &msg,
				   idx = 7,
				   Col = Dyn,
				   Val = &val );
        as$status ( sts    = sts,
                    msg    = "vd$collectorSetRow(Dyn 7)",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

vd$collectorPrint ( Num = nTpl, Col = Tpl, msg = "Templates :" );
vd$collectorPrint ( Num = nDyn, Col = Dyn, msg = "Attributes:" );

	/* Modify equipment occurence */
	sts = vd$modify_equip ( msg    = &msg,
				OccCol = Occ,
				TplNum = nTpl,
				TplCol = Tpl,
				DynNum = nDyn,
				DynCol = Dyn );
        as$status ( sts    = sts,
                    msg    = "vd$modify_equip()",
		    test   = (!(sts & 0x00000001 & msg)),
                    action = GOTO_VALUE,
                    value  = wrapup );

wrapup:
	vd$collectorFree (Col =  Occ);
	vd$collectorFree (Col =  Tpl);
	vd$collectorFree (Col =  Dyn);
	return (sts);
}
