/***************************************************************************
 * I/VDS
 *
 * File:        api/APIcfs3.u
 *
 * Description:
 *		Create a Frame System. 
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *                      i-paris         creation date
 *
 ***************************************************************************/

#include	<stdio.h>
#include	"cieveryone.h"
#include	"cimacros.h"
#include	"growner.h"
#include	"grmacros.h"

#include	"smAPImacros.h"

main() {

	IGRlong		sts, msg;
	struct	GRid	coordSystem;
	IGRint		response;
	IGRint		first[1], last[1], layer[1];
	IGRdouble	between[1], reinfval;
	struct	GRid	frameSystem;

	/* Initialize */
	frameSystem.objid = NULL_OBJID;

	/* Locate a coodinate system */
	sts = ci$locate ( prompt	= "Locate a coordinate system",
			  response	= &response,
			  obj		= &coordSystem.objid,
			  osnum		= &coordSystem.osnum );
	if (! (sts & 0x00000001) )	return 0;

	/* Create frame system (unit example) */
	printf( "sm$create_frame_system(unit example)\n" );
	reinfval	= 10.0;
	first[0]	= 0;
	last[0]		= 20;
	between[0]	= 1000.0;
	layer[0]	= 1;
	sts =
	sm$create_frame_system ( msg		= &msg,
				 csId		= &coordSystem,
				 reinfSize	= SM_FS_Ems,
				 reinfValue	= &reinfval,
				 distanceUnit	= "in",
				 sectionNumber  = 1,
                                 frNumber       = first,
                                 toNumber       = last,
                                 spacing        = between,
                                 layerOffset    = layer,
				 reinforce	= "[0-20,3]",
				 frameSystemId  = &frameSystem );
	if ( sts & 0x00000001 & msg ) {
printf( "sm$create_frame_system(unit example) creates [%d|%d]\n",
	frameSystem.osnum, frameSystem.objid );
	}
	else
printf( "sm$create_frame_system(unit example) returns msg=%d\n", msg );

}
