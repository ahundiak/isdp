/* $Id: COCompOut.u,v 1.1.1.1 2001/01/04 21:07:36 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/smppl / COCompOut.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COCompOut.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:36  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

#include <stdio.h>
#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "growner.h"
#include "nddef.h"
#include "macro.h"
#include "ACattrib.h"
#include "ACrg_collect.h"
#include "emsmass.h"
#include "asbox.h"
#include "AS_status.h"
#include "msdef.h"
#include "SMdef.h"
#include "SMmacros.h"

#include "SMcomp_def.h"


IGRchar             txt[40];
struct GRmd_env	    MOD_ENV;
IGRchar		    mes_f[80];
int 		    i, msg, sts;
FILE                *p_file;
IGRshort            options, out_units;
struct GRid         comp;

extern free(), printf();
extern ASmake_source_from_env(), ASsuper_construct();


main()
{
 strcpy(mes_f,"Compartment Report(write into comp.rpt)");
 message(mes_f);

 ASsuper_construct();

 p_file = fopen("comp.rpt","w");
 if(p_file == NULL)
  {
   printf("Unable to open the file in write mode\n");
   exit;
  }

 while(1)
  {
   message(mes_f);

     if(!ci$locate( prompt       = "Identify a compartment",
		    classes      = "SMcomp",
                    properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                    owner_action = LC_RIGID_COMP
                                    | LC_RIGID_OWNER | LC_FLEX_COMP
                                    | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            obj          = &comp.objid,
                    osnum        = &comp.osnum,
		    md_env       = &MOD_ENV ) ) break;

  options   = SM_SHORT_RPT | SM_ASCII_FILE;
  out_units = 0;
  sts = ci$send(msg = message SMmgr.SMFillRpFile(&msg, NULL, p_file,
                   options, FALSE, out_units, &MOD_ENV, NULL),
		        targetid = comp.objid,
			targetos = comp.osnum);

  fflush(p_file);
  fclose(p_file);

  if(!(sts & 1)) 
   {
    printf("ERROR .....\n");
    continue;    
   }

  if(msg != MSSUCC)
   {
    printf("PROBLEM .....\n");
    continue;    
   }
   
  printf("Bravo mon gars\n");
 }
}

wakeup(){
	message(mes_f);
}

