/* $Id: COPPLmacros.u,v 1.1.1.1 2001/01/04 21:07:29 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/etc/pplmacros / COPPLmacros.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COPPLmacros.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:29  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	VDS 2.1 - Generate the PPMmacro library
	Revision date : 92/10/15

	History :
	92/08/06	Macro boolean is obsolete for boolean operations
	92/08/13	Get rid of antedeluvian macros
	92/08/18	Add macro definition for extelm
	92/10/15	Add macros comp_flg, comp_web, crv_corner and 
			crv_extract
 */


#include "ciminimum.h"
#include "OMminimum.h"
#include "cimacros.h"
#include "cievent.h"
#include "acdef.h"
#include "acmacros.h"

extern ACconstruct_path() ;
extern ACconstruct_wd()   ;
extern ACconstruct_save() ;

void ExecLoad( MacNam )
char *MacNam ;
{
char mesg[80] ;

  strcpy(mesg,"loading ") ;
  strcat(mesg,MacNam) ;
  docmd(MacNam) 
    { }
  write(mesg,"\n") ;
  return ;	
}

main()
{
ac$construct_wd(  mode = AC_SET, name = "PPMmacro") ;

ExecLoad("ci=area");
ExecLoad("ci=arc_3pts");
ExecLoad("ci=arc_c2pts");
ExecLoad("ci=area_prop");

// ExecLoad("ci=boolean");
// ExecLoad("ci=b_chf2p");
// ExecLoad("ci=b_chfx");
// ExecLoad("ci=b_lamage2p");
// ExecLoad("ci=b_lamagex");
// ExecLoad("ci=b_trou2p");
// ExecLoad("ci=b_troux");
// ExecLoad("ci=chf");

ExecLoad("ci=cir_3pts");
ExecLoad("ci=cir_c2pts");

// ExecLoad("ci=cir_incr");

ExecLoad("ci=collision");
ExecLoad("ci=comp_flg");
ExecLoad("ci=comp_web");
ExecLoad("ci=conic");
ExecLoad("ci=copy");
// ExecLoad("ci=cpymac");
ExecLoad("ci=cpyalong");
ExecLoad("ci=cpymap");
ExecLoad("ci=cpymir");
ExecLoad("ci=cpymov");
ExecLoad("ci=cpyrot");
ExecLoad("ci=cpyscl");
ExecLoad("ci=crv_bend");
ExecLoad("ci=crv_blend");
// ExecLoad("ci=crv_blendc");
ExecLoad("ci=crv_comp");
ExecLoad("ci=crv_corner");
// ExecLoad("ci=crv_dfc");
ExecLoad("ci=crv_dfc_l");
ExecLoad("ci=crv_dfc_p");
ExecLoad("ci=crv_ev_rad");
ExecLoad("ci=crv_extract");
ExecLoad("ci=crv_fillet");
ExecLoad("ci=crv_helix");
ExecLoad("ci=crv_iso");
ExecLoad("ci=crv_lsq_l");
ExecLoad("ci=crv_merge");
ExecLoad("ci=crv_offset");
ExecLoad("ci=crv_parab");
ExecLoad("ci=crv_pdel");
ExecLoad("ci=crv_pole_p");
ExecLoad("ci=crv_pro_n");
ExecLoad("ci=crv_pro_v");
ExecLoad("ci=crv_prtlin");
ExecLoad("ci=crv_split");
ExecLoad("ci=crv_spring");
// ExecLoad("ci=cvplane");
ExecLoad("ci=ell_arc_c");
ExecLoad("ci=ell_axis");
ExecLoad("ci=ell_cent");
ExecLoad("ci=ext_bound");
ExecLoad("ci=extelm");
ExecLoad("ci=format_param"); /* needed ??? */
ExecLoad("ci=imp_bd");
ExecLoad("ci=int_sf_pl");
ExecLoad("ci=int_2_elem");
ExecLoad("ci=int_2_pla");
ExecLoad("ci=int_3_pla");
ExecLoad("ci=int_4_pla");
// ExecLoad("ci=lamage");
ExecLoad("ci=leng_prop");
// ExecLoad("ci=lift");
ExecLoad("ci=mass_prop");
// ExecLoad("ci=mkface");
// ExecLoad("ci=move_x");
// ExecLoad("ci=nav_hel");
ExecLoad("ci=nboolean");
ExecLoad("ci=nors");
// ExecLoad("ci=parab1");
ExecLoad("ci=pardel");
ExecLoad("ci=pla_bissec");
ExecLoad("ci=pla_encomp");
ExecLoad("ci=pla_ntocrv");
ExecLoad("ci=pla_offext");
ExecLoad("ci=pla_para");
ExecLoad("ci=pla_rect");
ExecLoad("ci=pla_tgt");
ExecLoad("ci=poly_nside");
ExecLoad("ci=pnt_pro_v");
ExecLoad("ci=pnts");
ExecLoad("ci=pt_pos");
ExecLoad("ci=ref_bypla");
ExecLoad("ci=ref_by3pla");
ExecLoad("ci=rev_normal");
ExecLoad("ci=scal_pro_v");
ExecLoad("ci=sol_box");
ExecLoad("ci=sol_bx2pts");
ExecLoad("ci=sol_cap");
ExecLoad("ci=sol_cone");
ExecLoad("ci=sol_cyl");
ExecLoad("ci=sol_draft");
ExecLoad("ci=sol_offset");
ExecLoad("ci=sol_pro");
ExecLoad("ci=sol_rev");
ExecLoad("ci=sol_skin");
ExecLoad("ci=sol_skin2");
ExecLoad("ci=sol_sphere");
ExecLoad("ci=sol_torus");
ExecLoad("ci=sol_tube");
ExecLoad("ci=srf_2blend");
ExecLoad("ci=srf_4bdry");
ExecLoad("ci=srf_Hmiter");
ExecLoad("ci=srf_bend");
ExecLoad("ci=srf_comp");
ExecLoad("ci=srf_cone");
ExecLoad("ci=srf_cyl");
ExecLoad("ci=srf_dcyl");
ExecLoad("ci=srf_dfc");
ExecLoad("ci=srf_ext");
ExecLoad("ci=srf_fillet");
ExecLoad("ci=srf_mblend");
// ExecLoad("ci=srf_merge");
ExecLoad("ci=srf_miter");
ExecLoad("ci=srf_netwrk");
ExecLoad("ci=srf_offext");
ExecLoad("ci=srf_offset");
ExecLoad("ci=srf_part");
// ExecLoad("ci=srf_plane");
ExecLoad("ci=srf_pro");
ExecLoad("ci=srf_rev");
ExecLoad("ci=srf_ruled");
ExecLoad("ci=srf_skin");
ExecLoad("ci=srf_skin2");
ExecLoad("ci=srf_skin_n");
ExecLoad("ci=srf_sphere");
ExecLoad("ci=srf_torus");
ExecLoad("ci=srf_tube");
ExecLoad("ci=string");
// ExecLoad("ci=swap_nor");
// ExecLoad("ci=format_text");
ExecLoad("ci=table");
// ExecLoad("ci=trou");
ExecLoad("ci=warea");
ExecLoad("ci=VDdist_cpy");
ExecLoad("ci=VDSmass");
ExecLoad("ci=lstn2cvs");
ExecLoad("ci=prbtn2cvs");

ac$save_wd () ;
return 1 ;
}

