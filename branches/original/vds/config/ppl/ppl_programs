== VDS

% ACchg_ups "Change Upscan definition"
# This command is created to change the upscan type after the
# definition has been defined for a macro. 
# Whenevr a macro is created, which having an other macro type as dependend
# the name is corrsponding the used object. 
# As example: In I/STRUCT, you can have selected a VSsubPlate; Which this
# command you can change the name to a general name to allow to select all
# plate types (--> VS*Plate)
#

% ACget_mac_id "Print macro definition id/osnum"
# When the user is looking for the location or definition of a macro, by
# entering the macro name.
#

% ACget_obj_id "Print object id/osnum and classname"
# Selecting an object in the model, it will return the class and id/os.
#

% ACren_temp "Edit macro template in definition"
# This command is used to copy the macro definition from a macro
# library to another.
#

% add_reps "Add representation".
# A command which allow you to add new representations with their type
# and values.
#

% adjustpoles "Adjust Poles to surface
# This command allows you to adjust the poles of a selectable surface.
#

% aignpoles "Align Surfaces"
# This command allows you to align surfaces.

% AStoggle "Assoc Toggle"
# This toggles enable the user to activite the steps within the
# computation of a macro. All internal steps will be shown with
# the corresponding inputs and outputs.
# 
# Calling the program again, will toggle the process off.


% COActCs "Define Active Ship Coordinate System"
# Define the active ship coordinate system.
#

% COActFrm "Set Active Frame"
# The routine is used to define the active frame system for ...
#

% COall_comp "Force recompute of compartments"
# OBSOLETE
# Program used to compile the compartment objects.
#

% COatMgrDel "Delete Assembly Manager"
# Routine to delete the Assembly Manager objects.
#

% COatMgrShow "Show the ID/OS of the Assembly Manager object"
# Debug functionality.
#

% COatPost "Post the Assembly Data"
# Test routine to post assembly data to the database.
#

% COatStd "Test Plate standard Piece Mark"
# Testing routine to review the plates for the production process.
#

% CObatData "ci=CObatData - Drawing review"
# This command allows you to check the stored information from the 
# drawing control object.
#

% COchg_ups "Change Macro type process"
# Macro Functionality
# This command is created to change the upscan type after the
# definition has been defined for a macro. 
# Whenevr a macro is created, which having an other macro type as dependend
# the name is corrsponding the used object. 
# As example: In I/STRUCT, you can have selected a VSsubPlate; Which this
# command you can change the name to a general name to allow to select all
# plate types (--> VS*Plate)
#

% COChgState "Change object State for Space Management objects".
# This is an internal routine used to change the compute status for
# objects for the space management process.
#

% COCleanSurf "Clean Surface"
# Routine to let you to clean the surface geometry.
#

% COCompRpt "Compartment report"
# Routine to create a report file in 'comp.rpt'.
#

% COdbgFlags "Z Debug Flags
# Development/Review
# Command to enable/disable the processing information during a compute
# process of ISDP functionality.
#

% COdrop_mac "Drop Macros"
# Maro functionality
# Routines which allow the user to drop the macro occurrence from a 
# select set of objects.
#

% COdrw_orient "Place Orientation object"
# Drawing Output
# Command which allow you to construct a symbol/cell which reflects the
# ship orientation related to a given drawing.
#

% COdrwfrm_iso "ci=COdrwfrm_iso Drawings"
# Drawing output
# A command which which extract frame systems and/or single frame data
# into a isometric drawing view.
#

% COdw "Dead Weight creation"
# Space management: Define the Dead weight.
#

% COerr_symb "OBSOLETE: Error Symbology"
# Old PPL program.

% COExSrfRg "(Test) Extent surface within range"
# Test program to review the intermediar result of an extended surface.
#

% COFrameRep "Frame System Report"
# Space Management
# Command to construct the report from the frame system.
#

% COGetCompEr "Get Recompute Error Component"
# Space Management
# Routine to find the components which constructed with errors.
#

% COGetSfEr "Get Seasafe Extraction Error Component"
# Space Management
# Routine to extract the needed information from the saesafe extraction
# errors ...
#

% COgrp "Group creation"
# Space Management.
# Routine to create a report from the defined groups.
#

% COinfo "OBSELETE: PPL information"

% COlayers "Laod Layer Names"
# Routine to put the names of the layers in an ASCII file
#

% COlist "List consumed object"
# Development
# Small program to check if objects is consumed.
#

% COListBlobs "TEST: Query for Blobs"
# Development
# Routine to review the performance of a BLOB data process.
#

% COlistx "TEST: List of consumed objects"
# Development
# Small program to check if objects is consumed.
#

% COlisty "TEST: List of consumed objects & recompute"
# Development
# Small progrom to check the consumed objects and force recompute. This
# is needed to check if the objects behaviour (display, locate) are set
# properly.
#

% COname_base "Name the BASE coordsystem"
# This program check if there is still a valid BaseCoordsys at the 
# default location of the system.
#

% COneatBSpl "Place new neat_plateBS macro"
# Geometry
# Test routine to define the new neat plate geometry macro.
#

% COoffsetData "Loft Book functionality"
# HULL Division
# Routine defined to create the expected lofting report outputs for the
# LPD project.

% COpdmGen "Dump PDM data into XML"
# functionality to dump the PDM data layout into a XML format for review.
#

% COpdmSearch "Search PDM data File"
# After calling the ci=COpdmGen, the user can review the output file, using
# this command.

COpdmUpdACfg.e
COpdmUpdFile.e
COpdmUtil.e

% COPPLinfo "Review PPL Programs"
# Program which handles current command interface.
#

% COqryPDM "Query PDM data into XML format"
# Functionality to extract data from PDM and put into XML format.
#

% COrefOff "Reference File Locate Off"
# Command to toggle off the locate of objects in the reference files. This
# will allows the user to increase the locate performance.
# Once activated, the locate will (include fence) should work against this.
# 

% COrefOn "Reference File Locate On"
# Command to toggle on the locate of objects in the reference files.
# 

% CORevAttr "Review Attributes"
# Command to view all the attributes of the objects, in respect to all
# possible references (modeling, production, external, etc..)
#

% COReview "Review Reference File Libraries"
# Thsi command will check all the reference files and see what libraries
# were attached to them. The form interface allows the user to attach the 
# libraries to the active design file.
#

% COrmVolSet "Delete Drawing/Section set"
# Command used to delete all drawings or sections, part of one set.
#

% COset_trace "Trace Flags"
# Development
# Allows to activate the processing trace flags.

% COsrchPDM "Seach PDM ASCII file command"
# PDM related dump.
#

% COTogDspOff "Toggle Display List"
# Routine to toggle quickly on/off the display list.
#

COTrmSurf.e
COtxt_on_crv.e

% COunwPlate "Unwrap Plate command"
# Test command !!
#

% COupd_comp "Update Compartment from DB"
# Command to update the compartments in the file based on the new
# database table information.
#

% COUpdEquip "Update Equipment from Database"
# Command to update the equipment with the latest database information.
#

% COWrLayers "Write Layers to ASCII file"
# command to extract the layer information from a design file and put
# this into an ASCII file. The 'Edit Layers' commands need to be running
# when calling.
#

% COz_act "Database test command"
# Command used to retrieve some Database information.


% COz_BugRoot "Delete Root Objects ..."
# Cleaning Functionality
# Routine written to clean the file with has some invalid objects of
# class Root defined.
#

% COz_chanObj "Check Objects and their Channels"
# This command is designed to cleanup corrupted files with table data.
# We are tracking the channels in the file and see if they are all still valid.
# Cleaning the file may avoid a crash of the system and permits user to 
# delete some table components.
#

% COz_checkBAD "Check BAD macros and Libraries
# Macro functionality
# This routine will check if all needed information for macro still exist.
# When macro was constructed in the library, the configuration was invalid 
# and process entries to no longer understand their functional tasks and as
# a result the macros do fail in the model.
# This is a report only.
#

% COz_checkLib "Check Macros and Libraries"
# Check macro library attachment in file by checking the ACtmp_def object
# in each design file. Also we can check for nested macros of equipment. 
#

% COz_chkConst "Check for Outdated construction macros".
# Functionality to check if macros were outdated in respect to their
# definition from the library. Command allows to review these macros 
# and delete or update the existing occurences.
#

% COz_chkprt "Check for Pretends Objects"
# Functionality defined to check the ACpretends and check if the information
# within the pretend is invalid to respect to the 'child' component. This
# testing is needed when users have changed the macro definition and 
# down-stream functionality is still working with the old definition.
#

% COz_chkSym "Check for Outdated Symbol Macros"
# Functionality to check if symbol macros (cached in file) are outdated in
# respect to the definition in the library. The routine permits us to delete,
# remove and update the occurrences.
#

% COz_cleanRT "OBSOLETE: Clean RTREE"
# Old program to clean the range tree of the file.
#

% COz_CompFile "Compute objects in Active file"
# Functionality to compute either all the objects in the file or only the
# objects related to a specific definition (macro).
# Examples of compute:
# ci=COz_CompFile", all macros in the design file.
# ci=COz_CompFile VSsrcPlate VS*Beam", all source plates and all beams.
# ci=COz_CompFile wt_col_tee", all wt_col_tee macros
# ci=COz_CompFile nt*", all macros, whose name starts with nt.

% COz_CompObj "z compute object"
# Functionlality to compute one object in the file. (official command).

% COz_consume "Check Consumed Parents of pretends"
# This functionality allows the user to check of the objects in the active
# file are connected to consumed parents (stuctural modeling issue).
# The information is reported through the validate command.
#

% COz_copyLo "Copy table layout tyoes to active file"
# Drawing functionality
# This routine will allow you to copy the table layout/summerization criteria,
# sort criteria from a specified reference file into an active design file.
#

% COz_ctx "Check Context information"
# Routine to check the context information of a file.
#

% COz_cvonsf "Test if curve is on surface
# Geometry routine to check if a created curve is on a given surface.
#

% COz_DelBlobs "Delete Blobs"
# Internal routine to clean process of Blobs
#

% COz_deldrw3d "Delete Section-cut objects"
# internal Routine to delete all the section-cut (VDdrw3d) objects from
# the design file.
#

% COz_delref "Delete Reference File"
# Command to remove a given from the system.
#

% COz_DelTag "Delete OMtag objects"
# command to resolve the problem with tags in the design file. This was
# a relative file specific issue.
#

% COz_dispattr "z Display Attributes"
# Debug command to view the properties of components (outfitting macro)
#

% COz_DispId "z Display Identifier"
# Given the objects identification/object spacenumber give some information
# on the object & highlight the object in the model.
#

% COz_DrwEnv "Drawing Enveloppe information"
# Drawing support command to highlight the graphical object which are 
# part of the envelope process of the macros.
#

% COz_drwSetup "Get drawing Setup file"
# Small command which allows to get the name of the setup file related to
# existing drawing. 
#

% COz_evalExp "Expression Test command"
# Routine to allow the user to test the result of the expression. This
# allows the end user to check if a conditional process in the stage the
# select set will be as expected.
#

% COz_evalsurf "Evaluate Surface Geometry"
# Routine to check information related to the surface. (Distance check).
#

% COz_exit "Exit Design file"
# Development command to quickly exit the design file.
#

% COz_exp "Test command for expression"
# Development test command to check an expression object.
#

% COz_ExQry "Query Control routine"
# This routine has been written so that the user can change the default
# filter process for the "Query command". This is mainly done to give the
# user access to the 'dangle' objects for specific processing.
#

% COz_FileDate "Update Reference File Form"
# Command to check the status of the design file and the reference file.
# The check review if reference files and libraries has been updated more
# recently then the active design file.
#

% COz_fix01 "OBSOLETE Rtree & Context issue"

% COz_fixColl "Fix corrupted ACrg_collector in design file"
# functionality to cleanup the file with invalid ACrg_collector objects
# in the design file. This problem was detected as part of the table and
# drawing construction process.
#

% COz_FixRT "OBSOLETE Clean Rtree"

% COz_fixrtree "OBSOLETE Clean Rtree"

% COz_FixTags "Fix Tag objects"
# Related to a specific file problem, this routine will check the tag 
# status of the objects and then add the tag is needed.
#

% COz_Frame "Modify Drawing Frame".
# Functionality to change the expected print format for the reference
# planes.

% COz_GetSch "Get Schema name"

% COz_iso "Delete LCcmd_iso objects"
# The locate process is leaving to many LCcmd_iso objects within the 
# system. These objects may cause problems when performing major locate 
# processing (invalid owner channel).
#

% COz_like "OBSOLETE Compare Like process"
# Testing command to review the data of two objects.

% COz_macObj "OBSOLETE Remove symbol macro cache"
# Functionality to clean the macro definition.
#

% COz_macro "Check INVALID macros in file"
# Command to check of macro do miss their definition. 
#

% COz_osnames "List objects space information"
# print the object space information
#

% COz_pnav "z Navigate Graph"
# Development version of the navigate command.
#

% COz_PrtTog "z Part toggle"
# Toggle select on/off of part object for the locate process.
#

% COz_reduce "Reduce Range of Section-cuts object"
# routine to reduce the range of existing section-cut objects (VDdrw3d)
#

% COz_reffiles "Review reference file connections"
# Functionality to output the relations (pretend/source) between the 
# objects in the active file and the reference file. Depending
# on the option, you will get detailed information.
#

% COz_RefMgr "Check Reference File Maneger Obejct"
# Routine to check the stability of the reference file manager object.
# Functionality is written to review some design files with had some
# errors.
#
% COz_repAttr "Report Attribute Information"
# Routine written, so that the user can test the attributes from the 
# selected object. This routine can be used to check where certain 
# production procedures do have problems (crashes...)
#

% COz_rvRefLib "Review Macro Library Attachments (act/ref)
# Test command to review the libraries for active/reference files.
#

% COz_scan01 "Debug Pretend/Source objects"
# Test command to get list of Acpretends & ASsourcein.
#

% COz_ScanCtx "Print GRcontext information"
# Routine to print out the information related to the GRcontext objects.
# By times, the matrix is invalid and geometry can get computed badly.
#

% COz_ShowCol "Show Object Collector Attributes"
# Routine to print the contents of the attributes inside a collector.
#

% COz_ShowId "z Show Identifier"
# Command to show the id/os object.
#

% COz_siblings "Show Siblings objects"
# Test command to show which object a selected object consider to be 
# a sibling. Information is used within outfitting and for interference
# processing.
#

% COz_space "Objects Space Files"
# Functionality to print the names of all the object spaces and the 
# corresponding names and paths (important for libraries).
#

% COz_tag "Print Object Tag information"
# Routine to check the tag information of an selected object.
#

% COz_tagcons "List of OMTagcon object"
# debug routine.
#

% COz_TogRule "Toggle Rule Line display"
# Routine to toggle the display for selected or all windows.
#

% COz_undodel "Undo Delete Flag"
# Routine to set the undelete flag to OFF.
#

% COz_update "Check Reference File Update"
# routine to trigger the compute of the reference file update (embedded
# inside the startup process of the file).
#

% COz_userPath "Delete User Defined Path Objects"
# Routine to delete the user_path directory and the objects within.
# This command was requested when the internal information was invalid
# manipulated.
#
 
% COz_UsrAtt "Print User Attributes"
# Routine to show the user attributes of a selected object.
#

% moff "Memory tracing off"

% mtrace "Memory tracing process"

% toggle "Toggle on Intersection routines"
# Debug routine.
#

% VDclasslist "Show Design File ClassList"
# Function which shows the detailed information about all objects
# in the design file.
#

VDclean_crv.e
VDclean_exp.e
VDclean_nci.e
VDclean_ndn.e
VDdist_cpy.e
VDdrwTblUp.e

VDinterf_cvs.e
VDlocateACps.e
VDlocateMacs.e
VDLogDb.e
VDmanipref.e
VDpdmtest.e
VDPlSt.e
VDpostconn.e
VDreadjnl.e
VDsaDelCache.e
VDsaReview.e

== STRUCT

% COcomp_chk "Check Post Placement Plates"
# Functionality to check invalid Chick plates.
#

COdelEdges.e
COefp_beam.e
COefp_beam2d.e
COefp_ver.e
COrem_ops.e
COrevStrObj.e
COverBevel.e
COVSapps.e

% COz_fixAxis "Fix corrupted Plates/Beams"
# routine to check if the attributes were valid.
#

COz_fixStr.e
COz_InvStrEl.e
COz_macroS.e
COz_pcmk.e

% COz_pppThick "Program to check invalid thickness"
# Checking if the post placement has invalid construction on the plates.
#
 
COz_rtAxis.e
COz_selector.e
COz_UnPro.e
COz_valPC.e
VSdebug.e
VSedgToBvl.e

== LOFT

% COsrf_tran "Place Pieve Transform Info"
# Routine in which the user will select some plates and then permits
# review the production related constraints.
#



