/* $Id: COsrf_ruled.u,v 1.1.1.1 2001/01/04 21:07:21 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/surface/cmd / COsrf_ruled.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsrf_ruled.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:21  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.2  1996/06/12  12:04:58  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_ruled.u for:  by v240_int for vds.240
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	VDS 2.1 - PPM macro library
	Revision date : 92/11/16
 */

#include "ciminimum.h"
#include "cimacros.h"
#include "ciexec.h"
#include "msdef.h"

GRobj 			ci_mac_bib_FileId;
IGRint			resp_exp;

struct GRmd_env		MOD_ENV;
struct GRid 		TEMP[3];
GRobj 			MAC1;
IGRint             	num_ent;
IGRint 			suc;
IGRchar            	txt[20], loc_mes[80],loc_prompt[80], exp_prompt[80];
IGRdouble		exp_default;

extern ASmake_source_from_env();

main()
{

 while(1)
 {

step0:
     resp_exp = 0;
     status("Reset to create expression for developable option");
exp1:

   num_ent = 0;

   while(num_ent != 2)
   {
     	strcpy(txt,"Identify curve ");
     	strcat(txt,itoa(num_ent + 1));

        ci$locate(     prompt       = txt,
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP
                                      | LC_RIGID_OWNER | LC_FLEX_COMP
                                      | LC_FLEX_OWNER  | LC_REF_OBJECTS,
		       classes      = "GRcurve",
	               obj          = &(TEMP[num_ent].objid),
                       osnum        = &(TEMP[num_ent].osnum),
		       response     = &M_response,
		       md_env       = &MOD_ENV  );

	status("");
	if( (num_ent == 0) && (M_response == EX_RJT_MOVEON) && (resp_exp == 0)){
		resp_exp = 1;
		ask_expressions();
		goto exp1;
	}
	else if( (num_ent == 0) && (M_response == EX_DATA)   ){
		if(  resp_exp == 0 ) cre_default_expressions();
	   	ASmake_source_from_env( &TEMP[num_ent],
				        &MOD_ENV,&TEMP[num_ent]);	
	}
	else if( M_response == EX_BACK_UP ){ 
		resp_exp = 1;
		ask_expressions();
		goto exp1;
	}
	else if(  (num_ent == 1) && (M_response == EX_DATA)   ){
	   	ASmake_source_from_env( &TEMP[num_ent],
				        &MOD_ENV,&TEMP[num_ent]);	
	}
        else  exit;

        num_ent = num_ent + 1;
   }


   if( num_ent != 2 ) exit;

   MAC1 = NULL_OBJID;

   ci$get_module_info(md_env = &MOD_ENV);

   ci$send(msg      = message nci_macro.init( &suc,
					     0,
					     "srf_ruled",
					     3,
					     TEMP,
					     NULL,
					     &MOD_ENV ),
	   targetid = MAC1,
           targetos = MOD_ENV.md_id.osnum );

   if( suc == 0 ){
		write("placement of nci_macro \"srf_ruled\" failed\n");
		status("placement of nci_macro \"srf_ruled\" failed");
      		ci$send(msg = message Root.delete(0),
	      		targetid = MAC1,
	      		targetos = MOD_ENV.md_id.osnum );
   }

     status("Reset to create expression for developable option");
 }
}

/*==========================================================================*/
init(){

   	message(loc_mes);   strcpy(loc_mes,"<Assoc> Place Ruled Surface");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;

}

wakeup(){
	message(loc_mes);
}

ask_expressions(){
       strcpy(loc_prompt,"enter expression for developable option");
       strcpy(exp_prompt,"enter value ( developable = 1 / default = 0 )");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[2];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) exit;

}

cre_default_expressions(){

         push (char *)&suc, (IGRdouble)1.0, (char *)&TEMP[2];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

}
/*==========================================================================*/
