/* $Id: COsrf_miter.u,v 1.1.1.1 2001/01/04 21:07:21 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/surface/cmd / COsrf_miter.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COsrf_miter.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:21  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.3  1998/01/02  20:07:06  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_miter.u for:  by yzhu for vds
#
# Revision 1.2  1998/01/02  19:39:42  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_miter.u for:  by yzhu for vds
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.2  1997/01/02  21:46:06  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_miter.u for:  by mdong for vds.241
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.3  1996/06/07  21:35:36  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_miter.u for:  by sljenks for vds.240
#
# Revision 1.2  1996/05/30  21:34:22  pinnacle
# Replaced: cimacros/surface/cmd/COsrf_miter.u for:  by v240_int for vds.240
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *	06/07/96	ah		Limit number of miters to 2 or 3.
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 			ci_mac_bib_FileId;

struct GRmd_env		MOD_ENV;
struct GRid 		TEMP[5];
GRobj 			MAC1;
int 			suc;
int			num_point;
char			loc_mes[80],loc_prompt[80], exp_prompt[80],txt[80];
double			exp_default,low_rng,hig_rng;

extern ASmake_source_from_env();
extern int printf();

main()
{
   IGRdouble n_mit;

   while(1){

step1:
       strcpy(loc_prompt,"Enter expression for elbow diameter");
       strcpy(exp_prompt,"Enter elbow diameter");
       exp_default = 1.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
	    (char *)&TEMP[0];
       ci$run(  file_id  = &ci_mac_bib_FileId,
 	        entry    = "loc_exp" );
       if( suc != 1 ) exit;

       push (char *)&suc, (char *)&TEMP[0];
       ci$run(  file_id  = &ci_mac_bib_FileId,
                entry    = "check_exp_gtzero" );

       if (!(suc&1)) goto step1;


step2:
       strcpy(loc_prompt,"Enter expression/number of miter sections (2 or 3)");
       strcpy(exp_prompt,"Enter number of miter sections (2 or 3)");
       exp_default = 2.0;
       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
	    (char *)&TEMP[1];
       ci$run(  file_id  = &ci_mac_bib_FileId,
 	        entry    = "loc_exp" );
       if( suc != 1 ) goto step1;

       // Verify 2 or 3
       ci$send( msg      = message expression.NDgive_value(&n_mit),
                targetid = TEMP[1].objid,
		targetos = TEMP[1].osnum );

       // printf("N_MIT: %.2f\n",n_mit);

       if ((n_mit != 2) && (n_mit != 3))
       {
          status("Number of miter sections must be 2 or 3");
          goto step2;
       }
       for(num_point = 0; num_point < 3; num_point = num_point + 1)
       {
       		strcpy(txt,"Identify ");
		switch(num_point)
		{
			case 0: strcat(txt,"start point"); break;
			case 1: strcat(txt,"mid point");   break;
			case 2: strcat(txt,"end point");   break;
		}

        	if(!ci$locate( prompt       = txt,
	        	       obj          = &(TEMP[num_point+2].objid),
                       	       osnum        = &(TEMP[num_point+2].osnum),
		       	       classes      = "GRpoint",
                               properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
	                       owner_action = LC_RIGID_COMP
                                              | LC_RIGID_OWNER | LC_FLEX_COMP
                                              | LC_FLEX_OWNER  | LC_REF_OBJECTS,
                               md_env     = &MOD_ENV )) break;

		ASmake_source_from_env( &TEMP[num_point+2],
					&MOD_ENV,&TEMP[num_point+2]);	

		status("");
       }

       if( num_point < 3){
		status(" bad number of poles ");
		goto step1;
       }

   		ci$get_module_info(md_env = &MOD_ENV);

      		MAC1 = NULL_OBJID;
      		ci$send(msg = message nci_macro.init( &suc,
						     0,
						     "srf_miter",
						     5,
						     TEMP,
						     NULL,
						     &MOD_ENV ),
	            	targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );

      		if( suc == 0 ){
			write("placement of nci_macro \"srf_miter\" failed\n");
			status("placement of nci_macro \"srf_miter\" failed");
      			ci$send(msg = message Root.delete(0),
				targetid = MAC1,
				targetos = MOD_ENV.md_id.osnum );
      		}
   }

}
/*==========================================================================*/
init(){

        strcpy(loc_mes,"<Assoc> Place Mitered Elbow by Diameter and 3 Points");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;

}

wakeup(){
	message(loc_mes);
}
/*==========================================================================*/

