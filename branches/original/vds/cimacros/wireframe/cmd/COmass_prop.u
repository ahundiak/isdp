/* $Id: COmass_prop.u,v 1.2 2001/07/21 15:41:17 ad Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COmass_prop.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COmass_prop.u,v $
 *	Revision 1.2  2001/07/21 15:41:17  ad
 *	*** empty log message ***
 *	
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.2  1996/04/02  14:33:34  pinnacle
# Replaced: cimacros/wireframe/cmd/COmass_prop.u for:  by kddinov for vds.240
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
 */
   
#include "ciminimum.h"
#include "cimacros.h"
#include "cieveryone.h"
#include "msdef.h"
#include "ciexec.h"

GRobj 		ci_mac_bib_FileId;
IGRint		resp_exp;
struct OM_sd_classlist	classlist;
OMuword			classid[2], solid_cl, surface_cl;


struct GRid 	TEMP[2];

GRobj 		MAC1;
IGRint		suc, num_temp;
IGRchar		loc_mes[80],loc_prompt[80], exp_prompt[80];
double		exp_default;
struct GRmd_env	MOD_ENV;


extern ASmake_source_from_env();

main()
{

   while(1)
  {

step0:
     	resp_exp = 0;
     	status("Reset to create expressions for density");

exp1:

       while(1)
       {
     		ci$locate(  prompt           = "Identify solid",
		   	    eligible_classes = &classlist,
                    		properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                    		owner_action = LC_RIGID_COMP
                                    	       | LC_RIGID_OWNER | LC_FLEX_COMP
                                    	       | LC_FLEX_OWNER  | LC_REF_OBJECTS,
	            		obj          = &(TEMP[1].objid),
                    		osnum        = &(TEMP[1].osnum),
		   		response     = &M_response,
		    		md_env       = &MOD_ENV );

 		status("");
		if( (M_response == EX_RJT_MOVEON) && (resp_exp == 0) ){
			resp_exp = 1;
			ask_expressions();
			goto exp1;
		}
		else if( (M_response == EX_DATA)   ){
			if(  resp_exp == 0 ) cre_default_expressions();
	   		ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1]);	
		}
		else if( M_response == EX_BACK_UP ){ 
			resp_exp = 1;
			ask_expressions();
			goto exp1;
		}
		else exit;

   		MAC1 = NULL_OBJID;
   	        ci$get_module_info(md_env = &MOD_ENV);
   		ci$send(msg = message nci_macro.init(
							&suc,
							0, 
							"mass_prop", 
							(IGRint) 2,
							TEMP,
							NULL,
							&MOD_ENV),
	   		targetid = MAC1,
			targetos = MOD_ENV.md_id.osnum );

  		if( suc == 0 ){
			write("placement of nci_macro \"mass_prop\" failed\n");
			status("placement of nci_macro \"mass_prop\" failed");
			ci$send(msg = message Root.delete(0),
      				targetid = MAC1,
      				targetos = MOD_ENV.md_id.osnum );
  		}

  	}
   }
}

/*==========================================================================*/
init(){

   	strcpy(loc_mes,"<Assoc> Evaluate Mass Properties");

 	ci$load ( file_name = "ci_mac_bib.u",
		  load      = LOAD,
	  	  file_id   = &ci_mac_bib_FileId,
		  stat      = &suc );
	if( suc != CI_S_SUCCESS ) exit;

 	om$get_classid( classname = "EMSsolid",
		 	p_classid = &solid_cl);

/*  TR 179601393 KDD+Ad 4-2-96
 	om$get_classid( classname = "EMSsurface",
		 	p_classid = &surface_cl);
*/

	classid[0] = solid_cl;
	classid[1] = surface_cl;

 	classlist.w_count = 2;
 	classlist.w_flags = OM_CLST_subclass;
 	classlist.p_classes = classid;

}

wakeup(){
	message(loc_mes);
}

ask_expressions(){

       strcpy(loc_prompt,"enter expression density");
       strcpy(exp_prompt,"enter value");
       exp_default = 1.0;

       push (char *)&suc,loc_mes,loc_prompt,exp_prompt,exp_default,
            (char *)&TEMP[0];
       ci$run( file_id   = &ci_mac_bib_FileId,
 	       entry     = "loc_exp" );
       if( suc != 1 ) exit;

}

cre_default_expressions(){

         push (char *)&suc, (IGRdouble)1.0, (char *)&TEMP[0];
         ci$run( file_id = &ci_mac_bib_FileId,
 	         entry   = "CreDefUnExp" );
         if( suc != MSSUCC ) exit;

}
/*==========================================================================*/




