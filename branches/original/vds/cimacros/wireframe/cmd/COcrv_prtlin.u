/* $Id: COcrv_prtlin.u,v 1.1.1.1 2001/01/04 21:07:22 cvs Exp $  */

/* --------------------------------------------------------------------
 * I/VDS
 *
 * File:	vds/cimacros/wireframe/cmd / COcrv_prtlin.u
 *
 * Description:
 *
 * Dependencies:
 *
 * Revision History:
 *	$Log: COcrv_prtlin.u,v $
 *	Revision 1.1.1.1  2001/01/04 21:07:22  cvs
 *	Initial import to CVS
 *	
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.1  1997/05/08  13:20:44  pinnacle
# New project VDS 250
#
# Revision 1.1  1996/07/19  20:33:52  pinnacle
# Create VDS 241 project
#
# Revision 1.1  1994/11/14  22:42:32  pinnacle
# Create vds.240 from vds.232
#
# Revision 1.1  1994/11/08  16:07:00  pinnacle
# create vds.232
#
 *
 * History:
 *	MM/DD/YY	AUTHOR		DESCRIPTION
 *
 * -------------------------------------------------------------------*/

/*
	 VDS 2.0 - PPM macro library - 92/07/09 (alc)
	 92/08/11	Fix templates list returned by CO
 */
   
#include "ciminimum.h"
#include "cimacros.h"

struct GRmd_env MOD_ENV;
struct GRid 	TEMP[3];
GRobj 		MAC1;
int 		suc;
IGRchar		mes_f[80];

extern ASmake_source_from_env();

main()
{

  while(1){

pt1:    if(!ci$locate( prompt       = "Identify point 1 of vector",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP  |
                                      LC_RIGID_OWNER | LC_FLEX_COMP |
                                      LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[0].objid),
                       osnum        = &(TEMP[0].osnum),
                       classes      = "GRpoint",
                       md_env       = &MOD_ENV         )) exit;

	ASmake_source_from_env( &TEMP[0],&MOD_ENV,&TEMP[0] );	


        if(!ci$locate( prompt       = "Identify point 2 of vector",
                       properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       owner_action = LC_RIGID_COMP  |
                                      LC_RIGID_OWNER | LC_FLEX_COMP |
                                      LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               obj          = &(TEMP[1].objid),
                       osnum        = &(TEMP[1].osnum),
                       classes      = "GRpoint",
                       md_env       = &MOD_ENV         )) goto pt1;

	ASmake_source_from_env( &TEMP[1],&MOD_ENV,&TEMP[1] );	


 	while(1) {

        	if(!ci$locate( 	prompt       = "Identify surface ",
                       		properties   = LC_LC_ONLY | LC_DP_ONLY | LC_RW,
                       		owner_action = LC_RIGID_COMP  |
                                      	       LC_RIGID_OWNER | LC_FLEX_COMP |
                                      	       LC_FLEX_OWNER  | LC_REF_OBJECTS,
	               		obj          = &(TEMP[2].objid),
                       		osnum        = &(TEMP[2].osnum),
		       		md_env       = &MOD_ENV,
		       		classes      = "EMSsubbs" )) break;

		ASmake_source_from_env( &TEMP[2],&MOD_ENV,&TEMP[2] );	

      		ci$get_module_info(md_env = &MOD_ENV);

      		MAC1 = NULL_OBJID;

      		ci$send(msg = message nci_macro.init(   &suc,
					    		0,
					    		"crv_prtlin",
					    		3,
					    		TEMP,
					    		0,
					    		&MOD_ENV ),
	            	targetid = MAC1,
		    	targetos = MOD_ENV.md_id.osnum );

      		if( suc == 0 ){
			write("placement of nci_macro \"crv_prtlin\" failed\n");
			status("placement of nci_macro \"crv_prtlin\" failed");
      			ci$send(msg      = message Root.delete(0),
	      			targetid = MAC1,
	      			targetos = MOD_ENV.md_id.osnum );
      		}
 	}

   }
}


/*=========================================================================*/

wakeup(){
 	strcpy(mes_f,"<Assoc>Place Parting Line");
	message(mes_f);
}

