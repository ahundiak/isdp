/* $Id: COz_rtAxis.u,v 1.1 2001/02/27 15:32:14 ramarao Exp $  */
/* --------------------------------------------------------------------
 * I/STRUCT
 *
 * File:        struct/pplcmd/COz_rtAxis.u
 *
 * Description:	PPL to show all the stiffener axis which are moved to
 *		'root' in "Validate Structure" form.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: COz_rtAxis.u,v $
 *      Revision 1.1  2001/02/27 15:32:14  ramarao
 *      Fixed TR# 3056.
 *
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      02/27/01        Rama Rao        File Creation.
 * -------------------------------------------------------------------*/

#include "VDppl.h"
#include "vdVALmacros.h"

extern int              VDpms_findall_ancestryobjects();
extern GRclassid        OPP_VSbeamAxis_class_id;

main()
{
IGRint                state;
IGRint                i, nb_class, loc_cnt;
GRclassid             classid[1];
OM_S_OBJID            *loc_list;
struct GRid           obj_chk;
struct GRmd_env       cur_env;

   loc_cnt    = 0;
   nb_class   = 1;
   loc_list   = NULL;

   /* Get all the Beam Axis Objects in the current design file */
   classid[0] = OPP_VSbeamAxis_class_id;

   ci$get_module_info( md_env = &cur_env );

   loc_cnt = 0;
   VDpms_findall_ancestryobjects( cur_env.md_id.osnum, nb_class,
                                  classid, &loc_cnt, NULL );
   if( !loc_cnt ) goto wrapup;

   loc_list = ( OM_S_OBJID * ) malloc( sizeof(OM_S_OBJID)*loc_cnt );
   VDpms_findall_ancestryobjects(  cur_env.md_id.osnum, nb_class,
                                   classid, &loc_cnt, loc_list );

   vd$VAL_openLog();

   for( i=0; i<loc_cnt; i=i+1 )
   {
       obj_chk.objid = loc_list[i];
       obj_chk.osnum = cur_env.md_id.osnum;
       ci$send( msg = message ACncpx.ACget_STATE( &state ),
                targetid = obj_chk.objid,
                targetos = obj_chk.osnum );
	if( state & ncpx_root )
        {
          vd$VAL_addObject( GRid     = obj_chk, 
			    PostText = "Beam Axis moved to root" );
        }
   }


   vd$VAL_closeLog();

wrapup:
   if( loc_list   ) { free( loc_list   ); loc_list   = NULL; }
   return 1;
}
