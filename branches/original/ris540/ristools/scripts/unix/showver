#!/usr/bin/perl
# Do not alter this line: $Revision: 1.1.54.1 $
#======================================================================
#	SOURCE FILE: showver
#	AUTHOR: Patrick Fitzgerald
#	DATE: 01/15/94
#  DESCRIPTION: Displays SPC ID information in human-readable or
#	environment variable form.
#
#	SUBROUTINES CONTAINED:
#
#	SUBROUTINES INVOKED:
#		SPCgetVersion
#		Multiopts
#
#	CHANGE HISTORY:
#======================================================================

($progname = $0) =~ s#.*/##;


#----------------------------------------------------------------------
# Config
#
push(@INC, $ENV{'RISDEVDIR'} . '/ristools/scripts/unix');



#----------------------------------------------------------------------
# Include some code
#
require 'screen.pl';
require 'multiopts.pl';
require 'spc.pl';



#----------------------------------------------------------------------
# Usage and help
#
$usage = <<"END_OF_USAGE";

$progname - displays SPC version information for a file

USAGE:	$progname [-?] [-debug] [-help] file
END_OF_USAGE


$help = <<"END_OF_HELP";

FLAGS:	(you can abbreviate all flags to their shortest unique prefix)

	-?		Print usage text (to STDERR) and exit.
	-debug		Print debug messages (to STDERR) while running.
	-help		Print usage and help text (to STDOUT) and exit.

RETURN VALUE:
	0 = success
	1 = error reading file, or file does not contain version string
	2 = usage error

EXAMPLE:
	From the command line:
		\$ $progname file1
		1.1.1.1

	From within a shell script:
		VER=`$progname file1 2> /dev/null`
		STAT=\$?
		if [ \$STAT -eq 1 ]
		then
			echo "Error reading file version."
		elif [ \$STAT -eq 2 ]
		then
			echo "Coding error."
		else
			echo "File version = \$VER"
		fi

		
END_OF_HELP



#----------------------------------------------------------------------
# Get the command line options
#
&Multiopts('debug help') || &fatal("usage error\n$usage", 2);

if (@opt_help) { print($usage, $help); exit(2); }

&fatal("you must specify a single filename " .
       "on the command line\n$usage", 2)
  unless (@ARGV == 1);


#----------------------------------------------------------------------
# Display the SPC ID information
#
$version = &SPCgetVersion(shift);

&fatal("file contains no version information") unless ($version);

print "$version\n";

__END__
# GNU Emacs Code
# Local Variables:
# mode: perl
# End:
