
           SUMMARY OF CHANGES BETWEEN VERSION 1.1 (Oct 28, 1986) AND
                          VERSION 1.6 (May 24, 1987)


Renamed files:
--------------
compr_font_2.3.h  ==>   comp2_3.h
cfont_access.c    ==>   cfont_ac.c
do_functions.c    ==>   do_funct.c
getrec_inc.c      ==>   getrec.c
getrec_abs.c      ==>   getrec_a.c
split_arcs.c      ==>   splitarc.c




New include files:
------------------
ERRCHK.H -- hooks for error function

CFONT_AC.H -- Used by cfont_ac.c




Changes to include files:
-------------------------
ALLOC.H -- changes made for porting to IBM-PC

BMAP.H -- '$' removed from all names

COMP2_3.H
    '$' removed from all names
    timestamp, cust_number, rev_number records added to cft_font_hdr structure
    new flag bit if no curve simplification (F_NCVSMP)

MKBM.H
    #define PTPERINCH  72.2892  (new value)
    #define DCHRCT  64  (new value)
    #define EM_TOP  6597  (new value)
    #define EM_BOT  -2043  (new value)
    #define MAX_ZONES_PER_DIM  64  (new value)
    GENERIC = 72 replaces GENRC_RES = 72
    conditional constants for 32-bit machine, ms-dos
    MAX_CHARS, MAX_CACHE_ZONE greatly reduced (saves a lot of static memory)
    #define BMAPDEF  "cmpr"
    #define KERNDEF  "/user/include/kern.prs"
    new constants: MASK_P_FLAG, MASK_L_FLAG, MASK_C_FLAG, MASK_FN_FLAG,
        FN_ONE_ITEM, MASK_MIN
    new structures: lrtb, comp_char_desc

POLYFILL.H
    In structure xi_le: xint renamed to intc, xint_nx renamed to int_next
    xscale_nom, yscale_nom added to structure stack_frame

STDEF.H
    constants and macros adapted for use in ms-dos




Changes to C modules:
---------------------

'$' removed from all names

ALLOC.C
    memory allocation code added to work with ms-dos & microsoft C compiler
    initalloc() should only be called once at the start of the program
    casting bug fixed in dealloc() when subtracting addresses
    new functions: freealloc(), alloc_reset(), alloccount2(), alloc2(),
        dealloc2(), alloc_bitmap(), dealloc_bitmap()

APOLLO.C
    aplo_todays_date() uses 6 arguments for date, time instead of 3 previously

BITMAP.C
    clr_scan_line() function removed
    set_1_bit() function added
    set_bits() returns no arguments; previously it returned TRUE/FALSE
    set_bits() no longer checks the validity of the input arguments. This is
        done, if necessary, by the calling function

BMAP.C
    Changed all code that assumed 68000 byte order to also DEC byte order
    Made sure that all arguments and return values using 32-bit integers had
        them explicitly cast 'long'
    Added an optional compile flag (BMAPS_IN_TEMP_FILE) designed to conserve
        memory at run-time by storing bitmap in temporary files
    Added bmap_insert_kern_rec(), bmap_new_kern_rec() to put kerning pairs
        in bitmap font
    date_stamp() & bmap_autoset_time_stamp() have special calls to ms-dos
    file 'bmap_log.001' no longer used for reporting errors

CACHE.C
    put_cache_data() changed to abandon loading data if cache overflow occurs.
    cache_fpixels() changed to init cached pixels of zone to -1 to ensure
        recalculation (bug fix)
    cache_fpixels() modified to store a value of 0 if the argument is < 0
    fixed bug in reinit_cache() if rotation + obliquing angle != n*90 degrees
    cached_pixels() returns 0 pixels (instead of undefined) if zone not cached
    cached_fpixels() ditto

CFONT_AC.C
    include file name 'comp2_3.h', replaces 'compr_font_2.3.h'
    Note: The following declarations must be made in cfont_ac.h in order for
        this code to compile:
            #define MAX_READ  nnnn      - maximum number of bytes that can
            #define MAX_WRITE nnnn      - be read/written in one call
            #define READ_COMP           - turns on font loading code
            #define WRITE_COMP          - turns on font writing code
    byte swapping is taken care of by 'm68000' and 'MSDOS' switches
    Regarding memory allocation, 'apollo' and 'MSDOS' switches activate code
        specific to either Apollo or ms-dos implementations
    fix bug reading & writing 2 word kerning pair records
    Add 'O2' outline data record if outline data > 64K words. See functions
        load_outline_data() and write_outline_data()
    read_chk() & write_chk() correctly handle requests for > 64 KB of data
    mbyte() function uses long integers instead of int

CONVERT.C
    new calling convention for char_scan_convert(). Most arguments are now in
        a structure. No parameters are passed as globals
    "squeezing": adjusted scale factors and offsets are calculated based on
        the extents of root character relative to the edges of the character
        cell (char_scan_convert)
    clipping to the character cell boundary (char_scan_convert)
    hooks are in place for imported widths but it's not implemented
        (char_scan_convert)
    change outline-filling algorithm to get rid of gaps in thin lines with
        a slope < 1 by scanning in both dimensions (up to ~75 lpm). Change
        proc_vect() and convert_lists() so that they make linked lists in X
        and Y dimensions
    convert_yscan() renamed to convert_lists()
    maintain white space continuity; threshold of .05 pixel to recognize a run
        or a gap (convert_lists, convert_thresh)
    vanishing bitmap bug fixed by forcing raster height & width nonzero
    set width is rounded down if real value =  integer + .5
    round the obliquing & rotation angles to nearest .1 degree
    compiler switch (CONVERTDBG) to print debugging information
    deallocates arc-to-vector array memory after calls to proc_vect()
    some setting-up calculations formerly done in char_scan_convert() were
        moved to main.c
    nominal x- and y-scale factors saved on stack (char_scan_convert)
    new functions -- add_scan_list(), convert_thresh(), get_required_width()

DO_FUNCT.C
    add argument to do_xht_adj() in order to remove reference to global

GETREC.C
    When addresses are subtracted, the result must be cast as
        unsigned long (get_rec)

MAIN.C
    accesses a character set descriptor file for generating a subset of an
        outline font (convert_outlines)
    track kerning code moved to 'kern.c'
    fixed 16 bit run length encoding bug (port problem in bits_to_runs)
    force set width of space character to round down at mumble + .5
        (bmap_set_space_width)
    force tabular figure '1' to be same width in pixels as '0' (write_bmapf,
        convert_outlines). This is kind of kludgey, but otherwise they may
        come out different by + or - a pixel.
    new functions: init_kludge(), report_error(), csd_ascii(), messages(),
    new functions: search_cid(), setup_char(), messages(), csd_ascii(),
        report_error(), init_kludge()

READER.C
    new keywords:
        import widths -- not implemnted
        clip -- clip character image to character boundary box (top and bottom
            of em-square, left & rigth sidebearings)
        squeeze -- squeeze character image to character boundary box
        subset list -- make a bitmap font that is a subset of an outline font
        kerning all -- put all kerning pairs into bitmap font
        kerning table -- put subset of kerning pairs into bitmap font
        first four ---\
        device --------| control the name of the output file
        revision -----/

RULES.C
    installed automatic cache clearing mechanism to clear the cache and retry
        pixel allocation in case of cache overflow
    get_pixels() corrected to ensure correct interdimensional scaling for
        P and T items
    setup_trans() -- fixed bug if 1st char uses interdimensional reference
    added nominal scale factors for x and y to arg list of setup_trans()
        nominal x scale used for pixel allocation and cache selection
    make_y_trans_list() -- fixed bug to correct definition of vertical
        position referenced to top of em-square
    fixed bugs in 'make_x_trans_table': 1) compound X trans table should never
        be overwritten. 2) store float-pt #s in comp_x_pixel_tbl (which must
        be declared float)
    in get_pixels() change root zone rounding constant from .495 to .499
    in make_path_mask(), fix bug that occurs when 3 or more zones are on the
        same level (change 'if' to 'while'). This can cause infinite recursion
    fix error in transformation functions when X and Y pointsizes are not eq.
        (init_trans, setup_xxy_trans, setup_yxy_trans)
    compiler switch (RULESDBG) to print debugging information
    eliminated swap_ufix16() and swap_double() in favor of in-line code in
        make_edge_list()
    eliminated unpack_prop_flag(), unpack_level_flag(), unpack_cont_flag(),
        unpack_fn_flag() and unpack_min() in favor of masks defined in mkbm.h
        to extract packed fields
    removed all references to external globals
    root character number offset argument added to init_trans()

SPLITARC.C
    no significant changes




New C modules:
--------------
IBM_PC.C
    contains microsoft C functions to get current date and time. This
    module replaces APOLLO.C on ms-dos systems

KERN.C
    generates kerning pair and kerning track data for bitmap font
    do_kerning() is the entry point to this module
