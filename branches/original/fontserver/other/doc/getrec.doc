void _FSInitRecState(n)
uInt16 n;

/* _FSInitRecState initializes _FSGetRec state for channel n */



_FSGetRec(n, record, dataOrigin, type, x, y, beta)
uInt16 n;		/* Channel number */
uInt16 **record;	/* Current record in outline data */ 
uInt16 *dataOrigin;	/* First record in outline data */
Int16  *type;		/* Returned record type */
Int32  *x;		/* Returned value x */
Int32  *y;		/* Returned value y */
Int32  *beta;		/* Returned value beta */

/* _FSGetRec fetches the next logical step from compressed outline data.*/
/* Sets *type to indicate type of step read.				*/
/*   -1: erroneous step read.						*/
/*    0: end of character or call while repeat active.			*/
/*    1: move to (*x, *y).						*/
/*    2: vector to (*x, *y).						*/
/*    3: horizontal vector to (*x, *y).					*/
/*    4: vertical vector to (*x, *y).					*/
/*    5: arc to (*x, *y) with bulge factor *beta.			*/
/*    6: set scale factors to *x, *y (units of 1/65536).		*/
/*    7: set origin to (*x, *y).					*/
/*    8: set x min extent (*x).						*/
/*    9: set x max extent (*x).						*/
/*   10: set y min extent (*y).						*/
/*   11: set y max extent (*y).						*/
/*   12: do char (*x).							*/
/*   13: hierarchy value (*x).						*/
/*   14: plaid x zone data. *x is starting coord, *y is ending coord,	*/
/*	 *beta is P, L, C, function flags and minimum pixels:		*/
/*	     Bits 31-16   Not used					*/
/*	     Bit  15      P flag					*/
/*	     Bit  14      L flag					*/
/*	     Bit  13      C flag					*/
/*	     Bits 12-11   Function flag:				*/
/*			      0: No function items			*/
/*			      1: 1 function item follows		*/
/*			      2: Not used				*/
/*			      3: 2 or more function items follow	*/
/*				 terminated by an op item with		*/
/*				 termination flag on			*/
/*	     Bits 10-8    Not used					*/
/*	     Bits  7-0    Minumum value					*/
/*   15: plaid y zone data. *x is starting coord, *y is ending coord,	*/
/*       *beta is P, L, C, function flags and minimum pixels:		*/
/*	     Bits 31-16   Not used					*/
/*	     Bit  15      P flag					*/
/*	     Bit  14      L flag					*/
/*	     Bit  13      C flag					*/
/*	     Bits 12-11   Function flag:				*/
/*			      0: No function items			*/
/*			      1: 1 function item follows		*/
/*			      2: Not used				*/
/*			      3: 2 or more function items follow	*/
/*				 terminated by an op item with		*/
/*				 termination flag on			*/
/*	     Bits 10-8    Not used					*/
/*	     Bits  7-0    Minumum value					*/
/*   16: P item. *x is character number, *y is dim * 256 + zone no	*/
/*   17: F item. *x is character number, *y is dim * 256 + zone no	*/
/*   18: Const item. *x is value, *y is decimal exponent		*/
/*   19: Op item. *x is op code:					*/
/*	     0: NOP function						*/
/*	     1: ADD function						*/
/*	     2: SUB function						*/
/*	     3: MUL function						*/
/*	     4: DIV function						*/
/*	     5: PRINT function						*/
/*	     6: FIXR function (round to nearest integer)		*/
/*	     7: FIX function (round to next lowest integer)		*/
/*	     8: CO function						*/
/*	     9: CF function						*/
/*	    10: RRFS function						*/
/*	    11: RRHS function						*/
/*	    12: RRFS1 function						*/
/*	    13: RRHS1 function						*/
/*	    14: BZON function						*/
/*	    15: BZON1 function						*/
/*	    16: LZON function						*/
/*	    17: LZON1 function						*/
/*	    18: CFFLB function						*/
/*	    19: CFFRB function						*/
/*	    20: CFSLB function						*/
/*	    21: CFSRB function						*/
/*	    22: XHT_ADJ function					*/
/*									*/
/*   for all op codes, *beta indicates if last item in function:	*/
/*	     Bits 31-1    Not used					*/
/*	     Bit   0      Termination flag:				*/
/*			      0: Not last function item			*/
/*			      1: Last function item			*/
/*   20: T item. *x is character number, *y is dim * 256 + zone no	*/
