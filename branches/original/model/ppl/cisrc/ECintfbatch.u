#include <stdio.h>
#include <string.h>
#include "cieveryone.h"
#include "cilocate.h"
#include "cimacros.h"
#include "cisend.h"
#include "msdef.h"
#include "msmacros.h"
#include "ECcmd.h"
#include "ECmsg.h"
#include "grcmd.h"

#define TRUE  1
#define FALSE 0

extern int MSmessage();
int addcmd (filename)
char *filename;
{
  char funcname[100], outfuncname[100], save[100];
  int funclen, outfunclen, savelen;
  int c, match, i, loop, inx, done;
  FILE *fileptr, *tempfile;

  strcpy (funcname, "//\"EMAnIfBt\"");
  funclen = strlen (funcname);
  strcpy (outfuncname,
   "ci$put(cmd_key = \"EM_M_AnalyzeIntfIBatch\");\n\t");
  strcat (outfuncname, funcname);
  outfunclen = strlen (outfuncname);

  fileptr = fopen (filename, "r");
  tempfile = fopen ("/usr/tmp/_anintf.tmp", "w");

  loop = TRUE;
  done = FALSE;
  while (loop)
    {
    c = NULL;
    while ((c = fgetc (fileptr)) != EOF && (c != funcname[0] || done))
      fputc (c, tempfile);

    if (c == funcname[0])
      {
      savelen = 0;
      save[savelen] = c;
      savelen = savelen + 1;
      match = 1;
      for (i=1; i<funclen; i=i+1)
        {
        c = fgetc (fileptr);
        save[savelen] = c;
        savelen = savelen + 1;
        if (c == funcname[i])
          {
          match;
          match = match + 1;
          }
        else
          break;
        }

      if (match == funclen)
        {
        for (i=0; i<outfunclen; i=i+1)
          fputc (outfuncname[i], tempfile);
        done = TRUE;
        }
      else
        for (i=0; i<savelen; i=i+1)
          fputc (save[i], tempfile);
      }
    else
      loop = FALSE;
    }
  fclose (tempfile);
  fclose (fileptr);

  fileptr = fopen (filename, "w");
  tempfile = fopen ("/usr/tmp/_anintf.tmp", "r");
  c = NULL;
  while ((c = fgetc (tempfile)) != EOF)
    fputc (c, fileptr);
  fclose (fileptr);
  fclose (tempfile);

  return;
}


main ()
{
 char filename[256], cmdstr[256];

 ex$message(msgnumb = EM_M_AnalyzeIntfPBatch);
 ci$get (string = filename, msgnum = EMS_P_InputBatchFileName);

 ex$message(msgnumb = GRC_M_StartRecord, buff = cmdstr);
 begincmd (cmdstr);
 ci$put (string = filename);
 endcmd();

 ex$message(msgnumb = EM_M_AnalyzeIntfBatch, buff = cmdstr);
 begincmd (cmdstr);
 endcmd();

 ex$message(msgnumb = GRC_M_StopRecord, buff = cmdstr);
 begincmd (cmdstr);
 endcmd();

 addcmd (filename);
}
