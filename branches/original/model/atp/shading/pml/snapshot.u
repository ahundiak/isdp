//~Name      : 
//~Originator: yvonne
//~Originated: (RAP) Wed Jun 17 09:29:59 1992
//~Product   : I/EMS 02.01.00.00 08-Jun-92 
//~Nodename  : h11434
//~Command   : 
//~Comments  : 

#include "ciminimum.h"
#include "cimacros.h"
#include "fi.h"
#include <stdio.h>
#include "igrdef.h"
#include "dpdef.h"
#include "dpezmac.h"
#include "OMminimum.h"
#include "OMprimitives.h"
#include "OMerrordef.h"
#include "hsmacros.h"
#include "hslight.h"

main()
{
    IGRlong msg; 
    long    sts;
    OMuword dpb_os;
    OM_S_OBJID dpb_id;
    int	    i;
    char    str[20];
    struct HS_light_source lights[8], ambient;

    extern  HSget_dpb_super();
    extern  HSget_global_lights();

    fprintf(stderr, "==================================================\n");

    HSget_dpb_super( &dpb_id, &dpb_os );

    sts = ci$send( msg = message HSdpb2.debug(), 
			targetid = dpb_id, 
			targetos = dpb_os );

    hs$get_global_lights( lights = lights, ambient_light = &ambient);

    fprintf(stderr, "\nLIGHT SOURCES\n");
    fprintf(stderr, "\n   AMBIENT LIGHT	\n");
    fprintf(stderr, "        TARGET 		%lf %lf %lf\n",
    	ambient.target[0], ambient.target[1], ambient.target[2]);
   
    fprintf(stderr, "        LOCATION	%lf %lf %lf\n",
    	ambient.location[0], ambient.location[1], ambient.location[2]);
    
    fprintf(stderr, "        DIRECTION 	%lf %lf %lf\n",
    	ambient.direction[0], ambient.direction[1], ambient.direction[2]);
    
    fprintf(stderr, "        RADIUS 		%lf\n", 
	ambient.radius);
    
    fprintf(stderr, "        ANGLE 		%lf\n", 
	ambient.angle);
    
    fprintf(stderr, "        RED: %d  GREEN: %d  BLUE: %d\n",
    	ambient.red, ambient.green, ambient.blue);
    
    fprintf(stderr, "        FLAGS 		0x%X\n", 
	ambient.flags);

    for (i=0; i<8; i=i+1)
    {
     	fprintf(stderr, "   %d\n", i);	
  
	fprintf(stderr, "	TARGET		%lf %lf %lf\n",
    	    lights[i].target[0], lights[i].target[1], lights[i].target[2]);
    
        fprintf(stderr, "	LOCATION 	%lf %lf %lf\n",
    	    lights[i].location[0], lights[i].location[1], 
	    lights[i].location[2]);
    
        fprintf(stderr, "	DIRECTION 	%lf %lf %lf\n",
    	    lights[i].direction[0], lights[i].direction[1], 
	    lights[i].direction[2]);
    
        fprintf(stderr, "	RADIUS 		%lf\n", 
	    lights[i].radius);
    
        fprintf(stderr, "	ANGLE 		%lf\n", 
	    lights[i].angle);
    
        fprintf(stderr, "	RED: %d  GREEN: %d  BLUE: %d\n",
    	   lights[i].red, lights[i].green, lights[i].blue);
    
        fprintf(stderr, "	FLAGS 		0x%X\n", lights[i].flags);
    }

    fprintf(stderr, "==================================================\n");
}
