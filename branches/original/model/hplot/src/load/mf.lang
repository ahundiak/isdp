------- summary of metafile loader notation ---------------- 28-Jun-88

syntax:
  [ x ] means x is optional.
  { y } means any number of y's.
  (x | y) means one of x or y.
  "c" is a quoted string of characters.  '' also works.
  ; is a terminal, means an occurrence of the character ;
  'x' is a terminal, means an occurrence of the character x.
  <int8>, <int16>, <int32> mean signed integer value of nn bits.
  <uint8>, <uint16>, <uint32> mean unsigned integer value of nn bits.
  <double> means a double floating value.
  <word> is a non-terminal symbol, defined at end of this summary.
  word is a terminal, means an occurrence of the word word.

------- commands -----------------------------------------------------

header
  version <uint8> <uint8> <uint8>
  world_to_viewport_scale <double>
  [(save rasterfile | delete rasterfile)]
  [(save metafile | delete metafile)]
  rasterfile "c"
  [metafile "c"]
  [line_width_constant "<double>"]
  [max_line_width "<int16>"]
  [user_line_width "<int16>"];
  
view
  matrix <mtx>
  range <pnt> <pnt>;

color [table] {<rgb>};

depth [cues] [near] <uint8> [far] <uint8>;

light intensity <uint8> (direction <pnt> | point <pnt>);

foreground index <uint16>;
rendering [mode] (
  wireframe |
  [z_buffered] smooth [shading] |
  [z_buffered] constant [shading] |
  [z_buffered] raster [hidden] [line] |
  [z_buffered] filled [hidden] [line] |
  [z_buffered] area_fill |
  [z_buffered] styled [hidden] [line] |
  [z_buffered] show [hidden] [line] );

translucency (grid <uint8> | <uint8>);

rotation <dbl3> <dbl3> <dbl3>;

post rotation <dbl3> <dbl3> <dbl3>;

line (
  style <uint16> |
  width <uint16> );

curve
  [ ( level | group ) <uint16>]
  order <uint16>
  [ range <pnt> <pnt> ]
  { periodic | non_uniform | rational | planar | closed }
  [poles] {<pnt>}
  [knots {<double>}]
  [weights {<double>}];

surface
  [ ( level | group ) <uint16>]
  order <uint16> <uint16>
  [ range <pnt> <pnt> ]
  { u_periodic | v_periodic | u_non_uniform | v_non_uniform | rational |
    planar | u_closed | v_closed | orientation | solid_hole }
  [type <uint16>]
  [poles] { '{' {<pnt>} '}' }
  [u_knots {<double>}]
  [v_knots {<double>}]
  [weights {<double>}]
  [boundaries] {
    '{'
      order <uint16>
      { periodic | non_uniform | rational | planar | closed }
      [poles] {<dbl2>}
      [knots {<double>}]
      [weights {<double>}]
    '}' };


------- non-terminals ------------------------------------------------

<rect_data> :==
  [ ( level | group ) <uint16>]
  origin <pnt>
  diagonal <pnt>
  direction <pnt>

<grp_pnts> :== [ ( level | group ) <uint16>] [points] {<pnt>}

<rgb>	:== [<open>] <uint16> <uint16> <uint16> [<close>]

<pnt>	:== <dbl3>

<dbl2>	:== [<open>] <double> <double> [<close>]

<dbl3>	:== [<open>] <double> <double> <double> [<close>]

<dbl4>	:== [<open>] <double> <double> <double> <double> [<close>]

<mtx>	:== <dbl4> <dbl4> <dbl4> <dbl4>

<open>	:== ( '(' | '{' | '[' )

<close>	:== ( ')' | '}' | ']' )
