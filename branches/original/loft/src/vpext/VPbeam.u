/* $Id: VPbeam.u,v 1.1.1.1 2001/01/04 21:11:58 cvs Exp $  */

/***************************************************************************
 * I/VDS
 *
 * File:        vdsa/VDsaReview.u
 *
 * Description: Review Smart Attributes
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: VPbeam.u,v $
 *      Revision 1.1.1.1  2001/01/04 21:11:58  cvs
 *      Initial import to CVS
 *
# Revision 1.2  1999/10/26  19:59:02  pinnacle
# ah
#
# Revision 1.1  1999/05/24  18:39:42  pinnacle
# ah
#
# Revision 1.1  1998/04/29  16:27:20  pinnacle
# VDS 2.5.1
#
# Revision 1.4  1998/04/24  14:34:04  pinnacle
# ah
#
# Revision 1.3  1998/04/10  21:37:36  pinnacle
# ah
#
 *
 * History:
 * MM/DD/YY  AUTHOR  DESCRIPTION
 * 04/10/98  ah      Creation
 *
 ***************************************************************************/

#include "VDppl.h"
#include "VDobj.h"
#include "vsplatedef.h"
#include "VPextInfo.h"

#include "coparamac.h"

extern ASstart_var_fence();
extern ASend_fence();

extern VPextExtractBeam();
extern VPextExtractOpen ();
extern VPextExtractClose();
extern VPextExtractBeamAppend();

#define thePrompt "Extract Beam"

/* --------------------------------------
 * Deals with a group of beams
 */
int processSet(setOE)
  TGRobj_env  *setOE;
{
  IGRstat retFlag;
  IGRstat sts;
  
  TGRobj_env *locOEs;
  IGRint      locNum;
  IGRint      i;

  // Init
  retFlag = 0;
  
  // Open up the extract files
  sts = VPextExtractOpen();
  if (!(sts & 1)) goto wrapup;

  /* Grab Located Objects */
  as$start_fence(set       = &setOE->obj_id,
		 set_env   = &setOE->mod_env,
		 nb_obj    = &locNum,
		 p_obj_env = &locOEs);

  // Extract each one
  for(i = 0; i < locNum; i = i + 1) {
    printf("==========================================\n");
    VPextExtractBeamAppend(&locOEs[i]);
  }
  
  ASend_fence();
  
  // Done
  VPextExtractClose();
  retFlag = 1;
  
wrapup:
  return retFlag;
}

/* --------------------------------------
 * The main routine
 */
int main()
{
  int sts,msg;
  int response;
  
  TGRobj_env objOE;
    
  while(1) {

    objOE.obj_id.objid = NULL_OBJID;
    
    response = 0;

    UI_message(thePrompt);

    sts = ci$locate(prompt  = "Select Beam",
                    classes = "VSbeam",
		    owner_action = LC_RIGID_OWNER | 
                                   LC_RIGID_COMP  |
                                   LC_FLEX_COMP   | 
                                   LC_FLEX_OWNER  |
                                   LC_REF_OBJECTS,

                    stackable    = 1,
		    response     = &response,
		    md_env       = &objOE.mod_env,
		    obj          = &objOE.obj_id.objid,
		    osnum	 = &objOE.obj_id.osnum);

    if (!(sts & 1)) response = 0;

    switch(response) {

    case EX_OBJID:   // Object Set
      processSet(&objOE);
      break;
      
    case EX_DATA:    // Single Object
      printf("==========================================\n");
      VPextExtractBeam(&objOE);
      break;

    } // Switch
  }

wrapup:
  return 1;
}

/* ------------------------------------------
 * Usual command object messages
 */
init()
{
}
sleep() 
{
}
wakeup()
{
  UI_message(thePrompt); 
}
delete()
{
}












