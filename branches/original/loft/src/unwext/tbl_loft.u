/* $Id: tbl_loft.u,v 1.1 2001/10/09 14:18:09 ramarao Exp $  */
/* --------------------------------------------------------------------
 * I/LOFT
 *
 * File:        isdp/loft/src/unwext/tbl_loft.u
 *
 * Description: Macro to place a table report.
 *
 * Dependencies:
 *
 * Revision History:
 *      $Log: tbl_loft.u,v $
 *      Revision 1.1  2001/10/09 14:18:09  ramarao
 *      Created "tbl_loft" macro to create a loft report table.
 *
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      10/09/01        Rama Rao        File Creation.
 * -------------------------------------------------------------------*/

#include "VDppl.h"
#include "VDobj.h"
#include "ci_mac_def.h"
#include "VLxmlreport.h"
#include "VDtblXml.h"

#define MACRO_NAME	"tbl_loft"

#define MAX_TEMP	4
#define MAX_FEET	1
#define MAX_FEET_CHAR	10

GRobj           ci_mac_def1;
struct GRid     CI_MACRO_ID, GRid_list[MAX_FEET];

extern 	VLgetPtCoord(), MAtrlmx(), MAtypemx(), VD_bulkDeleteByGRobj_envs(),
	ASmake_source_from_env();

main()
{
   IGRlong	sts;
   IGRint       i, msg, temp_types[MAX_TEMP];
   IGRchar      *temp_names[MAX_TEMP], *feet_names[MAX_FEET];

   temp_names[0] = "Object";     temp_types[0] = macro_generic ;
   temp_names[1] = "Cs";  	 temp_types[1] = ref_generic ;
   temp_names[2] = "TblHeader";  temp_types[2] = text_type ;
   temp_names[3] = "StyleSheet"; temp_types[3] = text_type ;

   feet_names[0] = "Table" ;

   ci_mac_def1 = NULL_OBJID;

   ac$cimacdef( cimacdef          = ci_mac_def1,
                status            = &sts,
                name              = MACRO_NAME,
                temp_num          = MAX_TEMP,
                temp_names        = temp_names,
                temp_types        = temp_types,
                extern_feet_num   = MAX_FEET,
                extern_feet_names = feet_names );
}

computeTable ()
{
IGRlong			sts;
IGRchar			tableHeader[30], styleSheet[30], *buffer;
struct GRobj_env	parentOE, objectOE, csOE;
struct ret_struct	rs;
 
   buffer = NULL ;
 
   GRid_list[0].objid = NULL_OBJID;

   vdobj$GetParent( objID = &CI_MACRO_ID, idx = 0,
                    parentID = &parentOE.obj_id  );
   parentOE.mod_env = MOD_ENV;
   vdobj$GetFoot( objOE = &parentOE, footName = "", footOE = &objectOE );

   vdobj$GetParent( objID = &CI_MACRO_ID, idx = 1, 
		    parentID = &parentOE.obj_id  );
   parentOE.mod_env = MOD_ENV;
   vdobj$GetFoot( objOE = &parentOE, footName = "", footOE = &csOE );

   vdobj$GetParent( objID = &CI_MACRO_ID, idx = 2,  
		    parentID = &parentOE.obj_id );
   ci$send( msg = message expression.NDgive_structure( &sts, &rs, &MOD_ENV ),
	    targetid = parentOE.obj_id.objid,
	    targetos = parentOE.obj_id.osnum  );
   strcpy( tableHeader, rs.var.text_st.text_string ); 

   vdobj$GetParent( objID = &CI_MACRO_ID, idx = 3,
                    parentID = &parentOE.obj_id );
   ci$send( msg = message expression.NDgive_structure( &sts, &rs, &MOD_ENV ),
            targetid = parentOE.obj_id.objid,
            targetos = parentOE.obj_id.osnum  );
   strcpy( styleSheet, rs.var.text_st.text_string ); 

   vlxml$Report( msg    = &msg,
		 type   = ALL_LOFT,
		 objOE  = &objectOE,
		 buffer = &buffer     );
   if( buffer == NULL ) return 1;

   vd$tbl_createByXml( 	csOE    = &csOE,
		       	loName  = tableHeader,
		       	xmlBuf  = buffer,
			xslFile = styleSheet,
		    	table   = GRid_list  );	

   ASmake_source_from_env( &GRid_list[0], &MOD_ENV, &GRid_list[0] );

wrapup:
   if( buffer ) { free( buffer ); buffer = NULL; }
   return 1;
}

place ()
{

  computeTable();

  if( GRid_list[0].objid == NULL_OBJID ) return(0);

  ci$send( msg = message  ci_macro.set_all_extern_feet
         ( &msg, 1, GRid_list, &MOD_ENV ),
           targetid = CI_MACRO_ID.objid,
           targetos = CI_MACRO_ID.osnum );
  return(1);
}
/* ========================================================================= */

compute ()
{
  computeTable();

  if( GRid_list[0].objid == NULL_OBJID ) return(0);

  ci$send( msg = message  ci_macro.set_all_extern_feet
         ( &msg, 1, GRid_list, &MOD_ENV ),
           targetid = CI_MACRO_ID.objid,
           targetos = CI_MACRO_ID.osnum );
  return(1);
}
