/***************************************************************************
 * INGR - PPL
 *
 * File:        PCetTemp2d.u
 *
 * Description:	PPL macro for placing template end treatments on profile cards
 *
 * Dependencies:
 *
 * History:
 *      MM/DD/YY        AUTHOR          DESCRIPTION
 *      02/17/00        mjablko         creation date
 *      02/18/00        jhanson         ellipse shape added
 *
 ***************************************************************************/

#define VD_PPL

// DEBUG INFO
//***********

//#define DEBUG 

// INCLUDES
//***********
#include "cieveryone.h"
#include "cimacros.h"
#include "ci_mac_def.h"
#include "cimath.h"
#include "vd_ve.h"
#include "v_edgedef.h"
#include "v_edgemacros.h"
#include "vdparmacros.h"
#include "vdsetmacros.h"
#include "vldbgmacros.h"
#include "grwireframe.h"

#include "grdpb.h"
#include "grdpbmacros.h"
#include "fontmacros.h"
#include "cotxmacros.h"


// Macro constants
//******************
#define MAX_FEET	60
#define MAX_TEMP	8
#define MAX_CHA_TEMP	20
#define PI 		3.141592654
//#define HALF_PI	  	1.570796

/* txt scale factors */
#define LABEL	1.5
#define DIM	4
#define ANG_FAC 0.15
#define DIM_OVL 1.5
#define DIM_LEN 15

/* stiffener types */
#define TEE	0
#define ANGLE	1
#define EYE	2
#define CHAN	3
#define BULB	4
#define FLAT	5

// CI_MACRO variables
//**********************
GRobj 	 	ci_mac_def1; 
int		stat, msg, grCount; 
int		temp_types[MAX_TEMP];
char 		*temp_names[MAX_TEMP], *feet_names[MAX_FEET];
char            txt[15], buff[MAX_FEET*MAX_CHA_TEMP];
struct GRmd_env	MOD_ENV;

// Macro templates
//*******************
struct GRobj_env MacroCS; 
double	FrameHeight, FrameWidth;
char    TopLabel[10], BottLabel[10];
int     BeamType, TemplType, Flip;

// Auxilary global variables
//*****************************
struct ret_struct	expr; 
struct GRid		CI_MACRO_ID,  GRid_list[MAX_FEET];
struct GRvg_construct   cst;
struct IGRdisplay	dis;

// Global variables
//****************
double  dbl_temp;

double	dim_txt_ht ;
double	lbl_txt_ht ;
double	lbl_pnt[3] ;
double	txt_cs[16] ;

int	sign ;
int	flip , sts ;
int	count ;

char	dmtxt[10] ;

int     mcsign;
double	vwcs[16], macs[16];
double	mcxvec[3], mcyvec[3], mczvec[3], mcorigin[3];
double	vwxvec[3], vwyvec[3], vwzvec[3], vworigin[3];

double p1[3], p2[3], p3[3], p4[3], p5[3], p6[3];
double p7[3], p8[3], p9[3], p10[3], p11[3], p12[3];
double p13[3], p14[3], p15[3], p16[3], p17[3], p18[3];
double p19[3], p20[3], p21[3], p22[3], p23[3], p24[3];
double p35[3], p36[3], p37[3], p38[3], p39[3], p40[3];

extern	char *strncpy ();
extern	char *strrchr ();
extern  free(), abs(), tan(), fasb();
extern 	int	init_cnst_list();
extern 	GRretrieve_font(), GRplace_text(),
	GRdpb_get(), 
	GRang_place_text(), 
	BSac2ptctvc(),
	BSellctaxrm(),
  	GRsymbology_options(), 
        GRcreate_linestring(), 
        GRcreate_conic_by_edge();
extern  EX_get_oid_nodname(), EX_get_modid_given_osnum();
extern  GRdisplay_object ();
extern  BSmdstptcv();
extern  BSactivsplt();


/* ================================ */

#include "SupMacros.h"
#include "PC2d.h"



/* ========================================================================= */
/* the main function is the one implementing the definition creation
/* ========================================================================= */

main ()
{

  int i, j;

  temp_names[0]  = "MacroCS";		temp_types[0] = ref_generic;
  temp_names[1]  = "Flip";	        temp_types[1] = double_type;
  temp_names[2]  = "FrameHeight";	temp_types[2] = double_type;
  temp_names[3]  = "FrameWidth";	temp_types[3] = double_type;
  temp_names[4]  = "TemplType";		temp_types[4] = double_type;
  temp_names[5]  = "BeamType";		temp_types[5] = double_type;
  temp_names[6]  = "TopLabel";		temp_types[6] = text_type;
  temp_names[7]  = "BottLabel";		temp_types[7] = text_type;

  for ( i=0; i<MAX_FEET; i=i+1){
        j = i * MAX_CHA_TEMP;
        sprintf(&buff[j],"pcettemp_%d", i);
  	feet_names[i] = &buff[j];
  }
  ci_mac_def1 = NULL_OBJID;

  ac$cimacdef( 	cimacdef =  ci_mac_def1,
		status 	 = &stat, 	    
                name = "PCetTemp2d",
              	temp_num = MAX_TEMP,        
                temp_names = temp_names,
              	temp_types = temp_types,
	      	extern_feet_num = MAX_FEET, 
                extern_feet_names = feet_names );
}

/* ========================================================================= */

compute ()
{

  construct_comp();

  if( GRid_list[0].objid == NULL_OBJID ) 
  	return(0);

  ci$send( msg = message  ci_macro.set_all_extern_feet
		( &stat, MAX_FEET, GRid_list, &MOD_ENV ),
	   	targetid = CI_MACRO_ID.objid,
	   	targetos = CI_MACRO_ID.osnum);
  return(1) ;
}

/* ========================================================================= */

place ()
{
  construct_comp();
  
  if( GRid_list[0].objid == NULL_OBJID ) 
  	return(0);

  ci$send( msg = message  ci_macro.set_all_extern_feet
		(&stat, MAX_FEET, GRid_list, &MOD_ENV ),
	   	targetid = CI_MACRO_ID.objid,
	   	targetos = CI_MACRO_ID.osnum);

  return(1);
}

/* ========================================================================= 


 * ========================================================================= */

construct_comp()
{

  /* Initialize and get input data */
  initialize();
 
  /* start laying out the points */
  Construct_graphics( TemplType, BeamType );  	
  	
  /* null out the next id for some kind of checking later */	
#ifdef DEBUG
  printf("grCount: %d\n", grCount);
#endif
  GRid_list[grCount].objid = NULL_OBJID;

}


/* ========================================================================= */

int initialize()
{
  get_symb();

  dis.weight		= cnst_list.weight;
  dis.style		= cnst_list.style;

  cst.msg		= &msg;
  cst.properties	= GRIS_LOCATABLE | GRIS_NEW | GRIS_DISPLAYABLE;
  cst.display		= &dis;
  cst.env_info		= &MOD_ENV;
  cst.newflag		= 0;
  cst.geometry		= NULL;
  cst.class_attr	= 0;
  cst.name		= 0;

  /* Collect input data */
  getinput();

#ifdef DEBUG
  printf("Input retrieved!\n");
#endif

  /* initialize the graphics counter */
  grCount = 0;

  /* set the dimension text height */
  dim_txt_ht = DIM;

  /* set the label text height */
  lbl_txt_ht = LABEL;
  
  /* Get coordinate system matrices */
  compute_cs( MacroCS.obj_id, macs, mcorigin, mcxvec, mcyvec, mczvec );

  /* Set orientation */
  if( Flip == 0)
      Flip = 1;
  else
      Flip = -1;
  
  /* flip the coord system for the text coord system */
  txt_cs[0] = macs[0];
  txt_cs[1] = macs[4];
  txt_cs[2] = macs[8];
  
  txt_cs[4] = macs[1];
  txt_cs[5] = macs[5];
  txt_cs[6] = macs[9];
  
  txt_cs[8] = macs[2];
  txt_cs[9] = macs[6];
  txt_cs[10] = macs[10];
  
  txt_cs[3] = macs[12];
  txt_cs[7] = macs[13];
  txt_cs[11] = macs[14];
  
  txt_cs[12] = macs[3];
  txt_cs[13] = macs[7];
  txt_cs[14] = macs[11];
  
  txt_cs[15] = macs[15];

#ifdef DEBUG
  printf("Initialized!\n");
#endif

}


/* ========================================================================= */

int getinput()  
{
  
  /* GET PARAMETER VALUES */
    getIntParm    ( CI_MACRO_ID, "Flip", &Flip );
    getDoubleParm ( CI_MACRO_ID, "FrameHeight", &FrameHeight );
    getDoubleParm ( CI_MACRO_ID, "FrameWidth", &FrameWidth );
    getIntParm    ( CI_MACRO_ID, "TemplType", &TemplType );
    getIntParm    ( CI_MACRO_ID, "BeamType", &BeamType );
    getTextParm   ( CI_MACRO_ID, "TopLabel", TopLabel );
    getTextParm   ( CI_MACRO_ID, "BottLabel", BottLabel );
  
  /* Get MacroCS */
    msg = getobj( CI_MACRO_ID, 0, &MacroCS );
  
#ifdef DEBUG
  printf( "Coord id[%d, %d]\n", MacroCS.obj_id.objid, MacroCS.obj_id.osnum );
#endif
  
  if( !( msg&1 ) ) return FALSE;
}

/* ========================================================================= */

Construct_graphics ( type, bm_type )
  int type;

{ 
    double tmp[3];
    double theight; 
    
    char text_string[128];
    int len;
    struct GRid TEXT;
    
    switch( type )
    {
        case 9:
            draw9();
            break;
        case 10:
            draw10();
            break;
        case 11:
            draw65();
            break;
        case 12:
            draw12();
            break;
        case 13:
            draw13();
            break;
        case 14:
            draw14();
            break;
        case 53:
            draw53();
            break;
        case 54:
            draw54();
            break;
        case 55:
            draw55();
            break;
        case 56:
            draw56();
            break;
        case 57:
            draw53();
            break;
        case 58:
            draw54();
            break;
        case 59:
            draw59();
            break;
        case 60:
            draw60();
            break;
        case 61:
            draw61();
            break;
        case 62:
            draw62();
            break;
        case 63:
            draw63();
            break;
        case 64:
            draw53();
            break;
        case 65:
            draw65();
            break;
        case 66:
            draw66();
            break;
        default:
            draw53();
            printf("Default template\n");
            break;
    }

}

/* ========================================================================= */
draw9()
{
    double tmp[3], aux[3], varX, varY;
    int bm_type;
    
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.85 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.15 * FrameHeight;
    v_scale(mcyvec, varY, tmp);
    v_add( p6, tmp, p7);
    
    /* p8 radius end point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, aux );
    varY = -0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp);
    v_add( aux, tmp, p8);
      
    /* p9 bottom left point */
    varY = -0.65 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p8, tmp, p9 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );

    /* Place Flange */

    if ( BeamType == TEE || BeamType == EYE)
    {
          /* p14 right flange point */
          varY = -0.05 * FrameHeight;
          v_scale( mcyvec, varY, tmp);
          v_add( p3, tmp, p14 );      
 
         /* p15 left flange point */
          varY = -0.05 * FrameHeight;
          v_scale( mcyvec, varY, tmp);
          v_add( p2, tmp, p15);

          placeLine ( GRid_list, &grCount, p14, p15, 0, 0 );
    }
         
         else if  (  BeamType== ANGLE ||  BeamType== CHAN || BeamType == BULB )
    {
          /* p14 right flange point */
          varY = -0.05 * FrameHeight;
          v_scale( mcyvec, varY, tmp);
          v_add( p3, tmp, p14 );
          
          /* p15 left flange point */
          varY = -0.05 * FrameHeight;
          v_scale( mcyvec, varY, tmp);
          v_add( p2, tmp, p15);

          placeLine ( GRid_list, &grCount, p14, p15, 2, 1 );
	
    }

    /* Place Top Flange */	
    drawTopFlange();
        
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 

    
}

/* ========================================================================= */

draw10()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top corner radius point */
    varY = 0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );

    /* p3 top point */
    varY = 0.9 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 top skew point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point */
    varY = -0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p5, tmp, p6 );
    
    /* p7 outside radius point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.14 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, aux );
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp);
    v_add( aux, tmp, p9);
    
    /*p10 bottom right skew point */
    varY = -0.7 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    /*p11 bottom right point */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 bottom radius right point */
    varX = Flip * 0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p1, tmp, p12 );
 
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p5, 0, 0 );
    placeLine ( GRid_list, &grCount, p5, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p12, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p1, p12, p2, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* points to be placed for topflange */

    /* p38 - top flange left point */
    varY = -FrameHeight * FLGTHK;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p38 );    

    /* p37 - top flange right point */
    proj_pnt_on_line_2_pts_vec( p4, p5, mcxvec, p38, p37);
    
    placeLine ( GRid_list, &grCount, p37, p38, 0, 0 );
    
}

/* ========================================================================= */

draw12()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.7 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.7 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    /* p9 top of bottom radius point */
    varY = 0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p9 );

    /* p10 bottom of bottom radius point */
    varX = Flip * 0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p1, tmp, p10 );

    /* p11 top of top radius point */
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p2, tmp, p11 );

    /* p12 bottom of top radius point */
    varX = Flip * 0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p12 );

    placeLine ( GRid_list, &grCount, p12, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p10, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p2, p12, p11, 1, 0, 0 );    
    create_arc_by_center( GRid_list, &grCount, p1, p9, p10, 1, 0, 0 );

    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 

    /* points to be placed for topflange */
            
}

/* ========================================================================= */


draw13()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p12 top point */
    varY = 0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p12 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 outside radius point */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /*p10 bottom right point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    /*p11 bottom radius right point */
    varX = Flip * 0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p1, tmp, p11 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p6, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p10, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p11, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p1, p11, p12, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */

draw14()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.85 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius top point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale(mcyvec, varY, tmp);
    v_add( p7, tmp, p8);
    
    /* p9 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );
      
    /* p10 bottom left point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p6, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p10, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 
    
    /* Place Top Flange */	
    drawTopFlange();            
}

/* ========================================================================= */

draw53()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.7 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.7 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 
    
    /* Place Top Flange */	
    drawTopFlange();            
}

/* ========================================================================= */

draw54()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.7 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.2 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.1 * FrameWidth;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    /*p9 big radius start point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /*p10 big radius center point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p9, tmp, p10 );

    /*p11 big radius end point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 big radius top point */
    varY = 0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p10, tmp, p12 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p10, p9, p12, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p10, p12, p11, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */

draw55()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.85 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale(mcyvec, varY, tmp);
    v_add( p6, tmp, p7);
    
    /* p8 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );
      
    /* p9 bottom skew point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p8, tmp, p9 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 
    
    /* Place Top Flange */	
    drawTopFlange();            
}

/* ========================================================================= */


draw56()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 outside radius point */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /*p10 bottom right point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    /*p11 bottom radius right point */
    varX = Flip * -0.2 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 bottom radius center point */
    varX = Flip * -0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );
 
   /*p13 bottom radius top point */
    varY = 0.1 * FrameWidth;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );

    /*p14 bottom radius left point */
    varX = Flip * -0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p12, tmp, p14 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p6, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p10, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p11, 0, 0 );
    placeLine ( GRid_list, &grCount, p14, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p12, p11, p13, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p12, p13, p14, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */

draw59()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.85 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius top point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale(mcyvec, varY, tmp);
    v_add( p7, tmp, p8);
    
    /* p9 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );
      
    /* p10 bottom left point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p6, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p10, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 
    
    /* Place Top Flange */	
    drawTopFlange();            
}

/* ========================================================================= */

draw60()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 outside radius point */
    varX = Flip * -0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.05 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /* p10 bottom radius point */
    varY =  -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p8, tmp, p10 );

    /*p11 top of bottom right point */
    varY = -0.25 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p10, tmp, p11 );
 
    /*p12 bottom right point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p11, tmp, p12 );
  
    /*p13 bottom of bottom right point */
    varX = Flip * -0.05 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p12, tmp, p13 );

    /*p14 bottom radius right point */
    varX = Flip * -0.25 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p13, tmp, p14 );

    /*p15 bottom radius center point */
    varX = Flip * -0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p14, tmp, p15 );
 
   /*p16 bottom radius top point */
    varY = 0.1 * FrameWidth;
    v_scale( mcyvec, varY, tmp );
    v_add( p15, tmp, p16 );

    /*p17 bottom radius left point */
    varX = Flip * -0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p15, tmp, p17 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p6, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p11, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p13, 0, 0 );
    placeLine ( GRid_list, &grCount, p13, p14, 0, 0 );
    placeLine ( GRid_list, &grCount, p17, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p8, p9, p10, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p15, p14, p16, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p15, p16, p17, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */
draw61()
{
    double tmp[3], aux[3], varX, varY, vec[3];
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top corner radius point */
    varY = 0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );

    /* p3 top point */
    varY = 0.9 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p5, tmp, p6 );
    
    /* p7 outside radius point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.15 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.14 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, aux );
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp);
    v_add( aux, tmp, p9);
    
    /*p10 bottom right skew point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    /*p11 bottom right point */
    varX = Flip * -0.15 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 bottom radius right point */
    varX = Flip * 0.1 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p1, tmp, p12 );
 
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p5, 0, 0 );
    placeLine ( GRid_list, &grCount, p5, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p12, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p1, p12, p2, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* points to be placed for topflange */

    /* p38 - top flange left point */
    varY = -FrameHeight * FLGTHK;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p38 );    

    /* p37 - top flange right point */
    proj_pnt_on_line_2_pts_vec( p4, p5, mcxvec, p38, p37);
    
    placeLine ( GRid_list, &grCount, p37, p38, 0, 0 );

    
}

/* ========================================================================= */
draw62()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * 0.7 *FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.75 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * 0.25 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.05 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    
    /* Place a label */
    /* p11 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p11 );

    /* p12 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );

    /* p13 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );
    
    place_label( GRid_list, &grCount, p13, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p12, BottLabel, dim_txt_ht, txt_cs); 

    /* Place Top Flange */	
    drawTopFlange();    
            
}

/* ========================================================================= */

draw63()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.75 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.25 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.05 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    /*p9 big radius start point */
    varX = Flip * -0.15 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /*p10 big radius center point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p9, tmp, p10 );

    /*p11 big radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 big radius top point */
    varY = 0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p10, tmp, p12 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p9, 0, 0 );
    placeLine ( GRid_list, &grCount, p11, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p10, p9, p12, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p10, p12, p11, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */

draw65()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.75 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.25 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.05 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.05 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}

/* ========================================================================= */

draw66()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top radius point */
    varY = 0.075 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );

    /* p3 top point */
    varY = 0.925 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point */
    varY = -0.4 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p5, tmp, p6 );
    
    /* p7 bottom skew point cont. */
    varX = Flip * -0.25 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius center point */
    varY =  -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p7, tmp, p8 );

    /*p9 inside radius point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p8, tmp, p9 );

    /*p10 bottom right point */
    varY = -0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p9, tmp, p10 );

    /*p11 bottom radius right point */
    varX = Flip * -0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p10, tmp, p11 );

    /*p12 bottom radius center point */
    varX = Flip * -0.075 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p11, tmp, p12 );
 
   /*p13 bottom radius top point */
    varY = 0.075 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p12, tmp, p13 );

    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p5, 0, 0 );
    placeLine ( GRid_list, &grCount, p5, p7, 0, 0 );
    placeLine ( GRid_list, &grCount, p9, p10, 0, 0 );
    placeLine ( GRid_list, &grCount, p10, p11, 0, 0 );
    placeLine ( GRid_list, &grCount, p13, p2, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p8, p7, p9, 1, 0, 0 );
    create_arc_by_center( GRid_list, &grCount, p12, p11, p13, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* points to be placed for topflange */

    /* p38 - top flange left point */
    varY = -FrameHeight * FLGTHK;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p38 );    

    /* p37 - top flange right point */
    proj_pnt_on_line_2_pts_vec( p4, p5, mcxvec, p38, p37);
    
    placeLine ( GRid_list, &grCount, p37, p38, 0, 0 );
}

/* ========================================================================= */

drawTopFlange()
{
    double tmp[3], aux[3], varX, varY, vec[3];
    
    /* points to be placed for topflange */

    /* p38 - top flange left point */
    varY = -FrameHeight * FLGTHK;
    v_scale( mcyvec, varY, tmp );
    v_add( p2, tmp, p38 );    

    /* p37 - top flange right point */
    proj_pnt_on_line_2_pts_vec( p3, p4, mcxvec, p38, p37);
    
    placeLine ( GRid_list, &grCount, p37, p38, 0, 0 );

}

/* ========================================================================= */

alternate65()
{
    double tmp[3], aux[3], varX, varY;
  
    /* p1 - origin */  
    v_equal( mcorigin , p1 );
    //printpt("p1", p1 );

    /* p2 top point */
    varY = FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p2 );
    
    /* p3 top right point */
    varX = Flip * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p2, tmp, p3 );
    
    /* p4 top skew point */
    varY = -0.2 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p3, tmp, p4 );
    
    /* p5 bottom skew point */
    varY = -0.7 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p4, tmp, p5 );
    
    /* p6 bottom skew point cont. */
    varX = Flip * -0.2 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p5, tmp, p6 );

    /* p7 radius center point */
    varY = -0.1 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p6, tmp, p7 );

    /* p8 radius end point */
    varX = Flip * -0.1 * FrameHeight;
    v_scale( mcxvec, varX, tmp );
    v_add( p7, tmp, p8 );

    placeLine ( GRid_list, &grCount, p2, p3, 0, 0 );
    placeLine ( GRid_list, &grCount, p3, p4, 0, 0 );
    placeLine ( GRid_list, &grCount, p4, p6, 0, 0 );
    placeLine ( GRid_list, &grCount, p8, p1, 0, 0 );

    create_arc_by_center( GRid_list, &grCount, p7, p6, p8, 1, 0, 0 );
    
    /* Place a label */
    /* p21 bottom label height point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p1, tmp, p21 );

    /* p22 bottom label point */
    varX = Flip * 0.3 * FrameWidth;
    v_scale( mcxvec, varX, tmp );
    v_add( p21, tmp, p22 );

    /* p23 top label point */
    varY = 0.3 * FrameHeight;
    v_scale( mcyvec, varY, tmp );
    v_add( p22, tmp, p23 );
    
    place_label( GRid_list, &grCount, p23, TopLabel, dim_txt_ht, txt_cs );
    place_label( GRid_list, &grCount, p22, BottLabel, dim_txt_ht, txt_cs );

    /* Place Top Flange */	
    drawTopFlange();    
}






