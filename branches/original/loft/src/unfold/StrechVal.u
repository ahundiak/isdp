#include <stdio.h>
#include "cieveryone.h"
#include "cimacros.h"
#include "ci_mac_def.h"
#include "vlstrechval.h"

struct 	GRid		CI_MACRO_ID;

extern long     VLcreStrechValues();

/* ========================================================================= */
main (){
        IGRlong         sts;
        IGRchar         *temp_names[MACRO_NB_TEMP];
        IGRchar         *feet_names[MACRO_NB_FFEET + MACRO_NB_VFEET];
        IGRint           temp_types[MACRO_NB_TEMP];
        IGRint          i,j;
        IGRchar         temp_buff[MACRO_NB_VFEET * MAX_CHA_TEMP];
        GRobj           ci_mac_def1;
        IGRint          temp_number,feet_number;

        temp_number =  MACRO_NB_TEMP;
        feet_number = MACRO_NB_FFEET + MACRO_NB_VFEET;

        temp_names[IDX_UNW]  = NAM_UNW;
        temp_types[IDX_UNW] =macro_generic|plug_generic|text_type |double_type;

        temp_names[IDX_STEPU]  = NAM_STEPU;
        temp_types[IDX_STEPU]= macro_generic|plug_generic|text_type|double_type;

        temp_names[IDX_STEPV]  = NAM_STEPV;
        temp_types[IDX_STEPV]= macro_generic|plug_generic|text_type|double_type;

        feet_names[IDX_FFEET] = NAM_FFEET;
        for ( i=MACRO_NB_FFEET; i<MACRO_NB_FFEET + MACRO_NB_VFEET; i=i+1) {
          sprintf ( &temp_buff[(i - MACRO_NB_FFEET)*MAX_CHA_TEMP],
                    "%s%d", NAM_VFEET, i - MACRO_NB_FFEET);
          feet_names[i] = &temp_buff[(i - MACRO_NB_FFEET)*MAX_CHA_TEMP];
        }
        ci_mac_def1 = NULL_OBJID;
        ac$cimacdef(    cimacdef          = ci_mac_def1,
                        status            = &sts,
                        name              = VLstrechVal,
                        temp_num          = temp_number,
                        temp_names        = temp_names,
                        temp_types        = temp_types,
                        extern_feet_num   = feet_number,
                        extern_feet_names = feet_names );
        if (!(sts&1)) goto quit;
quit:
return 1;
}
/* ========================================================================= */
