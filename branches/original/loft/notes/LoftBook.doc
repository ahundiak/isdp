

		INTERGRAPH	INTERGRAPH	INTERGRAPH	INTERGRAPH






		LLL            OO        FFFFFFFFF   TTTTTTTTTTTTT
		LLL          OO  OO      FFFFFFFFF   TTTTTTTTTTTTT
		LLL         OOO  OOO     FFF              TTT
		LLL        OOOO  OOOO    FFFFFF           TTT
		LLL        OOOO  OOOO    FFFFFF           TTT
		LLL         OOO  OOO     FFF              TTT
		LLLLLLLL     OO  OO      FFF              TTT
		LLLLLLLL       OO        FFF              TTT

		__________________________________________________
		__________________________________________________






			###############################
			#                             #
			#        LOFTBOOK  (BOOK)     #
			#                             #
			#	 DOCUMENTATION        #
			#                             #
			###############################





		Summary
		=======

		I	- Loftbook Over View

		II	- Geometric Elements

				Aft Perp.
				Baseline
				Centerline
				Forward Perp.
				Hull
				Midships
				Origin

				Butt
				Buttock
				Deck
				Fob
				Fos
				Frame
				Knuckle
				Longitudinal
				Seam
				Station
				Stem
				Stern
				Tangent
				Waterline

		III	- State Keywords
				vl-lb-StationFrameStart
				vl-lb-StationFrameReport
				vl-lb-StationFrameEnd
				vl-lb-WaterlineFrameStart
				vl-lb-WaterlineFrameReport
				vl-lb-WaterlineFrameEnd
				vl-lb-WaterlineStationStart
				vl-lb-WaterlineStationReport
				vl-lb-WaterlineStationEnd
				vl-lb-WaterlineButtockStart
				vl-lb-WaterlineButtockReport
				vl-lb-WaterlineButtockEnd
				vl-lb-StemFrameStart
				vl-lb-StemFrameReport
				vl-lb-StemFrameEnd
				vl-lb-SternFrameStart
				vl-lb-SternFrameReport
				vl-lb-SternFrameEnd
				vl-lb-FosWaterlineStart
				vl-lb-FosWaterlineReport
				vl-lb-FosWaterlineEnd
				vl-lb-FosFrameStart
				vl-lb-FosFrameReport
				vl-lb-FosFrameEnd
				vl-lb-FobFrameStart
				vl-lb-FobFrameReport
				vl-lb-FobFrameEnd
				vl-lb-FobButtockStart
				vl-lb-FobButtockReport
				vl-lb-FobButtockEnd
				vl-lb-KnuckleFrameStart
				vl-lb-KnuckleFrameReport
				vl-lb-KnuckleFrameEnd
				vl-lb-KnuckleWaterlineStart
				vl-lb-KnuckleWaterlineReport
				vl-lb-KnuckleWaterlineEnd
				vl-lb-KnuckleButtockStart
				vl-lb-KnuckleButtockReport
				vl-lb-KnuckleButtockEnd
				vl-lb-TangentFrameStart
				vl-lb-TangentFrameReport
				vl-lb-TangentFrameEnd
				vl-lb-TangentWaterlineStart
				vl-lb-TangentWaterlineReport
				vl-lb-TangentWaterlineEnd
				vl-lb-TangentButtockStart
				vl-lb-TangentButtockReport
				vl-lb-TangentButtockEnd
				vl-lb-DeckFrameStart
				vl-lb-DeckFrameReport
				vl-lb-DeckFrameEnd
				vl-lb-DeckWaterlineStart
				vl-lb-DeckWaterlineReport
				vl-lb-DeckWaterlineEnd
				vl-lb-SeamFrameStart
				vl-lb-SeamFrameReport
				vl-lb-SeamFrameEnd
				vl-lb-ButtWaterlineStart
				vl-lb-ButtWaterlineReport
				vl-lb-ButtWaterlineEnd
				vl-lb-LongitudinalFrameStart
				vl-lb-LongitudinalFrameReport
				vl-lb-LongitudinalFrameEnd

		IV	- Function Keywords
				vl-lb-CurveName()
				vl-lb-PlaneName()
				vl-lb-OriginValue()
				vl-lb-AbsoluteInterValue()
				vl-lb-AbsoluteCurveValue()
				vl-lb-AbsolutePlaneValue()
				vl-lb-RelativeInterValue()
				vl-lb-RelativeCurveValue()
				vl-lb-RelativePlaneValue()
				vl-lb-AbsoluteInterList()
				vl-lb-AbsoluteCurveList()
				vl-lb-AbsolutePlaneList()
				vl-lb-RelativeInterList()
				vl-lb-RelativeCurveList()
				vl-lb-RelativePlaneList()
				vl-lb-OtherInterValue()
				vl-lb-OtherInterList()
				vl-lb-AbsoluteStartValue()
				vl-lb-RelativeStartValue()
				vl-lb-AbsoluteEndValue()
				vl-lb-RelativeEndValue()
				vl-lb-SetUnitDivisor()
				vl-lb-NearStationName()
				vl-lb-NearStationDistance()

		IV	- Minimum requirements
			1) Workflow
			2) Mandatory Data [Prepare Loftbook Data]
			3) Displacement Stations Data [Prepare Loftbook Data]
			4) Minimum Data




I - LOFTBOOK OVER VIEW
======================

	To use I_LOFT loftbook generation system, an user ASCII file is read by
	I_STRUCT Apfel-Strudel language.

	The hardcoded name for this ASCII file is : "LBsetup".
        The I/LOFT product delivers the default file :

                        "$LOFT/config/drawing/LBsetup".

        Like in I_VDS drawing extraction, if an "LBsetup" file already exists
        in the working directory, it is used instead of the default file.

	For a better management of unit system, two includes files exist :

                        "$LOFT/config/drawing/LBdefine.eng"
                        "$LOFT/config/drawing/LBdefine.met"

        During installation of I/LOFT one of them is copied into :

                        "$LOFT/config/drawing/LBdefine"




II - GEOMETRIC ELEMENTS
=======================

o Aft Perp.	Aft Perpendicular (AP) : Plane along X axis.
o Baseline	Plane along Z axis.
o Centerline	Plane along Y axis.
o Forward Perp.	Forward Perpendicular (FP) : Plane along X axis.
o Hull		Ship half hull surface.
o Midships	Plane along X axis (half distance between AP and FP).
o Origin	Plane along X axis : must be AP or FP.

o Butt		Planar curve along X axis.
o Buttock	Plane along Y axis. 
o Deck		3D curve.
o Fob		Flat of Bottom : planar curve.
o Fos		Flat of Side : planar curve.
o Frame		Plane along X axis.
o Knuckle	Knuckle Line : 3D curve.
o Longitudinal	3D curve.
o Seam		3D curve.
o Station	Displacement Station : Plane along X axis (generated).
o Stem		Forward planar curve along Y axis.
o Stern		Aft planar curve along Y axis.
o Tangent	3D curve.
o Waterline	Planar curve along Z axis.




III - STATE KEYWORDS
====================

------------------------ Displacement Stations / Frames Table ------------
o vl-lb-StationFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-StationFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-StationFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Frame Crossings with Waterlines -----------------
o vl-lb-WaterlineFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-WaterlineFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-WaterlineFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Station Crossings with Waterlines ---------------
o vl-lb-WaterlineStationStart :
	This is the first block processed.
        The header is printed.

o vl-lb-WaterlineStationReport :
	This block is processed for each displacement station.
	The output values are printed.

o vl-lb-WaterlineStationEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Buttock Crossings with Waterlines ---------------
o vl-lb-WaterlineButtockStart :
	This is the first block processed.
        The header is printed.

o vl-lb-WaterlineButtockReport :
	This block is processed for each buttock.
	The output values are printed.

o vl-lb-WaterlineButtockEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Stem Profile Crossings with Frames --------------
o vl-lb-StemFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-StemFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-StemFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Stern Profile Crossings with Frames -------------
o vl-lb-SternFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-SternFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-SternFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Flat of Side Crossings with Waterlines ----------
o vl-lb-FosWaterlineStart :
	This is the first block processed.
        The header is printed.

o vl-lb-FosWaterlineReport :
	This block is processed for each waterline.
	The output values are printed.

o vl-lb-FosWaterlineEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Flat of Side Crossings with Frames --------------
o vl-lb-FosFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-FosFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-FosFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Flat of Bottom Crossings with Frames ------------
o vl-lb-FobFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-FobFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-FobFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Flat of Bottom Crossings with Buttocks ----------
o vl-lb-FobButtockStart :
	This is the first block processed.
        The header is printed.

o vl-lb-FobButtockReport :
	This block is processed for each buttock.
	The output values are printed.

o vl-lb-FobButtockEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Knuckle Crossings with Frames -------------------
o vl-lb-KnuckleFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-KnuckleFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-KnuckleFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Knuckle Crossings with Waterlines ---------------
o vl-lb-KnuckleWaterlineStart :
	This is the first block processed.
        The header is printed.

o vl-lb-KnuckleWaterlineReport :
	This block is processed for each waterline.
	The output values are printed.

o vl-lb-KnuckleWaterlineEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Knuckle Crossings with Buttocks -----------------
o vl-lb-KnuckleButtockStart :
	This is the first block processed.
        The header is printed.

o vl-lb-KnuckleButtockReport :
	This block is processed for each buttock.
	The output values are printed.

o vl-lb-KnuckleButtockEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Tangent Crossings with Frames -------------------
o vl-lb-TangentFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-TangentFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-TangentFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Tangent Crossings with Waterlines ---------------
o vl-lb-TangentWaterlineStart :
	This is the first block processed.
        The header is printed.

o vl-lb-TangentWaterlineReport :
	This block is processed for each waterline.
	The output values are printed.

o vl-lb-TangentWaterlineEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Tangent Crossings with Buttocks -----------------
o vl-lb-TangentButtockStart :
	This is the first block processed.
        The header is printed.

o vl-lb-TangentButtockReport :
	This block is processed for each buttock.
	The output values are printed.

o vl-lb-TangentButtockEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Deck Crossings with Frames ----------------------
o vl-lb-DeckFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-DeckFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-DeckFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Deck Crossings with Waterlines ------------------
o vl-lb-DeckWaterlineStart :
	This is the first block processed.
        The header is printed.

o vl-lb-DeckWaterlineReport :
	This block is processed for each waterline.
	The output values are printed.

o vl-lb-DeckWaterlineEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Seam Crossings with Frames ----------------------
o vl-lb-SeamFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-SeamFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-SeamFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Butt Crossings with Waterlines ------------------
o vl-lb-ButtWaterlineStart :
	This is the first block processed.
        The header is printed.

o vl-lb-ButtWaterlineReport :
	This block is processed for each waterline.
	The output values are printed.

o vl-lb-ButtWaterlineEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------

------------------------ Longitudinal Crossings with Frames --------------
o vl-lb-LongitudinalFrameStart :
	This is the first block processed.
        The header is printed.

o vl-lb-LongitudinalFrameReport :
	This block is processed for each frame.
	The output values are printed.

o vl-lb-LongitudinalFrameEnd :
	This is the last block processed.
        The trailer is printed.
--------------------------------------------------------------------------




IV - FUNCTION KEYWORDS
======================

o vl-lb-SetUnitDivisor() :
	Sets an unit divisor value in Apfel-Strudel context.



All the following functions return values that will be printed out by the
function vl-Print(). The unit divisor management is internal to each function.

o vl-lb-CurveName() :
	Returns the name of the processed curve.

	synopsys :
	$nam := vl-lb-CurveName();
		$nam is a string.

o vl-lb-PlaneName() :
	Returns the name of the processing plane or planar curve.

	synopsys :
	$nam := vl-lb-PlaneName();
		$nam is a string.

o vl-lb-NearStationName() :
	Returns the name of the displacement station nearest to the processing
	frame only if this displacement station is not nearer to another frame.
	Only used for "Displacement Stations / Frames Table" chapter.

	synopsys :
	$nam := vl-lb-NearStationName();
		$nam is a string.

	If the nearest displacement station is nearer to another frame,
	a "" string is returned.

o vl-lb-OriginValue() :
	Returns the value of origin used for relative results in a direction. 

	synopsys :
	$val := vl-lb-OriginValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

		axis		$val
		----		----
		"x" or "X"	x value of Aft Perpendicular position.
		"y" or "Y"	y value of Centerline position.
		"z" or "Z"	z value of Baseline position.
	
o vl-lb-AbsoluteInterValue() :
	Returns the intersection absolute value in a direction.
	No value is returned if asked intersection don't exist.
	If multiple crossings, the lowest value is returned (in a direction).

	synopsys :
	$val := vl-lb-AbsoluteInterValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

o vl-lb-AbsoluteCurveValue() :
	Returns the processed curve absolute value in a direction.
	No value is returned if asked intersection don't exist.

	synopsys :
	$val := vl-lb-AbsoluteCurveValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

o vl-lb-AbsolutePlaneValue() :
	Returns the processing plane absolute value in a direction.
	A value is returned even if asked intersection don't exist.

	synopsys :
	$val := vl-lb-AbsolutePlaneValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

o vl-lb-RelativeInterValue() :
	As vl-lb-AbsoluteInterValue() but returned value is relative.

o vl-lb-RelativeCurveValue() :
	As vl-lb-AbsoluteCurveValue() but returned value is relative.

o vl-lb-RelativePlaneValue() :
	As vl-lb-AbsolutePlaneValue() but returned value is relative.

o vl-lb-OtherInterValue() :
	Following a vl-lb-AbsoluteInterValue() or vl-lb-RelativeInterValue(),
	this function returns the others values (in case of multiple crossing).
	Up to 4 distincts intersections can be retrieved.
	The intersection values are ordered by vl-lb-AbsoluteInterValue()
	or vl-lb-RelativeInterValue() call.

	synopsys :
	$val := vl-lb-OtherInterValue( <number> );

		number : I	0, 1, 2 and 3 are allowed. 0 is the default.
				0 : first intersection value (also returned by
				    vl-lb-AbsoluteInterValue() or
				    vl-lb-RelativeInterValue() ).
				1 : second intersection value.
				2 : third intersection value.
				3 : forth intersection value.

		if asked intersection don't exist, a "-" is returned.

o vl-lb-AbsoluteStartValue() :
	Returns the start point value of a curve, in a direction.

	synopsys :
	$val := vl-lb-AbsoluteStartValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

o vl-lb-RelativeStartValue() :
	As vl-lb-AbsoluteStartValue() but returned value is relative.

o vl-lb-AbsoluteEndValue() :
	Returns the end point value of a curve, in a direction.

	synopsys :
	$val := vl-lb-AbsoluteStartValue( [axis] );

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".

o vl-lb-RelativeEndValue() :
	As vl-lb-AbsoluteEndValue() but returned value is relative.

o vl-lb-AbsoluteInterList() :
	Returns a list of intersections, in a direction.
	Only used in [Frame Crossings with Waterlines] 
		     [Station Crossings with Waterlines]
		     [Buttock Crossings with Waterlines] chapters.
	If one or several intersections don't exist, a blank replace the asked
	value.

	synopsys :
	$list := vl-lb-AbsoluteInterList( [axis], [index], [format]);

		[axis] : S	"x", "X", "y", "Y", "z" and "Z" are accepted.
				default is "x".
		[index] :	see vl-Print() for explanations.
		[format] :	see vl-Print() for explanations.

o vl-lb-AbsoluteCurveList() :
	As vl-lb-AbsoluteInterList() but all curves values in a direction are
	returned.

o vl-lb-AbsolutePlaneList() :
	As vl-lb-AbsoluteInterList() but all planes values in a direction are
	returned.

o vl-lb-RelativeInterList() :
	As vl-lb-AbsoluteInterList() but returned values are relative.

o vl-lb-RelativeCurveList() :
	As vl-lb-AbsoluteCurveList() but returned values are relative.

o vl-lb-RelativePlaneList() :
	As vl-lb-AbsolutePlaneList() but returned values are relative.

o vl-lb-OtherInterList() :
	As vl-lb-OtherInterValue(), this function returns the list of 
	intersection values in cases of multiple crossing.
	Only used in [Frame Crossings with Waterlines] 
		     [Station Crossings with Waterlines]
		     [Buttock Crossings with Waterlines] chapters.
	Up to 4 distincts intersections list can be retrieved.
	The intersection values are ordered (for each curve) by
	vl-lb-AbsoluteInterList() or vl-lb-RelativeInterList() call.
	If one or several intersections don't exist, a blank replace the asked
	value.

	synopsys :
	$list := vl-lb-AbsoluteInterList( [axis], [index], [format]);

		number : I	0, 1, 2 and 3 are allowed. 0 is the default.
				0 : first intersection value (also returned by
				    vl-lb-AbsoluteInterList() or
				    vl-lb-RelativeInterList() ).
				1 : second intersections list.
				2 : third intersections list.
				3 : forth intersections list.
		[index] :	see vl-Print() for explanations.
		[format] :	see vl-Print() for explanations.


o vl-lb-NearStationDistance() :
	Returns the distance between the displacement station nearest to the
	processing frame and the frame only if this displacement station is not
	nearer to another frame.
	Only used for "Displacement Stations / Frames Table" chapter.

	synopsys :
	$val := vl-lb-NearStationDistance();

	If the nearest displacement station is nearer to another frame,
	a "-" string is returned.


IV - MINIMUM REQUIREMENTS
=========================

1) Workflow
   --------

        1) Open a blank Loft design file
        2) Set path to <hull_surf> for example.
        3) Attach hull surface, waterlines, butts, seams and frames
           in read-only reference(s).
        4) Activate [Turn On Reference File Locate].
        5) Set layer/symbology (will useful for displacement stations).
        6) Activate [Prepare Loftbook Data] command ...
        7) Activate [Generate Loftbook ASCII file] command ...

2) Mandatory Data [Prepare Loftbook Data]
   --------------

        1) [Aft Perp.]          Origin for X coordinate output.
        2) [Baseline]           Origin for Z coordinate output.
        3) [Centerline]         Origin for Y coordinate output.
        4) [Hull]               Without hull surface no loftbook.

3) Displacement Stations Data [Prepare Loftbook Data]
   --------------------------

        Displacement stations are an alternate frames set (along X axis).

        1) [Aft Perp.]          1st extremity of displacement stations.
        2) [Forward Perp.]      2nd extremity of displacement stations.
        3) [Midships]           Geometric center of [1st,2nd] extremities.
        4) [Origin]             Can be 1st or 2nd extremity.
        5) [Station]            Generate station frames from Origin to other
                                extremity, centered on Midships.
        

4) Minimum Data
   ------------

        Loftbook Chapter                        Mandatory Data
        ----------------                        --------------
        [Generate Loftbook ASCII file]          [Prepare Loftbook Data]

 1) [Displacement Stations / Frames Table]      [Station]          [Frame]
 2) [Frame Crossings with Waterlines]           [Frame]            [Waterline]
 3) [Station Crossings with Waterlines]         [Station]          [Waterline]
 4) [Buttock Crossings with Waterlines]         [Buttock]          [Waterline]
 5) [Stem Profile Crossings with Frames]        [Stem]             [Frame]
 6) [Stern Profile Crossings with Frames]       [Stern]            [Frame]
 7) [Flat of Side Crossings with Waterlines]    [Flat-of-Side]     [Waterline]
 8) [Flat of Side Crossings with Frames]        [Flat-of-Side]     [Frame]
 9) [Flat of Bottom Crossings with Waterlines]  [Flat-of-Bottom]   [Waterline]
10) [Flat of Bottom Crossings with Frames]      [Flat-of-Bottom]   [Frame]
11) [Knuckle Crossings with Frames]             [Knuckle]          [Frame]
12) [Knuckle Crossings with Waterlines]         [Knuckle]          [Waterline]
13) [Knuckle Crossings with Buttocks]           [Knuckle]          [Buttock]
14) [Tangent Crossings with Frames]             [Tangent]          [Frame]
15) [Tangent Crossings with Waterlines]         [Tangent]          [Waterline]
16) [Tangent Crossings with Buttocks]           [Tangent]          [Buttock]
17) [Deck Crossings with Frames]                [Deck]             [Frame]
18) [Deck Crossings with Waterlines]            [Deck]             [Waterline]
19) [Seam Crossings with Frames]                [Seam]             [Frame]
20) [Butt Crossings with Waterlines]            [Butt]             [Waterline]
21) [Longitudinal Crossings with Frames]        [Longitudinal]     [Frame]


